{"version":3,"sources":["utils.js","Ball.js","Rectangle.js","ClickableBall.js","HUD.js","World.js","initClickables.js","Welcome.js","Level.js","Level1.js","Level2.js","Level3.js","BallPen.jsx","serviceWorker.js","index.js"],"names":["countDecimals","x","toString","split","length","getMiddleOfCanvas","width","height","cords","y","getRandomColor","Math","floor","random","getRandomInt","min","max","ceil","getRandomFloat","decimals1","decimals2","retDecimals","toFixed","parseFloat","isOverLapping","x1","y1","x2","y2","distance","writeToScreen","ctx","msg","color","font","beginPath","fillStyle","fillText","closePath","Ball","properties","this","type","ballID","xCord","yCord","radius","dx","dy","gravity","friction","kineticLoss","kineticGain","isGoingRight","isGoingDown","isGoingLeft","isGoingUp","nextX","nextY","canGoLeft","canGoRight","canGoDown","canGoUp","dxBoost","dyBoost","maxSpeed","decelerate","ratio","rate","accelerate","dxLoss","dyLoss","xDiff","yDiff","sqrt","arc","PI","fill","allBalls","i","otherBall","minDistance","willOverlap","dyRatio","dxRatio","cnt","console","log","accelerateBySize","rectangle","screenWidth","screenHeight","isOverlapping","isOverLappingBall","hitCount","xCenter","yCenter","yTop","isResolved","maxWidth","maxHeight","willOverlapBottom","hitBottom","willOverlapTop","hitTop","willOverlapRight","hitRight","willOverlapLeft","hitLeft","otherBalls","rectangles","shrink","nearestX","xLeft","nearestY","minWidth","minHeight","sWidth","sHeight","wallFriction","balls","resetSurroundings","setNextCoordinates","handleRectangleInteractions","handleWallCollisions","handleBallCollisions","handleMovement","updateCoordinates","applyGravity","modGroup","isLegalBall","ball","makeRandomBall","minRadius","maxRadius","randomRadius","randomX","randomY","randomDX","randomDY","newBall","Rectangle","rectID","xRight","yBottom","abs","isLabeled","isDraggable","isDestructible","rect","entities","handleWallInteractions","handleEntityInteractions","timeCnt","isGoingup","entity","handleBallInteractions","ballDistanceX","ballDistanceY","sideDistance","vertDistance","willOverLapBall","yYop","resetMovement","clientX","clientY","xMid","yMid","isLegalMovement","currX","currY","ret","ClickableBall","props","href","faUnicode","window","open","blur","focus","fontSize","makeRandomClickableBall","HUD","w","ballMsg","brickMsg","bottom","h","ballTemplate","brickTemplate","background","fontColor","ballCount","brickCount","score","lDiff","maxLength","World","backgroundColor","rectangleWidth","rectangleHeight","ballFriction","kineticKeep","initBallCnt","reservedKeys","ballCnt","hasGravity","isLeavingTrails","hasWallFriction","hasBallFriction","hasInertia","didInit","isGameGoing","hasBrandBalls","hasMovableRect","clickTimer","xCanvasPos","yCanvasPos","fillRect","draw","label","canvas","getBoundingClientRect","xClick","left","yClick","top","clickedBall","didClickBall","handleClick","setRandomDirection","push","event","elapsedTime","Date","handleCanvasClick","changedTouches","round","getContext","handleRectangleDrag","updateRectangles","keyCode","includes","speed","isHeldDown","timePressed","handleMove","initRectangles","rectangleTimerID","setInterval","ballTimerID","updateBalls","clearInterval","processDrag","drawBackground","handleWindowResize","brandBalls","clickables","__name","retBalls","clickable","isLegal","initClickables","middleCords","initBalls","move","drawBalls","drawRectangle","updateDisplay","isDisplayingHud","labelBallCnt","labelBrickCnt","labelScore","Welcome","choiceRects","choices","hBuffer","vBuffer","rHeight","fWidth","fHeight","fColor","buttonColor","gitHref","initChoiceRects","drawWelcomeScreen","drawFrame","drawLabels","r1","r2","r3","clickedButton","didClickRectangle","rects","contains","Level","hasIneritia","brickWidth","brickHeight","makeDestructibleRects","splice","rLen","isDestructing","keycode","Level1","Level2","possibleRects","padding","bx","Level3","hPossibleRects","vPossibleRects","j","by","paddleBottomY","BallPen","currentLevel","world","updateWindowDimensions","bind","handleKeydown","handleKeyup","handleCanvasMouseDown","handleCanvasMouseMove","handleCanvasMouseUp","handleInputChange","handleToggleButton","state","target","value","checked","name","setState","document","addEventListener","ev","preventDefault","stopImmediatePropagation","passive","removeEventListener","canvasRef","eMsg","parseInt","updateWorld","key","isKeyRegistered","handleKeymove","isReserved","body","handleMount","statusID","updateGameStatus","handleUnmount","nextWorld","componentWillUnmount","componentDidMount","innerWidth","innerHeight","handleScreenResize","buttonStyle","style","paddingRight","paddingLeft","ref","id","fontFamily","fontWeight","border","touchAction","onMouseDown","onTouchStart","onClick","e","shrinkBalls","dxGain","dyGain","accelerateBalls","decelerateBalls","React","Component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+QAAO,SAASA,EAAcC,GAC7B,OAAKA,EAAE,IAAO,GACNA,EAAEC,WAAWC,MAAM,KAAK,GAAGC,QAC5B,EAQD,SAASC,EAAkBC,EAAOC,GACvC,IAAIC,EAAQ,GAGZ,OAFAA,EAAMP,EAAIK,EAAM,EAChBE,EAAMC,EAAIF,EAAO,EACVC,EAEF,SAASE,IAKf,MADU,OAHiC,IAAhCC,KAAKC,MAAsB,EAAhBD,KAAKE,UAGF,KAFmB,IAAhCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAEY,KADI,IAAhCF,KAAKC,MAAsB,EAAhBD,KAAKE,UAC0B,IAGhD,SAASC,EAAaC,EAAKC,GAGjC,OAFAD,EAAMJ,KAAKM,KAAKF,GAChBC,EAAML,KAAKC,MAAMI,GACVL,KAAKC,MAAMD,KAAKE,UAAYG,EAAMD,EAAM,IAAMA,EAE/C,SAASG,EAAeH,EAAKC,GAEnC,IAAMG,EAAYnB,EAAce,GAC1BK,EAAYpB,EAAcgB,GAC1BK,EAAcV,KAAKK,IAAIG,EAAWC,GACpCP,GAAYF,KAAKE,UAAYG,EAAMD,GAAOA,GAAKO,QAAQD,GAE3D,OADAR,EAAYU,WAAWV,GAMjB,SAASW,EAAcC,EAAIC,EAAIC,EAAIC,EAAIC,GAW7C,OAAI,SAACJ,EAAGE,EAAK,GAAT,SAAcD,EAAGE,EAAK,IAAtB,SAA2BC,EAAU,GA8HnC,SAASC,EAAcC,EAAKC,EAAK/B,EAAGQ,GAAqC,IAAlCwB,EAAiC,uDAA3B,QAASC,EAAkB,uDAAb,aACjEH,EAAII,YACJJ,EAAIG,KAAYA,EAChBH,EAAIK,UAAYH,EAChBF,EAAIM,SAASL,EAAK/B,EAAGQ,GACrBsB,EAAIO,YCrLE,IAAMC,EAAb,WACC,WAAYC,GAAY,oBACvBC,KAAKC,KAAS,OACdD,KAAKE,OAAWH,EAAWG,OAC3BF,KAAKR,MAAUO,EAAWP,MAC1BQ,KAAKG,MAAUJ,EAAWI,MAC1BH,KAAKI,MAAUL,EAAWK,MAC1BJ,KAAKK,OAAWN,EAAWM,OAC3BL,KAAKM,GAASP,EAAWO,GACzBN,KAAKO,GAAQR,EAAWQ,GACxBP,KAAKQ,QAAW,IAChBR,KAAKS,SAAY,IACjBT,KAAKU,YAAc,EAAE,EACrBV,KAAKW,YAAc,EAAE,EAErBX,KAAKY,cAAe,EACpBZ,KAAKa,aAAc,EACnBb,KAAKc,aAAc,EACnBd,KAAKe,WAAa,EAClBf,KAAKgB,MAAUhB,KAAKG,MAAQH,KAAKM,GACjCN,KAAKiB,MAAUjB,KAAKI,MAAQJ,KAAKO,GAEjCP,KAAKkB,WAAa,EAClBlB,KAAKmB,YAAa,EAClBnB,KAAKoB,WAAa,EAClBpB,KAAKqB,SAAW,EAzBlB,uDA2BYC,EAASC,GACnBvB,KAAKM,IAAMgB,EACXtB,KAAKO,IAAMgB,EAGRvB,KAAKM,GAAiB,EAAZN,KAAKK,OAAW,MAC5BL,KAAKM,GAAiB,EAAZN,KAAKK,OAAW,KACxBL,KAAKO,GAAiB,EAAZP,KAAKK,OAAW,MAC5BL,KAAKO,GAAiB,EAAZP,KAAKK,OAAW,KAExBL,KAAKM,GAAKN,KAAKwB,WACjBxB,KAAKM,GAAKN,KAAKwB,UACbxB,KAAKO,GAAKP,KAAKwB,WACjBxB,KAAKO,GAAKP,KAAKwB,UAChBxB,KAAKyB,WAAW,EAAE,KAzCpB,yCA6C8C,IAA5BnB,IAA2B,yDAAlBC,IAAkB,yDAATmB,EAAS,uDAAH,GAClCC,EAAO3B,KAAKK,OAAOqB,EACtBpB,GAAMC,EACRP,KAAK4B,WAAWD,EAAMA,GACfrB,EACPN,KAAK4B,WAAWD,EAAM,GACfpB,GACPP,KAAK4B,WAAW,EAAGD,KApDtB,qCAyDK3B,KAAKa,YACPb,KAAK4B,WAAW,EAAG5B,KAAKQ,SACjBR,KAAKe,UACZf,KAAKyB,WAAW,EAAGzB,KAAKQ,SAChBR,KAAKoB,WACbpB,KAAK4B,WAAW,EAAG5B,KAAKQ,WA9D3B,iCAgEYqB,EAAQC,GAClB9B,KAAKM,IAAMuB,EACX7B,KAAKO,IAAMuB,EACR9B,KAAKM,IAAK,IACZN,KAAKM,GAAK,GACRN,KAAKO,IAAK,IACZP,KAAKO,GAAK,KAtEb,iCA4EEP,KAAKK,OAAS,IA5EhB,iCA8EY7C,EAAGQ,GAIb,IAAM+D,EAAS/B,KAAKgB,MAAQxD,EACtBwE,EAAShC,KAAKiB,MAAQjD,EAE5B,OADiBE,KAAK+D,KAAK,SAAAF,EAAO,GAAP,SAAWC,EAAO,MApF/C,2BAuFM1C,GACJA,EAAII,YACJJ,EAAI4C,IACHlC,KAAKG,MACLH,KAAKI,MACLJ,KAAKK,OACL,EAAEnC,KAAKiE,GACP,GAED7C,EAAIK,UAAYK,KAAKR,MACrBF,EAAI8C,OACJ9C,EAAIO,cAlGN,2CAoGsBwC,GAEpB,IAAI,IAAIC,EAAE,EAAGA,EAAED,EAAS1E,OAAQ2E,IAC/B,GAAGtC,KAAKE,SAAWmC,EAASC,GAAGpC,OAA/B,CAEA,IAAIqC,EAAcF,EAASC,GACrBE,EAAeD,EAAUlC,OAASL,KAAKK,OACzCoC,EAAe1D,EAClBiB,KAAKgB,MACLhB,KAAKiB,MACLsB,EAAUvB,MACVuB,EAAUtB,MACVuB,GAED,GAAKC,EAAL,CAIGzC,KAAKgB,MAAQuB,EAAUvB,MAEzBhB,KAAKkB,WAAY,EAGjBlB,KAAKmB,YAAa,EAChBnB,KAAKiB,MAAQsB,EAAUnC,MAEzBJ,KAAKqB,SAAU,EAGfrB,KAAKoB,WAAY,EASlB,IAJA,IACIsB,EAAW1C,KAAKO,GADJ,GAEZoC,EAAW3C,KAAKM,GAFJ,GAGZsC,EAAQ,EACNH,GAkBL,GAjBGzC,KAAKY,aACPZ,KAAKgB,OAAS2B,EACP3C,KAAKc,cACZd,KAAKgB,OAAS2B,GACZ3C,KAAKa,YACPb,KAAKiB,OAASyB,EACP1C,KAAKe,YACZf,KAAKiB,OAASyB,GACfD,EAAe1D,EACdiB,KAAKgB,MACLhB,KAAKiB,MACLsB,EAAUvB,MACVuB,EAAUtB,MACVuB,GAlBc,MAqBfI,GAAO,GACc,CAGpB5C,KAAKiB,MAAQjB,KAAKI,MAClBJ,KAAKgB,MAAQhB,KAAKG,MAClB,MAIF,GA/BgB,KA+BbyC,IAEoB,IAAnB5C,KAAKoB,UAUP,OATGpB,KAAKmB,YAAcnB,KAAKkB,WAC1B2B,QAAQC,IAAI,SACV9C,KAAKmB,YAA0B,IAAZnB,KAAKM,GAC1BN,KAAK+C,kBAAiB,GAAM,GAErB/C,KAAKkB,WAAyB,IAAZlB,KAAKM,IAC9BN,KAAK+C,kBAAiB,GAAM,IAGtB,EAKTR,EAAUd,WAAWzB,KAAKS,SAAUT,KAAKS,UACzCT,KAAKyB,WAAWc,EAAU9B,SAAU8B,EAAU9B,UAE3CT,KAAKU,YAAc,GAAKV,KAAKW,YAAc,IAC7C4B,EAAUX,WAAW5B,KAAKM,GAAKN,KAAKU,YAAa,GACjD6B,EAAUX,WAAW,EAAG5B,KAAKO,GAAKP,KAAKU,aACvCV,KAAKO,IAAQP,KAAKW,YAClBX,KAAKM,IAAQN,KAAKW,cAGpB,OAAO,IAhMT,oCAqME,OAFAkC,QAAQC,IAAI,oBAAsB9C,KAAKE,QACvCF,KAAK4B,WAAW,EAAG,KACZ,IArMT,qCAuMgBnB,GAGC,IAAZT,KAAKO,GAEJP,KAAKe,WAEPf,KAAKe,WAAa,EACff,KAAKoB,UAEPpB,KAAKa,aAAc,EAGnBb,KAAKa,aAAc,GAGbb,KAAKa,aAEZb,KAAKe,WAAY,EACjBf,KAAKa,aAAc,IAGnBb,KAAKe,WAAa,EAClBf,KAAKa,aAAc,GACG,IAAnBb,KAAKoB,WAEPpB,KAAKyB,WAAWhB,EAAU,IAMzBT,KAAKoB,WAAapB,KAAKqB,QAEtBrB,KAAKa,aACPb,KAAKe,WAAa,EAClBf,KAAKa,aAAc,GAEZb,KAAKe,WACZf,KAAKe,WAAa,EAClBf,KAAKa,aAAc,IAGnBb,KAAKe,WAAa,EAClBf,KAAKa,aAAc,GAGbb,KAAKqB,SAGZrB,KAAKe,WAAY,EACjBf,KAAKa,aAAc,GAEZb,KAAKoB,WACZpB,KAAKa,aAAc,EACnBb,KAAKe,WAAa,IAGlBf,KAAKa,aAAc,EACnBb,KAAKe,WAAa,EAClBf,KAAKyB,WAAWhB,EAAU,IAIzBT,KAAKM,IAAK,EAGTN,KAAKoB,WAAapB,KAAKQ,QAAU,GAChCR,KAAKM,GAGLN,KAAKmB,YACPnB,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAEZd,KAAKkB,YACZlB,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,KAIpBd,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAGZd,KAAKY,cAAiBZ,KAAKc,YAW5Bd,KAAKmB,YAAcnB,KAAKkB,UAE5BlB,KAAKY,cACPZ,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,IAGnBd,KAAKc,aAAc,EACnBd,KAAKY,cAAe,GAGdZ,KAAKmB,YAEZnB,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAEZd,KAAKkB,WAEZlB,KAAKc,aAAc,EACnBd,KAAKY,cAAe,IAGpBZ,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAhChBd,KAAKmB,YACPnB,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAEZd,KAAKkB,YACZlB,KAAKc,aAAc,EACnBd,KAAKY,cAAe,GA6BnBZ,KAAKe,WAAaf,KAAKa,aACzBgC,QAAQC,IAAI,qCACV9C,KAAKc,aAAed,KAAKY,cAC3BiC,QAAQC,IAAI,0CApUf,kDAuU6BE,EAAWC,EAAaC,GAEnD,IAAIC,EAAgBH,EAAUI,kBAAkBpD,MAChD,IAAsB,IAAlBmD,EAAJ,CAEAnD,KAAKyB,WAAWuB,EAAUvC,SAAUuC,EAAUvC,UAI9CuC,EAAUK,UAAY,EACnBrD,KAAKgB,MAAQgC,EAAUM,QAEzBtD,KAAKkB,WAAY,EAGjBlB,KAAKmB,YAAa,EAChBnB,KAAKiB,MAAQ+B,EAAUO,QAEzBvD,KAAKqB,SAAU,GAGfrB,KAAKoB,WAAY,EACF,IAAZpB,KAAKO,KAGPP,KAAKqB,SAAU,GAEhBrB,KAAKiB,MAAQ+B,EAAUQ,KAAOxD,KAAKK,QASpC,IALA,IACIqC,EAAW1C,KAAKO,GADJ,GAEZoC,EAAW3C,KAAKM,GAFJ,GAGZsC,EAAQ,EACRa,GAAa,EACXN,GAWL,GAVGnD,KAAKY,aACPZ,KAAKgB,OAAS2B,EACP3C,KAAKc,cACZd,KAAKgB,OAAS2B,GACZ3C,KAAKa,YACPb,KAAKiB,OAASyB,EACP1C,KAAKe,YACZf,KAAKiB,OAASyB,GACfS,EAAgBH,EAAUI,kBAAkBpD,MAd7B,MAef4C,GAAO,GACc,CAGpBa,GAAa,EACb,OAGgB,IAAfA,IACFzD,KAAKiB,MAAQjB,KAAKI,MAClBJ,KAAKgB,MAAQhB,KAAKG,UA/XrB,2CAkYsBuD,EAAUC,EAAWlD,GACzC,IAAMmD,EAAoB5D,KAAK6D,UAAUF,GACnCG,EAAkB9D,KAAK+D,OAAO,GAC9BC,EAAmBhE,KAAKiE,SAASP,GACjCQ,EAAkBlE,KAAKmE,QAAQ,GAClCL,GAAkBF,IAIbA,GACP5D,KAAKyB,WAAW,EAAGhB,GACJ,IAAZT,KAAKO,KACPP,KAAKqB,SAAU,GAEhBrB,KAAKoB,WAAY,EACjBpB,KAAKiB,MAAQ0C,EAAY3D,KAAKK,QAEvByD,IACP9D,KAAKyB,WAAW,EAAGhB,GACnBT,KAAKqB,SAAU,EACfrB,KAAKiB,MAAQ,EAAIjB,KAAKK,SAKpB2D,GAAoBE,GAItBlE,KAAKgB,MAAQhB,KAAKG,MAClBH,KAAKiB,MAAQjB,KAAKI,MAClBJ,KAAKO,GAAK,EACVP,KAAKM,GAAK,EACVuC,QAAQC,IAAI,gCAELkB,GACPhE,KAAKmB,YAAa,EAClBnB,KAAKgB,MAAQ0C,EAAW1D,KAAKK,QAEtB6D,IACPlE,KAAKkB,WAAY,EACjBlB,KAAKgB,MAAQ,EAAIhB,KAAKK,UA3azB,yCAiboBqD,EAAUC,EAAWS,EAAYC,GAChDrE,KAAKI,MAAQJ,KAAKK,OAASsD,IAC7B3D,KAAKI,MAAQuD,EAAY3D,KAAKK,OAC9BL,KAAK4B,WAAW,EAAG,IACnB5B,KAAKsE,UAEHtE,KAAKI,MAAQJ,KAAKK,QAAU,GAC9BL,KAAKsE,UAEHtE,KAAKG,MAAQH,KAAKK,OAASqD,GAAY1D,KAAKG,MAAQH,KAAKK,OAAS,KACjEL,KAAKG,MAAQH,KAAKK,OAASqD,EAC7B1D,KAAKG,MAAQuD,EAAW1D,KAAKK,OAE7BL,KAAKG,MAAQ,EAAIH,KAAKK,OACvBL,KAAK4B,WAAW,GAAI,GACpB5B,KAAKsE,UAEN,IAAI,IAAIhC,EAAE,EAAGA,EAAE8B,EAAWzG,OAAQ2E,IAAI,CACrC,IAAIC,EAAY6B,EAAW9B,GAC3B,GAAGC,EAAUrC,SAAWF,KAAKE,OAEPF,KAAKoD,kBAAkBb,IAE5CvC,KAAKsE,SAEP,IAAI,IAAIhC,EAAE,EAAGA,EAAE+B,EAAW1G,OAAQ2E,IAAI,CACrC,IAAMU,EAAYqB,EAAW/B,GAC7B,GAAGU,EAAUI,kBAAkBpD,MAAM,CAGpC,IAAMuE,EAAWrG,KAAKK,IACrByE,EAAUwB,MACVtG,KAAKI,IAAI0B,KAAKG,MAAO6C,EAAUwB,MAAMxB,EAAUnF,QAE1C4G,EAAWvG,KAAKK,IACrByE,EAAUQ,KACVtF,KAAKI,IAAI0B,KAAKG,MAAO6C,EAAUQ,KAAKR,EAAUlF,SAE5CkC,KAAKI,MAAQJ,KAAKK,OAASoE,EAG7BzE,KAAKI,MAAQqE,EAAWzE,KAAKK,OAEtBL,KAAKI,MAAQJ,KAAKK,OAASoE,IAGlCzE,KAAKI,MAAQqE,EAAWzE,KAAKK,QAE3BL,KAAKG,MAAQH,KAAKK,OAASkE,EAE7BvE,KAAKG,MAAQoE,EAAWvE,KAAKK,OAEtBL,KAAKG,MAAQH,KAAKK,OAASkE,IAElCvE,KAAKG,MAAQoE,EAAWvE,KAAKK,QAE9BL,KAAK4B,WAAW,EAAE,GAClB5B,KAAKsE,aA1eT,gCA+eWX,GAET,OADsB3D,KAAKiB,MAAQjB,KAAKK,QACpBsD,IAjftB,8BAqfSe,GAEP,OADoB1E,KAAKgB,MAAQhB,KAAKK,QACpBqE,IAvfpB,6BA4fQC,GAEN,OADmB3E,KAAKiB,MAAQjB,KAAKK,QACpBsE,IA9fnB,+BAkgBUjB,GAER,OADqB1D,KAAKgB,MAAQhB,KAAKK,QACpBqD,IApgBrB,wCAygBmBnB,GAQjB,OAAmB,IAPCxD,EACnBiB,KAAKG,MACLH,KAAKI,MACLmC,EAAUvB,MACVuB,EAAUtB,MACVjB,KAAKK,OAASkC,EAAUlC,UA/gB3B,4BAqhBOf,GACFU,KAAKK,OAAS,KAEjBf,EAAII,YACAM,KAAKa,aAAgBb,KAAKe,WAkC7BzB,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,WAAaI,KAAKE,OAAQF,KAAKG,MAAQH,KAAKK,OAAO,EAAGL,KAAKI,MAAM,GAC3EJ,KAAKa,aACPvB,EAAIG,KAAY,YAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,SAAWI,KAAKO,GAAG1B,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,MAGpFd,EAAIG,KAAY,YAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,OAASI,KAAKO,GAAG1B,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,KAEhFJ,KAAKc,cACPxB,EAAIG,KAAY,YAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,SAAWI,KAAKM,GAAGzB,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,KAElFJ,KAAKY,eACPtB,EAAIG,KAAY,YAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,UAAYI,KAAKM,GAAGzB,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,MAtDlFJ,KAAKY,cAAiBZ,KAAKc,aAc9BxB,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,UAAUI,KAAKE,OAAQF,KAAKG,MAAQH,KAAKK,OAAO,EAAGL,KAAKI,MAAM,GACxEJ,KAAKY,eACPtB,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,QAASI,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,KAE5DJ,KAAKc,cACPxB,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,OAAQI,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,KAE9Dd,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAASI,KAAKM,GAAGzB,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,MA5BzEd,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,SAASI,KAAKE,OAAQF,KAAKG,MAAQH,KAAKK,OAAO,EAAGL,KAAKI,MAAM,GAE1Ed,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,MAAQI,KAAKM,GAAGzB,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,IAEjFd,EAAIG,KAAY,aAChBH,EAAIK,UAAY,QAChBL,EAAIM,SAAS,MAAQI,KAAKO,GAAG1B,QAAQ,GAAImB,KAAKG,MAAQH,KAAKK,OAAO,GAAIL,KAAKI,MAAM,KA8CnFd,EAAIO,eAnlBN,2BAqlBM+E,EAAQC,EAASC,EAAcT,EAAYU,GAG/C/E,KAAKgF,oBAGLhF,KAAKiF,qBAIL,IAAI,IAAI3C,EAAE,EAAGA,EAAE+B,EAAW1G,OAAQ2E,IACjCtC,KAAKkF,4BACJb,EAAW/B,GACXsC,EACAC,GAGF7E,KAAKmF,qBAAqBP,EAAQC,EAASC,GAC3C9E,KAAKoF,qBAAqBL,GAE1B/E,KAAKqF,eAAeP,GACpB9E,KAAKsF,oBACLtF,KAAKuF,iBA3mBP,0CA8mBEvF,KAAKqB,SAAW,EAChBrB,KAAKoB,WAAa,EAClBpB,KAAKkB,WAAa,EAClBlB,KAAKmB,YAAa,IAjnBpB,2CAqnBKnB,KAAKe,UACPf,KAAKiB,MAAQjB,KAAKI,MAAQJ,KAAKO,GACxBP,KAAKa,cACZb,KAAKiB,MAAQjB,KAAKI,MAAQJ,KAAKO,IAC7BP,KAAKc,YACPd,KAAKgB,MAAQhB,KAAKG,MAAQH,KAAKM,GACxBN,KAAKY,eACZZ,KAAKgB,MAAQhB,KAAKG,MAAQH,KAAKM,MA5nBlC,2CA+nBE,IAAMkF,EAAWnH,EAAa,EAAE,GAChB,IAAbmH,GACFxF,KAAKa,aAAc,EACnBb,KAAKe,WAAa,EAClBf,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAEC,IAAb0E,GACPxF,KAAKa,aAAc,EACnBb,KAAKe,WAAa,EAClBf,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAEC,IAAb0E,GACPxF,KAAKa,aAAc,EACnBb,KAAKe,WAAa,EAClBf,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,GAGC,IAAb0E,IACPxF,KAAKa,aAAc,EACnBb,KAAKe,WAAa,EAClBf,KAAKY,cAAe,EACpBZ,KAAKc,aAAc,KAvpBtB,+BA6pBEd,KAAKK,QAAU,GACfL,KAAKiF,uBA9pBP,0CAiqBEjF,KAAKG,MAAQH,KAAKgB,MAClBhB,KAAKI,MAAQJ,KAAKiB,UAlqBpB,KAosBO,SAASwE,EAAYC,EAAMd,EAAQC,EAAST,EAAYC,GAM9D,GAAGqB,EAAKvF,MAAQuF,EAAKrF,OAAS,EAC7B,OAAO,EACR,GAAGqF,EAAKvF,MAAQuF,EAAKrF,OAASuE,EAC7B,OAAO,EACR,GAAGc,EAAKtF,MAAQsF,EAAKrF,OAAS,EAC7B,OAAO,EACR,GAAGqF,EAAKtF,MAAQsF,EAAKrF,OAASwE,EAC7B,OAAO,EACR,IAAI,IAAIvC,EAAE,EAAGA,EAAE+B,EAAW1G,OAAQ2E,IAAI,CAGrC,GAFkB+B,EAAW/B,GACWc,kBAAkBsC,GAEzD,OAAO,EAET,IAAI,IAAIpD,EAAE,EAAGA,EAAE8B,EAAWzG,OAAQ2E,IAAI,CACrC,IAAMC,EAAa6B,EAAW9B,GAE9B,GADsBoD,EAAKtC,kBAAkBb,GAE5C,OAAO,EAET,OAAO,EAGD,SAASoD,EAAef,EAAQC,EAAS3E,GAAkD,IAA1C0F,EAAyC,uDAA/B,EAAGC,EAA4B,uDAAlB,GAAIrE,EAAc,uDAAL,KAcvFsE,EAAezH,EAAauH,EAAWC,GAC3CC,GAAqC,IAArBzH,EAAa,EAAE,IAC/B,IAAM0H,EAAU1H,EAAayH,EAAclB,EAASkB,GAC9CE,EAAU3H,EAAayH,EAAcjB,EAAUiB,GACjDG,EAAWxH,EAAe,EAAG,MAC7ByH,EAAWzH,EAAe,EAAG,MACjB,OAAb+C,IACCyE,EAAWzE,IACbyE,EAAWzE,GACT0E,EAAW1E,IACb0E,EAAW1E,IAEb,IAAM2E,EAAU,IAAIrG,EAAK,CACxBI,OAAQA,EACRV,MAAOvB,IACPkC,MAAO4F,EACP3F,MAAO4F,EACP3F,OAAQyF,EACRxF,GAAM2F,EACN1F,GAAK2F,IAUN,OANEC,EAAQ3E,SAFM,OAAbA,EACCA,EAAWsE,EACMtE,EAEAtD,KAAKM,KAAKsH,GAGXA,EACbK,EC5wBD,IAAMC,EAAb,WAEC,WAAYrG,GAAY,oBACvBC,KAAKC,KAAU,YACfD,KAAKqG,OAAYtG,EAAWsG,OAC5BrG,KAAKR,MAAWO,EAAWP,MAC3BQ,KAAKnC,MAAWkC,EAAWlC,MAC3BmC,KAAKlC,OAAYiC,EAAWjC,OAC5BkC,KAAKwE,MAAWzE,EAAWyE,MAC3BxE,KAAKwD,KAAUzD,EAAWyD,KAC1BxD,KAAKsG,OAAYtG,KAAKwE,MAAQxE,KAAKnC,MACnCmC,KAAKuG,QAAYvG,KAAKwD,KAAOxD,KAAKlC,OAClCkC,KAAKsD,QAAYpF,KAAKsI,IAAIxG,KAAKsG,OAAStG,KAAKnC,MAAM,GACnDmC,KAAKuD,QAAYrF,KAAKsI,IAAIxG,KAAKuG,QAAUvG,KAAKlC,OAAO,GACrDkC,KAAKgB,MAAWhB,KAAKwE,MACrBxE,KAAKiB,MAAWjB,KAAKwD,KACrBxD,KAAKQ,QAAY,EACjBR,KAAKS,SAAa,IAClBT,KAAKyG,WAAc,EACnBzG,KAAK0G,aAAe,EACpB1G,KAAK2G,gBAAiB,EACtB3G,KAAKqD,SAAa,EArBpB,qDAuBU7F,EAAGQ,GACX,OAAIgC,KAAKwE,OAAShH,GAAKA,GAAKwC,KAAKwE,MAAQxE,KAAKnC,OAC1CmC,KAAKwD,MAAQxF,GAAKA,GAAKgC,KAAKwD,KAAOxD,KAAKlC,SAzB9C,2BA8BMwB,GACJA,EAAII,YACJJ,EAAIsH,KACH5G,KAAKwE,MACLxE,KAAKwD,KACLxD,KAAKnC,MACLmC,KAAKlC,QAENwB,EAAIK,UAAYK,KAAKR,MACrBF,EAAI8C,OACJ9C,EAAIO,cAxCN,iCA0CY+E,EAAQC,GAAsB,IAAbgC,EAAY,uDAAH,GAEpC,OAAwB,IAArB7G,KAAK0G,cAER1G,KAAK8G,uBAAuBlC,EAAQC,GACpC7E,KAAK+G,yBAAyBnC,EAAQC,EAASgC,GAC/C7G,KAAKsF,qBACE,KAjDT,6CAmDwBV,EAAQC,EAASa,GAIvC,IAAoC,IAAjC1F,KAAKoD,kBAAkBsC,GACzB,OAAO,EASR,IANA,IAGM/C,EAFQzE,KAAKsI,IAAIxG,KAAKwE,MAAQxE,KAAKgB,OADvB,GAIZ0B,EAFQxE,KAAKsI,IAAIxG,KAAKwD,KAAOxD,KAAKiB,OAFtB,GAKd+F,EAAY,EACVhH,KAAKoD,kBAAkBsC,IAU5B,GATG1F,KAAKY,aACPZ,KAAKgB,OAAS2B,EACP3C,KAAKc,cACZd,KAAKgB,OAAS2B,GACZ3C,KAAKe,UACPf,KAAKiB,OAASyB,EACP1C,KAAKa,cACZb,KAAKiB,OAASyB,GAdE,MAejBsE,GAAW,GACc,CACxBhH,KAAKgB,MAAQhB,KAAKwE,MAClBxE,KAAKiB,MAAQjB,KAAKwD,KAClB,MAGCxD,KAAKoD,kBAAkBsC,KAGzB7C,QAAQC,IAAI,yDACT9C,KAAKY,cAAgB8E,EAAK1E,MAAQhB,KAAKsD,QAEzCtD,KAAKgB,OAAS0E,EAAKrF,OAEZL,KAAKY,cAAgB8E,EAAK1E,MAAQhB,KAAKsD,UAG9CtD,KAAKgB,OAAS0E,EAAKrF,QAEjBL,KAAKc,aAAe4E,EAAK1E,MAAQhB,KAAKsD,QACxCtD,KAAKgB,OAAS0E,EAAKrF,OAEZL,KAAKc,aAAe4E,EAAK1E,MAAQhB,KAAKsD,UAE7CtD,KAAKgB,OAAS0E,EAAKrF,QAGjBL,KAAKa,aAAe6E,EAAKzE,MAAQjB,KAAKuD,QAExCvD,KAAKiB,OAASyE,EAAKrF,OAEZL,KAAKa,aAAe6E,EAAKzE,MAAQjB,KAAKuD,UAG7CvD,KAAKiB,OAASyE,EAAKrF,QAEjBL,KAAKe,WAAa2E,EAAKzE,MAAQjB,KAAKuD,QAGtCvD,KAAKiB,OAASyE,EAAKrF,OAEZL,KAAKiH,WAAavB,EAAKzE,MAAQjB,KAAKuD,UAE3CvD,KAAKiB,OAASyE,EAAKrF,SAMlBL,KAAKY,cAAgB8E,EAAK1E,MAAQhB,KAAKsD,UAEzCtD,KAAKY,cAAe,GAElBZ,KAAKc,aAAe4E,EAAK1E,MAAQhB,KAAKsD,UACxCtD,KAAKc,aAAc,GAEjBd,KAAKa,aAAe6E,EAAKzE,MAAQjB,KAAKuD,UACxCvD,KAAKa,aAAc,GAEjBb,KAAKe,WAAa2E,EAAKzE,MAAQjB,KAAKuD,UACtCvD,KAAKe,WAAY,KAvIpB,+CA4I0B6D,EAAQC,GAChC,IADsD,IAAbgC,EAAY,uDAAH,GACzCvE,EAAE,EAAGA,EAAEuE,EAASlJ,OAAQ2E,IAAI,CACpC,IAAM4E,EAASL,EAASvE,GACL,cAAhB4E,EAAOjH,KACTD,KAAKkF,4BAA4BN,EAAQC,EAASqC,GAC3B,SAAhBA,EAAOjH,MACdD,KAAKmH,uBAAuBvC,EAAQC,EAASqC,MAlJjD,kDAwJ6BtC,EAAQC,EAASqC,MAxJ9C,6CA2JwBtC,EAAQC,GAU9B,OARG7E,KAAKgB,MAAQ,IACfhB,KAAKgB,MAAQ,GACXhB,KAAKgB,MAAQhB,KAAKnC,MAAQ+G,IAC5B5E,KAAKgB,MAAQ4D,EAAS5E,KAAKnC,OACzBmC,KAAKiB,MAAQ,IACfjB,KAAKiB,MAAQ,GACXjB,KAAKiB,MAAQjB,KAAKlC,OAAS+G,IAC7B7E,KAAKiB,MAAQ4D,EAAU7E,KAAKlC,SACtB,IArKT,sCAwKE,OAA2B,IAAxBkC,KAAK2G,gBAEL3G,KAAKqD,SAAW,IA1KrB,wCA8KmBqC,GAOjB,IAAM0B,EAAgBlJ,KAAKsI,IAAId,EAAK1E,MAAQhB,KAAKsD,SAC3C+D,EAAgBnJ,KAAKsI,IAAId,EAAKzE,MAAQjB,KAAKuD,SAC3C+D,EAAetH,KAAKnC,MAAM,EAAI6H,EAAKrF,OACnCkH,EAAevH,KAAKlC,OAAO,EAAI4H,EAAKrF,OAC1C,QAAI+G,EAAgBE,OAEhBD,EAAgBE,KAEhBH,GAAkBpH,KAAKnC,MAAM,IAE7BwJ,GAAkBrH,KAAKlC,OAAO,KAIPiB,EAC1BqI,EACAC,EACArH,KAAKnC,MAAM,EACXmC,KAAKlC,OAAO,EACZ4H,EAAKrF,aAxMR,iCA8MYxC,EAAOC,GAEjB,QAAGkC,KAAKwE,MAAQ,OAEbxE,KAAKsG,OAASzI,OAEdmC,KAAKwD,KAAO,MAEZxD,KAAKuG,QAAUzI,OAtNpB,sCA0NiBkD,EAAOC,EAAO4F,GAM7B7G,KAAKgB,MAAQA,EACbhB,KAAKiB,MAAQA,EAKb,IAJA,IAEMK,EAFOpD,KAAKsI,IAAIxG,KAAKwE,MAAQxD,GAEhB,IACbO,EAFOrD,KAAKsI,IAAIxG,KAAKwD,KAAOvC,GAEf,IACVqB,EAAE,EAAGA,EAAEuE,EAASlJ,OAAQ2E,IAAI,CACpC,IAAM4E,EAASL,EAASvE,GACxB,GAAmB,SAAhB4E,EAAOjH,MACLD,KAAKwH,gBAAgBN,GAOxB,OANArE,QAAQC,IAAI,gDAEZoE,EAAOtF,WAAWN,EAASC,GAC3BvB,KAAKgB,MAAQhB,KAAKwE,MAClBxE,KAAKiB,MAAQjB,KAAKyH,KAClBzH,KAAK0H,iBACE,EAIV,OAAO,IApPT,kCAsPaC,EAASC,EAASf,GAC7B,IAAMgB,EAAS7H,KAAKsD,QACdwE,EAAS9H,KAAKuD,QAChBvC,EAAWhB,KAAKwE,MAChBvD,EAAWjB,KAAKwD,KA+BpB,OA9BAxD,KAAK0H,gBAEFC,EAAUE,GAEZ7G,EAAQ2G,EAAW3H,KAAKnC,MAAM,EAC9BmC,KAAKc,aAAc,GAEZ6G,EAAUE,IAEjB7G,EAAQ2G,EAAW3H,KAAKnC,MAAM,EAC9BmC,KAAKY,cAAe,GAKlBgH,EAAUE,GAEZ7G,EAAQ2G,EAAW5H,KAAKlC,OAAO,EAC/BkC,KAAKe,WAAY,GAEV6G,EAAUE,IAEjB7G,EAAQ2G,EAAW5H,KAAKlC,OAAO,EAC/BkC,KAAKa,aAAc,IAOD,IADCb,KAAK+H,gBAAgB/G,EAAOC,EAAO4F,IAEtD7G,KAAKgB,MAAQhB,KAAKwE,MAClBxE,KAAKiB,MAAQjB,KAAKwD,KAClBxD,KAAK0H,iBACE,IAGP1H,KAAKgB,MAAQA,EACbhB,KAAKiB,MAAQA,GACN,KAlSV,iFAySEjB,KAAKc,aAAc,EACnBd,KAAKY,cAAe,EACpBZ,KAAKe,WAAa,EAClBf,KAAKa,aAAc,IA5SrB,0CA+SEb,KAAKwE,MAASxE,KAAKgB,MACnBhB,KAAKwD,KAAQxD,KAAKiB,MAClBjB,KAAKsG,OAAUtG,KAAKwE,MAAQxE,KAAKnC,MACjCmC,KAAKuG,QAAUvG,KAAKwD,KAAOxD,KAAKlC,OAChCkC,KAAKsD,QAAUpF,KAAKsI,IAAIxG,KAAKsG,OAAStG,KAAKnC,MAAM,GACjDmC,KAAKuD,QAAUrF,KAAKsI,IAAIxG,KAAKuG,QAAUvG,KAAKlC,OAAO,GACnDkC,KAAKgB,MAAShB,KAAKwE,MACnBxE,KAAKiB,MAASjB,KAAKwD,OAtTrB,sCAwTiBkC,GAGf,IAAMsC,EAAQhI,KAAKwE,MACbyD,EAAQjI,KAAKwD,KACbxC,EAAQhB,KAAKgB,MACbC,EAAQjB,KAAKiB,MACnBjB,KAAKsF,oBACL,IAAM4C,EAAMlI,KAAKoD,kBAAkBsC,GAMnC,OALA1F,KAAKgB,MAAQgH,EACbhI,KAAKiB,MAAQgH,EACbjI,KAAKsF,oBACLtF,KAAKgB,MAAQA,EACbhB,KAAKiB,MAAQA,EACNiH,MAtUT,KCCaC,EAAb,YACC,WAAYC,GAAO,IAAD,8BACjB,4CAAMA,KACDC,KAAOD,EAAMC,KAClB,EAAKC,UAAYF,EAAME,UAHN,EADnB,2EAmBE,OAHYC,OAAOC,KAAKxI,KAAKqI,KAAM,UAC/BI,OACJF,OAAOG,SACA,IAnBT,4BAsBOpJ,GAGL,IAAMqJ,EAAW3I,KAAKK,OAAS,EACzB7C,EAAMwC,KAAKG,MAASH,KAAKK,OAAO,EAChCrC,EAAMgC,KAAKI,MAASJ,KAAKK,OAAO,EACtC,QAAGsI,EAAU,KAEbrJ,EAAII,YAIJJ,EAAIG,KAAS,OAAOkJ,EAAS,6BAC7BrJ,EAAIK,UAAY,QAChBL,EAAIM,SAASI,KAAKsI,UAAW9K,EAAGQ,GAEhCsB,EAAIO,aACG,OAvCT,GAAmCC,GA0C5B,SAAS8I,EACfhE,EACAC,EACA3E,GAMC,IALD0F,EAKA,uDALU,EACVC,EAIA,uDAJU,GACVyC,EAGA,uCAFAD,EAEA,uCADA7G,EACA,uDADS,KAeLsE,EAAezH,EAAauH,EAAWC,GAC3CC,GAAqC,IAArBzH,EAAa,EAAE,IAC/B,IAAM0H,EAAU1H,EAAayH,EAAclB,EAASkB,GAC9CE,EAAU3H,EAAayH,EAAcjB,EAAUiB,GACjDG,EAAWxH,EAAe,EAAG,MAC7ByH,EAAWzH,EAAe,EAAG,MACjB,OAAb+C,IACCyE,EAAWzE,IACbyE,EAAWzE,GACT0E,EAAW1E,IACb0E,EAAW1E,IAEb,IAAM2E,EAAU,IAAIgC,EAAc,CACjCjI,OAAQA,EACRV,MAAOvB,IACPkC,MAAO4F,EACP3F,MAAO4F,EACP3F,OAAQyF,EACRxF,GAAM2F,EACN1F,GAAK2F,IAYN,OAREC,EAAQ3E,SAFM,OAAbA,EACCA,EAAWsE,EACMtE,EAEAtD,KAAKM,KAAKsH,GAGXA,EACpBK,EAAQkC,KAAQA,EAChBlC,EAAQmC,UAAYA,EACbnC,ECjGD,IAAM0C,EAAb,WACC,aAAuB,4EACtB7I,KAAKxC,EAAQ,KACbwC,KAAKhC,EAAQ,KACbgC,KAAK8I,EAAQ,KACb9I,KAAK+I,QAAY,KACjB/I,KAAKgJ,SAAa,KAClBhJ,KAAKiJ,OAAY,KACjBjJ,KAAKkJ,EAAQ,GACblJ,KAAKmJ,aAAgB,UACrBnJ,KAAKoJ,cAAgB,WACrBpJ,KAAKqJ,WAAc,OACnBrJ,KAAKsJ,UAAc,SACnBtJ,KAAKP,KAAU,aAbjB,0DAeemF,EAAQ2E,EAAWC,EAAYC,GAC5CzJ,KAAK+I,QAAW/I,KAAKmJ,aAAeI,EACpCvJ,KAAKgJ,SAAYhJ,KAAKoJ,cAAgBI,EACtC,IAAIE,EAAU,KACRC,EAAYzL,KAAKK,IACtByB,KAAK+I,QAAQpL,OACbqC,KAAKgJ,SAASrL,QAEf,GAAGqC,KAAK+I,QAAQpL,OAASgM,EAAU,CAClCD,EAAWC,EAAY3J,KAAK+I,QAAQpL,OACpCqC,KAAK+I,QAAU/I,KAAKmJ,aACpB,IAAK,IAAI7G,EAAE,EAAGA,EAAEoH,EAAOpH,IACtBtC,KAAK+I,SAAW,IAEjB/I,KAAK+I,SAAWQ,EAEjB,GAAGvJ,KAAKgJ,SAASrL,OAASgM,EAAU,CACnCD,EAAWC,EAAY3J,KAAKgJ,SAASrL,OACrCqC,KAAKgJ,SAAWhJ,KAAKoJ,cACrB,IAAK,IAAI9G,EAAE,EAAGA,EAAEoH,EAAOpH,IACtBtC,KAAKgJ,UAAY,IAElBhJ,KAAKgJ,UAAYQ,EAElBxJ,KAAK8I,EAAI,IAAMa,EAAY,GAC3B3J,KAAKxC,EAAIoH,EAAS5E,KAAK8I,EAAI,GAC3B9I,KAAKhC,EAAI,GACTgC,KAAKiJ,OAAgB,EAAPjJ,KAAKhC,EAAM,EACzBgC,KAAKyJ,MAAQA,IA3Cf,mCA6CcnK,GACZA,EAAII,YACJJ,EAAIsH,KACH5G,KAAKxC,EACL,EACAwC,KAAK8I,EACL9I,KAAKhC,GAENsB,EAAIK,UAAYK,KAAKqJ,WACrB/J,EAAI8C,OACJ9C,EAAIO,YACJR,EAAcC,EAAKU,KAAK+I,QAAS/I,KAAKxC,EAAGwC,KAAKhC,EAAGgC,KAAKsJ,UAAWtJ,KAAKP,QAxDxE,oCA0DeH,GACbA,EAAII,YACJJ,EAAIsH,KACH5G,KAAKxC,EACLwC,KAAKhC,EACLgC,KAAK8I,EACL9I,KAAKhC,EAAI,GAEVsB,EAAIK,UAAYK,KAAKqJ,WACrB/J,EAAI8C,OACJ9C,EAAIO,YACJR,EAAcC,EAAKU,KAAKgJ,SAAUhJ,KAAKxC,EAAGwC,KAAKiJ,OAAO,EAAGjJ,KAAKsJ,UAAWtJ,KAAKP,QArEhF,iCAuEYH,GACVA,EAAII,YACJJ,EAAIsH,KACH,EACA,EACA5G,KAAK8I,EACL9I,KAAKiJ,QAEN3J,EAAIK,UAAYK,KAAKqJ,WACrB/J,EAAI8C,OACJ9C,EAAIO,YACJR,EAAcC,EAAK,SAAU,EAAGU,KAAKhC,EAAGgC,KAAKsJ,UAAWtJ,KAAKP,MAC7DJ,EAAcC,EAAKU,KAAKyJ,MAAM,GAAI,EAAGzJ,KAAKiJ,OAAO,EAAGjJ,KAAKsJ,UAAWtJ,KAAKP,UAnF3E,KCIamK,EAAb,WACC,aAAwB,IAAXxB,EAAU,uDAAJ,GAAI,oBAEtBpI,KAAK6J,gBAAmBzB,EAAMyB,iBAAmB,QACjD7J,KAAK8E,aAAiBsD,EAAMtD,cAAiB,KAC7C9E,KAAK8J,eAAkB1B,EAAM0B,gBAAkB,IAC/C9J,KAAK+J,gBAAmB3B,EAAM2B,iBAAmB,GACjD/J,KAAK4F,UAAewC,EAAMxC,WAAe,EACzC5F,KAAK6F,UAAeuC,EAAMvC,WAAe,EACzC7F,KAAKwB,SAAc4G,EAAM5G,UAAc,EACvCxB,KAAKgK,aAAiB5B,EAAM4B,cAAiB,IAC7ChK,KAAKQ,QAAa4H,EAAM5H,SAAa,IACrCR,KAAKU,YAAgB0H,EAAM1H,aAAgB,IAC3CV,KAAKiK,YAAgB7B,EAAM6B,aAAgB,IAC3CjK,KAAKkK,YAAgB9B,EAAM8B,aAAgB,EAC3ClK,KAAKnC,MAAYuK,EAAMvK,OAAY,EACnCmC,KAAKlC,OAAasK,EAAMtK,QAAa,EACrCkC,KAAKmK,aAAiB,CAAC,GAAI,GAAI,GAAI,IACnCnK,KAAKoK,QAAa,EAClBpK,KAAKqK,YAAe,EACpBrK,KAAKsK,iBAAmB,EACxBtK,KAAKuK,iBAAmB,EACxBvK,KAAKwK,iBAAmB,EACxBxK,KAAKyK,YAAe,EACpBzK,KAAK0K,SAAa,EAClB1K,KAAK2K,aAAgB,EACrB3K,KAAK4K,cAAiBxC,EAAMwC,gBAAiB,EAC7C5K,KAAK6K,eAAkBzC,EAAMyC,iBAAkB,EAC/C7K,KAAK+E,MAAYqD,EAAMrD,OAAY,GACnC/E,KAAKyJ,MAAYrB,EAAMqB,OAAY,EACnCzJ,KAAK6I,IAAW,IAAIA,EACpB7I,KAAKqE,WAAe,GACpBrE,KAAK8K,WAAe,KAhCtB,yDAkCcC,EAAYC,GAUxB,IAAI,IAAI1I,EAAE,EAAGA,EAAEtC,KAAK+E,MAAMpH,OAAQ2E,IAAI,CACrC,IAAMoD,EAAS1F,KAAK+E,MAAMzC,GAQ1B,GAPkBvD,EACjBgM,EACAC,EACAtF,EAAKvF,MACLuF,EAAKtF,MACLsF,EAAKrF,QAGL,OAAOqF,EAET,OAAO,OAxDT,qCA0DgBpG,GACd,OAAkB,IAAfU,KAAKnC,QAERyB,EAAII,YACJJ,EAAIK,UAAYK,KAAK6J,gBACrBvK,EAAI2L,SAAS,EAAG,EAAGjL,KAAKnC,MAAOmC,KAAKlC,QACpCwB,EAAIO,aACG,KAjET,gCAmEWP,GACT,IAAI,IAAIgD,EAAE,EAAGA,EAAEtC,KAAK+E,MAAMpH,OAAQ2E,IAAI,CACrC,IAAMoD,EAAO1F,KAAK+E,MAAMzC,GACxBoD,EAAKwF,KAAK5L,GACPoG,EAAK2C,KACP3C,EAAKyF,MAAM7L,MAxEf,oCA8EeA,GACb,IAAK,IAAIgD,EAAE,EAAGA,EAAEtC,KAAKqE,WAAW1G,OAAQ2E,IAAI,CAC3C,IAAIU,EAAYhD,KAAKqE,WAAW/B,GAChCU,EAAUkI,KAAK5L,IACY,IAAxB0D,EAAUyD,WAEZpH,EACCC,EACA,YACA0D,EAAUM,QAAS,GACnBN,EAAUO,QAAU,EACpBtF,QAzFL,wCA8FmBmN,GACjB,IAAMxE,EAASwE,EAAOC,wBAChBN,EAAa/K,KAAKsL,OAAS1E,EAAK2E,KAChCP,EAAahL,KAAKwL,OAAS5E,EAAK6E,IAChCC,EAAc1L,KAAK2L,aAAaZ,EAAYC,GAClD,GAAmB,OAAhBU,EACF,OAAOA,EAAYE,cAGpB,IAAIzF,EAAUR,EACb3F,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,MAAMpH,OACX,GACA,GACAqC,KAAKwB,UAaN,OAXA2E,EAAQhG,MAAQ4K,EAChB5E,EAAQ/F,MAAQ4K,EAChB7E,EAAQnF,MAAQ+J,EAChB5E,EAAQlF,MAAQ+J,GAQD,IAPDvF,EACbU,EACAnG,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,MACL/E,KAAKqE,cAIN8B,EAAQ0F,qBACR1F,EAAQvE,WAAW,GAAG,IACtBiB,QAAQC,IAAI,kBAAoBqD,EAAQjG,QACxCF,KAAK+E,MAAM+G,KAAK3F,GAChBnG,KAAKoK,SAAW,EACT,KAjIT,0CAmIqB2B,EAAOX,GAI1B,IACMY,EADc,IAAIC,KACSjM,KAAK8K,WAGtC,OADA9K,KAAK8K,WAAgB,KAClBkB,EAFyB,KAI3BhM,KAAKsL,OAASS,EAAMpE,QACpB3H,KAAKwL,OAASO,EAAMnE,QACP5H,KAAKkM,kBAAkBd,KAKpCvI,QAAQC,IAAI,sBACJ,KArJX,4CAwJuBiJ,GAgBrB,OAZA/L,KAAK8K,WAAa,IAAImB,KACnBF,EAAMI,gBAAkBJ,EAAMI,eAAexO,QAE/CqC,KAAKsL,OAASpN,KAAKkO,MAAML,EAAMI,eAAe,GAAGxE,SACjD3H,KAAKwL,OAAStN,KAAKkO,MAAML,EAAMI,eAAe,GAAGvE,UAE1CmE,GACP/L,KAAKsL,OAASS,EAAMpE,QACpB3H,KAAKwL,OAASO,EAAMnE,SAGpB/E,QAAQC,IAAI,yBACN,IAxKT,4CA0KuBiJ,EAAOX,GAExB,IAAM9L,EAAM8L,EAAOiB,WAAW,MAClC,OAA4B,IAAxBrM,KAAK6K,iBAEqB,IAA3B7K,KAAKqE,WAAW1G,QAClBkF,QAAQC,IAAI,+CACL,IAELiJ,EAAMI,gBAAkBJ,EAAMI,eAAexO,QAE/CqC,KAAKsL,OAASpN,KAAKkO,MAAML,EAAMI,eAAe,GAAGxE,SACjD3H,KAAKwL,OAAStN,KAAKkO,MAAML,EAAMI,eAAe,GAAGvE,WAGjD5H,KAAKsL,OAASS,EAAMpE,QACpB3H,KAAKwL,OAASO,EAAMnE,SAED5H,KAAKsM,oBAAoBlB,IAE5CpL,KAAKuM,iBAAiBjN,IAChB,MA/LT,oCAkMekN,EAASlN,GACtB,IAA4B,IAAxBU,KAAK6K,eACR,OAAO,EACR,IAAI7K,KAAKmK,aAAasC,SAASD,GAE9B,OADA3J,QAAQC,IAAI,2BAA2B0J,EAAQ,MACxC,EAGR,IAAK,IAAIlK,EAAE,EAAGA,EAAEtC,KAAKqE,WAAW1G,OAAQ2E,IAAI,CAC3C,IAAIU,EAAYhD,KAAKqE,WAAW/B,GAC5BoK,EAAS,GACT1L,EAAUgC,EAAUwB,MACpBvD,EAAU+B,EAAUQ,KACxB,IAA6B,IAA1BR,EAAU0D,YAAb,CAIA,GAFA1D,EAAU0E,gBAEP1H,KAAK2M,YAGPD,IAFmB,IAAIT,KACSjM,KAAK4M,aAChB,IACV5J,EAAUnF,QACpB6O,EAAQ1J,EAAUnF,MAAM,EAAI,UAG7BmC,KAAK2M,YAAa,EAClB3M,KAAK4M,YAAc,IAAIX,KAwBxB,GAtBe,KAAZO,IACFxL,GAAS0L,EACT1J,EAAUlC,aAAc,GAEV,KAAZ0L,IACFvL,GAASyL,EACT1J,EAAUjC,WAAY,GAER,KAAZyL,IACFxL,GAAS0L,EACT1J,EAAUpC,cAAe,GAEX,KAAZ4L,IACFvL,GAASyL,EACT1J,EAAUnC,aAAc,IAQR,IALCmC,EAAU+E,gBAC3B/G,EACAC,EACAjB,KAAK+E,OAML,OAHA/B,EAAUhC,MAAQgC,EAAUwB,MAC5BxB,EAAU/B,MAAQ+B,EAAUQ,KAC5BR,EAAU0E,iBACH,EAGP1E,EAAUhC,MAAQA,EAClBgC,EAAU/B,MAAQA,EAClB+B,EAAU6J,WACT7M,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,OAEF/E,KAAKuM,iBAAiBjN,OAlQ9B,oCAuQEU,KAAK2M,YAAa,EAClB3M,KAAK4M,YAAc,KACnB/J,QAAQC,IAAI,YAzQd,kCA2QaxD,GAAK,IAAD,QACa,IAAxBU,KAAK6K,iBACR7K,KAAK8M,iBACL9M,KAAK+M,iBAAqBC,YACzB,kBAAI,EAAKT,iBAAiBjN,IAC1B,KAGFU,KAAKiN,YAAgBD,YACpB,kBAAI,EAAKE,YAAY5N,IACrB,MArRH,sCAyRI6N,cAAcnN,KAAK+M,kBACjBI,cAAcnN,KAAKiN,eA1RzB,0CA4RqB7B,GAInB,IAHA,IAAMxE,EAASwE,EAAOC,wBAChB1D,EAAW3H,KAAKsL,OAAS1E,EAAK2E,KAC9B3D,EAAW5H,KAAKwL,OAAS5E,EAAK6E,IAC3BnJ,EAAE,EAAGA,EAAEtC,KAAKqE,WAAW1G,OAAQ2E,IAAI,CAC3C,IAAIU,EAAahD,KAAKqE,WAAW/B,GACjC,IAA6B,IAA1BU,EAAU0D,YAEM1D,EAAUoK,YAAYzF,EAASC,EAAS5H,KAAK+E,QAGhE/B,EAAU6J,WACT7M,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,OAGP,OAAO,IA7ST,yCA+SoBlH,EAAOC,EAAQwB,GAMjC,GALAU,KAAKnC,MAAQA,EACbmC,KAAKlC,OAASA,GAEA,IADCkC,KAAKqN,eAAe/N,IAElCuD,QAAQC,IAAI,aACV9C,KAAKqE,WAAW1G,SAAkC,IAAxBqC,KAAK6K,eAAwB,CAGzD,IAAK,IAAIvI,EAAE,EAAGA,EAAEtC,KAAKqE,WAAW1G,OAAQ2E,IAAI,CAC1BtC,KAAKqE,WAAW/B,GACvBuK,WACT7M,KAAKnC,MACLmC,KAAKlC,OACL,IAGEkC,KAAKuM,iBAAiBjN,GAE3B,GAAGU,KAAK+E,MAAM,CACb,IAAI,IAAIzC,EAAE,EAAGA,EAAEtC,KAAK+E,MAAMpH,OAAQ2E,IACjCtC,KAAK+E,MAAMzC,GAAGgL,mBACbtN,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,MACL/E,KAAKqE,YAGPrE,KAAKkN,YAAY5N,GAEd,OAAO,IA7Ub,kCAgVE,IAA0B,IAAvBU,KAAK4K,cASP,IARA,IAAM2C,ECpVF,SACN3I,EACAC,GA+DA,IA1DC,IAJDe,EAIA,uDAJU,EACVC,EAGA,uDAHU,GACVrE,EAEA,uDAFS,KACT6C,EACA,uCACMmJ,EAAa,CAClB,CACCC,OAAS,QACTnF,UAAW,SACXD,KAAQ,kCACR7I,MAAQ,WAET,CACCiO,OAAS,UACTnF,UAAW,SACXD,KAAQ,6EACR7I,MAAQ,WAET,CACCiO,OAAS,SACTnF,UAAW,SACXD,KAAQ,0CACR7I,MAAQ,WAET,CACCiO,OAAS,YACTnF,UAAW,SACXD,KAAQ,0CACR7I,MAAQ,WAET,CACCiO,OAAS,WACTnF,UAAW,SACXD,KAAQ,0CACR7I,MAAQ,WAET,CACCiO,OAAS,WACTnF,UAAW,SACXD,KAAQ,qDACR7I,MAAQ,WAET,CACCiO,OAAS,UACTnF,UAAW,SACXD,KAAQ,mCACR7I,MAAQ,WAET,CACCiO,OAAS,gBACTnF,UAAW,SACXD,KAAQ,kDACR7I,MAAQ,WAET,CACCiO,OAAS,SACTnF,UAAW,SACXD,KAAQ,4BACR7I,MAAQ,YAGNkO,EAAW,GACNpL,EAAE,EAAGA,EAAEkL,EAAW7P,OAAQ2E,IAAI,CAKtC,IAJA,IAAIqL,EAAYH,EAAWlL,GACvBsL,GAAY,EACZhL,EAAQ,EACRuD,EAAW,MACG,IAAZyH,GAcL,GAHAA,EAAUnI,EAVVU,EAAUyC,EACThE,EACAC,EACA8I,EAAUF,OACV7H,EACAC,EACA8H,EAAUrF,UACVqF,EAAUtF,KACV7G,GAE8BoD,EAAQC,EAAS6I,EAAUrJ,GAG/C,MADXzB,GAAO,GACO,CACbC,QAAQC,IAAI,uBAAyB6K,EAAUF,QAC/C,MAGCtH,GAAmB,KAARvD,IACbuD,EAAQ3G,MAAQmO,EAAUnO,MAC1BkO,EAAS5B,KAAK3F,IAGhB,OAAOuH,EDsPcG,CAClB7N,KAAKnC,MACLmC,KAAKlC,OACL,GACA,GACAkC,KAAKwB,SACLxB,KAAKqE,YAEE/B,EAAE,EAAGA,EAAEiL,EAAW5P,OAAQ2E,IACjCtC,KAAK+E,MAAM+G,KAAKyB,EAAWjL,IAC3BtC,KAAKoK,SAAW,EAGlB,IAAI,IAAI9H,EAAEtC,KAAKoK,QAAS9H,EAAGtC,KAAKkK,YAAa5H,IAAI,CAIhD,IAHA,IAAIM,EAAO,EACPgL,GAAU,EACVzH,EAAU,MACI,IAAZyH,GAAkB,CAgBvB,GAPAA,EAAUnI,EARVU,EAAUR,EACT3F,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,MAAMpH,OACXqC,KAAK4F,UACL5F,KAAK6F,UACL7F,KAAKwB,UAILxB,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAK+E,MACL/E,KAAKqE,YAEK,MAARzB,EAAY,CACdC,QAAQC,IAAI,iCACZ,MAEDF,GAAO,EAELuD,GAAmB,MAARvD,IACbuD,EAAQ0F,qBACR7L,KAAK+E,MAAM+G,KAAK3F,GAChBnG,KAAKoK,SAAW,GAGlB,OAAO,IA9XT,uCAmYE,IAAM0D,EAAclQ,EAAkBoC,KAAKnC,MAAOmC,KAAKlC,QACjDD,EAAUmC,KAAK8J,eACfhM,EAAUkC,KAAK+J,gBACfvF,EAAUsJ,EAAYtQ,EAAIK,EAAM,EAChC2F,EAASsK,EAAY9P,EAAIF,EAAO,EAChCkF,EAAY,IAAIoD,EAAU,CAC/BC,OAAQ,EACR7G,MAAO,QACPgF,MAAOA,EACPhB,KAAOA,EACP3F,MAAOA,EACPC,OAAQA,IAETkF,EAAU2D,gBAAiB,EAC3B3D,EAAUyD,WAAc,EACxBzD,EAAU0D,aAAe,EACzB1G,KAAKqE,WAAWyH,KAAK9I,KAnZvB,kCA2aa1D,GACX,GAAkB,IAAfU,KAAKnC,MACP,OAAO,EACR,GAA8B,IAA3BmC,KAAKqE,WAAW1G,SAAwC,IAAxBqC,KAAK6K,eACvC,OAAO,EACiB,IAAtB7K,KAAK+E,MAAMpH,QAAqC,IAArBqC,KAAKkK,aAClClK,KAAK+N,YAEN,IAAI,IAAIzL,EAAE,EAAGA,EAAEtC,KAAK+E,MAAMpH,OAAQ2E,IAAI,CACrC,IAAIoD,EAAO1F,KAAK+E,MAAMzC,IACC,IAApBtC,KAAKqK,WACP3E,EAAKlF,QAAU,EAEfkF,EAAKlF,QAAUR,KAAKQ,SACE,IAApBR,KAAKyK,YACP/E,EAAKhF,YAAc,EACnBgF,EAAK/E,YAAc,IAGnB+E,EAAKhF,YAAcV,KAAKU,YACxBgF,EAAK/E,YAAcX,KAAKiK,cAEG,IAAzBjK,KAAKwK,gBACP9E,EAAKjF,SAAW,EAEhBiF,EAAKjF,SAAWT,KAAKgK,cACM,IAAzBhK,KAAKuK,gBACPvK,KAAKS,SAAW,EAEhBT,KAAKS,SAAWT,KAAK8E,aAEtBY,EAAKsI,KACJhO,KAAKnC,MACLmC,KAAKlC,OACLkC,KAAKS,SACLT,KAAKqE,WACLrE,KAAK+E,OAsBP,OAjB4B,IAAzB/E,KAAKsK,iBACPtK,KAAKqN,eAAe/N,GACrBU,KAAKiO,UAAU3O,GACZU,KAAKqE,WAAW1G,OAAS,GAC3BqC,KAAKkO,cAAc5O,GAEpBU,KAAK6I,IAAIsF,cACRnO,KAAKnC,MACLmC,KAAKoK,QACLpK,KAAKqE,WAAW1G,OAAO,EACvBqC,KAAKyJ,QAEuB,IAAzBzJ,KAAKoO,kBACRpO,KAAK6I,IAAIwF,aAAa/O,GACtBU,KAAK6I,IAAIyF,cAAchP,GACvBU,KAAK6I,IAAI0F,WAAWjP,KAEd,IAreT,uCAuekBA,GAChB,GAAkB,IAAfU,KAAKnC,MACP,OAAO,EACsB,IAA3BmC,KAAKqE,WAAW1G,SAAwC,IAAxBqC,KAAK6K,gBACvC7K,KAAK8M,iBACN,IAAK,IAAIxK,EAAE,EAAGA,EAAEtC,KAAKqE,WAAW1G,OAAQ2E,IAAI,CAC3C,IAAIU,EAAYhD,KAAKqE,WAAW/B,GAC7BtC,KAAKuK,gBACPvH,EAAUvC,SAAWT,KAAK8E,aAE1B9B,EAAUvC,SAAW,EAEvBT,KAAKkO,cAAc5O,OAnfrB,K,OEFakP,EAAb,YAMC,aAAsB,IAAD,EAATpG,EAAS,uDAAH,GAAG,2BACpBA,EAAMwC,eAAgB,EACtBxC,EAAMyC,gBAAiB,EACvBzC,EAAM8B,YAAe,IACrB,4CAAM9B,KACDgG,iBAAkB,EACvB,EAAKK,YAAe,GACpB,EAAKC,QAAY,EACjB,EAAKC,QAAY,GACjB,EAAKC,QAAY,GACjB,EAAKC,QAAY,GACjB,EAAKC,OAAY,IACjB,EAAKC,QAAY,EAAKH,SAAW,EAAKF,QAAQ,GAAK,EAAKG,QAAQ,EAAKH,QACrE,EAAKM,OAAY,QACjB,EAAKC,YAAe,OACpB,EAAKC,QAAY,qEAfG,EANtB,yEAuBa5P,GACX,mEAAkBA,GAClBU,KAAKyO,YAAc,GACnBzO,KAAKmP,kBACLnP,KAAKoP,kBAAkB9P,KA3BzB,wCA8BmBA,GAEjB,IAAMwO,EAAclQ,EAAkBoC,KAAKnC,MAAOmC,KAAKlC,QACjD0G,EAAUsJ,EAAYtQ,EAAIwC,KAAK8O,OAAO,EACtCtL,EAASsK,EAAY9P,EAAIgC,KAAK+O,QAAQ,EAC5C/O,KAAKqP,UAAU/P,EAAKkF,EAAOhB,GAC3B,IAAK,IAAIlB,EAAE,EAAGA,EAAEtC,KAAKyO,YAAY9Q,OAAQ2E,IAAI,CAC9BtC,KAAKyO,YAAYnM,GACzB4I,KAAK5L,GAEZU,KAAKsP,WAAWhQ,EAAKwO,KAxCvB,gCA2CWxO,EAAKkF,EAAOhB,GAErBlE,EAAII,YACJJ,EAAIsH,KACHpC,EACAhB,EACAxD,KAAK8O,OACL9O,KAAK+O,SAENzP,EAAIK,UAAYK,KAAKgP,OACrB1P,EAAI8C,OACJ9C,EAAIO,cAtDN,iCAwDYP,EAAKwO,GAEf,IAAK,IAAIxL,EAAE,EAAGA,EAAEtC,KAAKyO,YAAY9Q,OAAQ2E,IAAI,CAC5C,IAAMsE,EAAQ5G,KAAKyO,YAAYnM,GAG/BjD,EACCC,EACAsH,EAAKrH,IACLqH,EAAKpC,MALU,EAMfoC,EAAKrD,QALU,EAMf,SACA,iBApEJ,wCAyEE,IAAMuK,EAAclQ,EAAkBoC,KAAKnC,MAAOmC,KAAKlC,QACjD0G,EAAUsJ,EAAYtQ,EAAIwC,KAAK8O,OAAO,EACtCtL,EAASsK,EAAY9P,EAAIgC,KAAK+O,QAAQ,EACtCQ,EAAK,IAAInJ,EAAU,CACxBC,OAAQ,EACR7G,MAAOQ,KAAKiP,YACZzK,MAAOA,EAAQxE,KAAK2O,QACpBnL,KAAOA,EAAOxD,KAAK4O,QACnB/Q,MAAOmC,KAAK8O,OAAsB,EAAb9O,KAAK2O,QAC1B7Q,OAAQkC,KAAK6O,UAERW,EAAK,IAAIpJ,EAAU,CACxBC,OAAQ,EACR7G,MAAOQ,KAAKiP,YACZzK,MAAOA,EAAQxE,KAAK2O,QACpBnL,KAAOA,EAAoB,EAAbxD,KAAK4O,QAAY5O,KAAK6O,QACpChR,MAAOmC,KAAK8O,OAAsB,EAAb9O,KAAK2O,QAC1B7Q,OAAQkC,KAAK6O,UAERY,EAAK,IAAIrJ,EAAU,CACxBC,OAAQ,EACR7G,MAAOQ,KAAKiP,YACZzK,MAAOA,EAAQxE,KAAK2O,QACpBnL,KAAOA,EAAoB,EAAbxD,KAAK4O,QAAyB,EAAb5O,KAAK6O,QACpChR,MAAOmC,KAAK8O,OAAsB,EAAb9O,KAAK2O,QAC1B7Q,OAAQkC,KAAK6O,UAEdU,EAAGhQ,IAAM,WACTiQ,EAAGjQ,IAAM,WACTkQ,EAAGlQ,IAAM,cACTS,KAAKyO,YAAY3C,KAAKyD,GACtBvP,KAAKyO,YAAY3C,KAAK0D,GACtBxP,KAAKyO,YAAY3C,KAAK2D,KAzGxB,wCA2GmBrE,GACjB,IAAMxE,EAAQwE,EAAOC,wBACfC,EAAStL,KAAKsL,OAAS1E,EAAK2E,KAC5BC,EAASxL,KAAKwL,OAAS5E,EAAK6E,IAC5BiE,EAAgB1P,KAAK2P,kBAAkBrE,EAAQE,EAAQxL,KAAKyO,aAClE,GAAqB,OAAlBiB,EAKF,OAA6B,IAAzBA,EAAcrJ,QACjBxD,QAAQC,IAAI,iBACL,GAE0B,IAAzB4M,EAAcrJ,OAEf,EAE0B,IAAzBqJ,EAAcrJ,QAEVkC,OAAOC,KAAKxI,KAAKkP,QAAS,UAClCzG,OACJF,OAAOG,QACA,IAGP7F,QAAQC,IAAI,iCACJ,GArBT9C,KAAKoO,iBAAkB,EACvB,yEAAwBhD,KAlH3B,wCA0ImBE,EAAQE,GACzB,IADwD,IAAvBoE,EAAsB,uDAAhB5P,KAAKqE,WACnC/B,EAAE,EAAGA,EAAEsN,EAAMjS,OAAQ2E,IAAI,CACjC,IAAMsE,EAAOgJ,EAAMtN,GACnB,GAAIsE,EAAKiJ,SAASvE,EAAQE,GACzB,OAAO5E,EAET,OAAO,SAhJT,GAA6BgD,GCAhBkG,EAAb,YACC,aAAsB,IAAD,EAAT1H,EAAS,uDAAH,GAAG,2BACpBA,EAAMwC,eAAgB,EACtBxC,EAAMyC,gBAAiB,EACvBzC,EAAM8B,YAAe,GACrB,4CAAM9B,KACDuC,aAAe,EACpB,EAAKN,YAAc,EACnB,EAAKE,iBAAkB,EACvB,EAAKwF,aAAe,EACpB,EAAKvF,iBAAkB,EACvB,EAAKwF,WAAc,GACnB,EAAKC,YAAe,GACpB,EAAKvF,SAAY,EACjB,EAAKP,aAAa2B,KAAK,IAEvB,EAAKsC,iBAAkB,EAfH,EADtB,yEAuBE,IAAIpO,KAAKnC,OAAwB,IAAfmC,KAAKnC,MACtB,OAAO,EACR,IAAM+I,EAAQ5G,KAAKqE,WAAW,GAExB8B,EAAU,IAAIrG,EAAK,CACxBI,OAAQ,EACRV,MAAO,SACPW,MAAOyG,EAAKtD,QACZlD,MAAOwG,EAAKpD,KALE,GAKY,KAC1BnD,OANc,GAOdC,GAAM,EACNC,GAAK,IAMN,OAJA4F,EAAQ3E,SAVO,GAUa,IAC5BxB,KAAK+E,MAAM+G,KAAK3F,GAChBnG,KAAKkK,YAAc,EACnBlK,KAAKoK,QAAU,GACR,IAxCT,qCA0CgB9K,GACd,sEAAqBA,GACrBU,KAAKkQ,0BA5CP,kCA8Ca5Q,GACX,IAAK,IAAIgD,EAAE,EAAGA,EAAEtC,KAAK+E,MAAMpH,OAAQ2E,IAAI,CAC3BtC,KAAK+E,MAAMzC,GACduB,UAAU7D,KAAKlC,UACtBkC,KAAK+E,MAAMoL,OAAO7N,EAAG,GACrBtC,KAAKoK,SAAW,GAGO,IAAtBpK,KAAK+E,MAAMpH,SACbqC,KAAK0K,SAAU,GAChB,mEAAkBpL,KAxDpB,uCA2DkBA,GAGhB,GADA,wEAAuBA,IACH,IAAjBU,KAAK0K,UAA0C,IAArB1K,KAAK2K,YAGjC,OAFA3K,KAAK+E,MAAQ,GACb/E,KAAK+N,aACE,EAIR,IAFA,IAAIqC,EAAOpQ,KAAKqE,WAAW1G,OACvBiF,EAAM,EACJA,EAAMwN,GAAK,CACApQ,KAAKqE,WAAWzB,GACnByN,iBAEZrQ,KAAKqE,WAAW8L,OAAOvN,EAAK,GAC5BwN,GAAQ,EACRpQ,KAAKyJ,OAAS,KAGd7G,GAAO,EAEqB,IAA3B5C,KAAKqE,WAAW1G,SAClBqC,KAAK2K,aAAc,EACnB3K,KAAK0K,SAAW,EAChB7H,QAAQC,IAAI,gBAnFf,oCAuFewN,EAAShR,GAEtB,GADA,qEAAoBgR,EAAShR,IACR,IAAjBU,KAAK0K,SAAiC,KAAZ4F,EAAe,CAC5CtQ,KAAK0K,SAAW,EAChB1K,KAAK2K,aAAc,EACnB,IAAK,IAAIrI,EAAE,EAAGA,EAAGtC,KAAK+E,MAAMpH,OAAQ2E,IAAI,CAC5BtC,KAAK+E,MAAMzC,GACjBV,WAAW,GAAG,QA9FvB,sDAA2BgI,GCAd2G,EAAb,YASC,aAAsB,IAAVnI,EAAS,uDAAH,GAAG,qEACdA,IAVR,qFAaE,IAAM0F,EAAclQ,EAAkBoC,KAAKnC,MAAOmC,KAAKlC,QACjDD,EAAUmC,KAAKgQ,WACflS,EAAUkC,KAAKiQ,YACfzL,EAAUsJ,EAAYtQ,EAAIK,EAAM,EAChC2F,EAASsK,EAAY9P,EAAIF,EAAO,EAAI,IACpCkF,EAAY,IAAIoD,EAAU,CAC/BC,OAAQrG,KAAKqE,WAAW1G,OACxB6B,MAAO,QACPgF,MAAOA,EACPhB,KAAOA,EACP3F,MAAOA,EACPC,OAAQA,IAETkF,EAAU2D,gBAAiB,EAC3B3D,EAAU0D,aAAe,EACzB1G,KAAKqE,WAAWyH,KAAK9I,OA5BvB,GAA4B8M,GCAfU,EAAb,YASC,aAAsB,IAAVpI,EAAS,uDAAH,GAAG,qEACdA,IAVR,qFAiBE,IAJA,IACM5E,EADe5F,EAAkBoC,KAAKnC,MAAOmC,KAAKlC,QAC5BE,EAAIE,KAAKC,MAAM6B,KAAKlC,OAAO,GAEjD2S,EAAgBvS,KAAKC,MAAM6B,KAAKnC,OAASmC,KAAKgQ,WAAaU,KACxDpO,EAAE,EAAGA,EAAGmO,EAAenO,IAAI,CACnC,IAAMqO,EAAM3Q,KAAKgQ,WAAa1N,GAHb,EAG6BA,EAAE,GAC1CU,EAAY,IAAIoD,EAAU,CAC/BC,OAAQrG,KAAKqE,WAAW1G,OACxB6B,MAAO,QACPgF,MAAOmM,EACPnN,KAAOA,EACP3F,MAAOmC,KAAKgQ,WACZlS,OAAQkC,KAAKiQ,cAEdjN,EAAU2D,gBAAiB,EAC3B3D,EAAU0D,aAAe,EACzB1G,KAAKqE,WAAWyH,KAAK9I,GAEtB,OAAOhD,KAAKqE,WAAW1G,OAAO,MA/BhC,GAA4BmS,GCAfc,EAAb,YASC,aAAsB,IAAVxI,EAAS,uDAAH,GAAG,qEACdA,IAVR,qFAmBE,IANA,IACM5E,EADe5F,EAAkBoC,KAAKnC,MAAOmC,KAAKlC,QAC5BE,EAAIE,KAAKC,MAAM6B,KAAKlC,OAAO,GAGjD+S,EAAiB3S,KAAKC,MAAM6B,KAAKnC,OAASmC,KAAKgQ,WAFlC,KAGbc,EAAiB5S,KAAKC,MAAM6B,KAAKlC,QAAUkC,KAAKiQ,YAFnC,EAE4D,KACtE3N,EAAE,EAAGA,EAAGuO,EAAgBvO,IAEhC,IADA,IAAMqO,EAAM3Q,KAAKgQ,WAAa1N,EALZ,IAK8BA,EAAE,GACzCyO,EAAE,EAAGA,EAAED,EAAgBC,IAAI,CACnC,IAAMC,EAAKxN,EAAQxD,KAAKiQ,YAAcc,GANrB,EAMsCA,EAAE,GACnD/N,EAAY,IAAIoD,EAAU,CAC/BC,OAAQrG,KAAKqE,WAAW1G,OACxB6B,MAAO,QACPgF,MAAOmM,EACPnN,KAAOwN,EACPnT,MAAOmC,KAAKgQ,WACZlS,OAAQkC,KAAKiQ,cAEdjN,EAAU2D,gBAAiB,EAC3B3D,EAAU0D,aAAe,EACzB1G,KAAKqE,WAAWyH,KAAK9I,GAGvB,IAAMiO,EAAgBjR,KAAKlC,OAASkC,KAAKqE,WAAW,GAAGvG,OAAS,IAYhE,OAXAkC,KAAKqE,WAAW,GAAG+I,YAClBpN,KAAKqE,WAAW,GAAGG,MACnByM,EACA,IAEDjR,KAAKqE,WAAW,GAAGwI,WAClB7M,KAAKnC,MACLmC,KAAKlC,OACL,IAGMkC,KAAKqE,WAAW1G,OAAO,MAhDhC,GAA4BmS,GC8TboB,E,YAzTZ,WAAY9I,GAAO,IAAD,8BACf,4CAAMA,KACLqB,MAAc,EACnB,EAAK0H,aAAmB,EACxB,EAAKC,MAAc,IAAI5C,EACvB,EAAKzJ,MAAc,GACf,EAAKsM,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAClC,EAAKC,cAAmB,EAAKA,cAAcD,KAAnB,gBACxB,EAAKE,YAAkB,EAAKA,YAAYF,KAAjB,gBACvB,EAAKG,sBAAyB,EAAKA,sBAAsBH,KAA3B,gBAC9B,EAAKI,sBAAyB,EAAKA,sBAAsBJ,KAA3B,gBAC9B,EAAKK,oBAAuB,EAAKA,oBAAoBL,KAAzB,gBAC5B,EAAKM,kBAAsB,EAAKA,kBAAkBN,KAAvB,gBAC3B,EAAKO,mBAAuB,EAAKA,mBAAmBP,KAAxB,gBACxB,EAAKQ,MAAa,CACfhU,OAAS,EACTD,MAAQ,EACdiN,WAAY,EACZQ,OAAS,EACTE,OAAS,EACTnB,WAAc,EAAK+G,MAAM/G,WACzBC,gBAAiB,EAAK8G,MAAM9G,gBAC5BC,gBAAiB,EAAK6G,MAAM7G,gBAC5BC,gBAAiB,EAAK4G,MAAM5G,gBAC5BC,WAAc,EAAK2G,MAAM3G,WAEzBE,aAAc,GA1BI,E,+EA8BFoB,GACjB,IAAMgG,EAAShG,EAAMgG,OACfC,EAAyB,aAAhBD,EAAO9R,KAAsB8R,EAAOE,QAAUF,EAAOC,MAC9DE,EAAQH,EAAOG,KAIrB,OAHAlS,KAAKmS,SAAL,eACED,EAAOF,KAEF,I,yCAEWjG,GAAO,IAAD,OAElBmG,EADSnG,EAAMgG,OACAG,KAKrB,OAJAlS,KAAKoR,MAAMc,IAASlS,KAAKoR,MAAMc,GAC/BlS,KAAKmS,SAAU,SAAAL,GAAK,sBAClBI,EAAQ,EAAKd,MAAMc,OAEd,I,4CAEcnG,GAClBA,EAAMI,gBAAkBJ,EAAMI,eAAexO,QAE/CyU,SAASC,iBAAiB,YACzB,SAAAC,GACCA,EAAGC,iBACHD,EAAGE,4BAEJ,CAACC,SAAQ,IAEVL,SAASC,iBAAiB,YAAarS,KAAK0R,uBAC5CU,SAASC,iBAAiB,WAAYrS,KAAK2R,sBAGpC5F,IACPqG,SAASC,iBAAiB,YAAarS,KAAK0R,uBAC5CU,SAASC,iBAAiB,UAAWrS,KAAK2R,sBAE3C3R,KAAKoR,MAAMK,sBAAsB1F,K,0CAEdA,GACnBqG,SAASM,oBAAoB,YAAa1S,KAAKyR,uBAC/CW,SAASM,oBAAoB,UAAW1S,KAAK2R,qBAC7CS,SAASM,oBAAoB,YAAa1S,KAAK0R,uBAC/C,IAAMtG,EAAUpL,KAAK2S,UACfC,EAASC,SAAS7S,KAAKoR,MAAMO,oBAAoB5F,EAAOX,IAK9D,OAJ+B,IAA3BpL,KAAK8R,MAAMnH,aAAyBiI,EAAO,IAC9C5S,KAAKmR,cAAgB,EACrBnR,KAAK8S,YAAaF,KAEZ,I,4CAEc7G,GACrB,IAAMX,EAASpL,KAAK2S,UACpB,OAAO3S,KAAKoR,MAAMM,sBAAsB3F,EAAOX,K,oCAElCW,GACb,IAAIA,IAAUA,EAAMgH,IAEnB,OADAlQ,QAAQC,IAAI,8CACL,EAER,GAAoC,IAAjC9C,KAAKoR,MAAM/M,WAAW1G,OAExB,OADAkF,QAAQC,IAAI,+CACL,EAER,IACUxD,EADMU,KAAK2S,UACItG,WAAW,MAEpC,OAAmB,IADArM,KAAKgT,gBAAgBjH,EAAMS,WAK9CT,EAAMwG,iBACNvS,KAAKoR,MAAMG,cAAcxF,EAAMS,QAASlN,IACjC,K,sCAGP,OAAOU,KAAKoR,MAAM6B,kB,kCAEPlH,GAEX,OAAmB,IADA/L,KAAKgT,gBAAgBjH,EAAMS,UAGvCxM,KAAKoR,MAAMI,gB,sCAEHlB,GAEf,IADA,IAAI4C,GAAa,EACT5Q,EAAE,EAAGA,EAAEtC,KAAKoR,MAAMjH,aAAaxM,OAAQ2E,IAC9C,GAAItC,KAAKoR,MAAMjH,aAAa7H,KAAOgO,EAAQ,CAC1C4C,GAAa,EACb,MAGF,OAAOA,I,0CAEY,IAAD,OACd3K,OAAO8J,iBAAiB,SAAUrS,KAAKqR,wBACvCe,SAASe,KAAKd,iBAAiB,UAAWrS,KAAKuR,eAC/Ca,SAASe,KAAKd,iBAAiB,QAASrS,KAAKwR,aACjD,IACUlS,EADKU,KAAK2S,UACItG,WAAW,MAChCrM,KAAKqR,yBACRrR,KAAKoR,MAAMgC,YAAY9T,GACvBU,KAAKqT,SAAWrG,YACf,kBAAI,EAAKsG,oBACT,M,6CAIG/K,OAAOmK,oBAAoB,SAAU1S,KAAKqR,wBAC1Ce,SAASe,KAAKT,oBAAoB,UAAY1S,KAAKuR,eACnDa,SAASe,KAAKT,oBAAoB,QAAU1S,KAAKwR,aACrDY,SAASM,oBAAoB,YAAa1S,KAAK0R,uBAC/CU,SAASM,oBAAoB,UAAY1S,KAAK2R,qBAC9CS,SAASM,oBAAoB,aAAc1S,KAAKyR,uBAChDW,SAASM,oBAAoB,YAAa1S,KAAK0R,uBAC/CU,SAASM,oBAAoB,WAAa1S,KAAK2R,qBAC/C3R,KAAKoR,MAAMmC,kB,uFAOXvT,KAAKyJ,MAAQzJ,KAAKoR,MAAM3H,MACM,OAA3BzJ,KAAKoR,MAAMzG,aACV3K,KAAKoR,MAAMzG,cAAgB3K,KAAK8R,MAAMnH,cAErC3K,KAAKmS,SAAS,CACXxH,YAAa3K,KAAKoR,MAAMzG,eAEA,IAA3B3K,KAAKoR,MAAMzG,cACd3K,KAAKmR,cAAgB,EACrBnR,KAAK8S,YAAa9S,KAAKmR,kB,kCAIbqC,GACZxT,KAAKyT,uBACY,IAAdD,EACFxT,KAAKoR,MAAQ,IAAIb,EAAO,CAAC9G,MAAMzJ,KAAKyJ,QACf,IAAd+J,EACPxT,KAAKoR,MAAQ,IAAIZ,EAAO,CAAC/G,MAAMzJ,KAAKyJ,QACf,IAAd+J,EACPxT,KAAKoR,MAAQ,IAAIR,EAAO,CAACnH,MAAMzJ,KAAKyJ,SAKpCzJ,KAAKoR,MAAU,IAAI5C,EACnBxO,KAAKmR,aAAe,GAErBnR,KAAK0T,sB,+CAGD,IAAI7V,EAAS0K,OAAOoL,WAChB7V,EAAUyK,OAAOqL,YAEftU,EADKU,KAAK2S,UACItG,WAAW,OAE/BvO,GAAY,KACC,IACVA,EAAS,IAHhBD,GAAS,IAIE,IACVA,EAAQ,GACLmC,KAAKmS,SAAS,CACXtU,MAAOA,EACPC,OAAQA,IAEfkC,KAAKoR,MAAMyC,mBAAmBhW,EAAOC,EAAQwB,K,+BAEnC,IAAD,OAWHwU,EAAc,CACnBtU,MAAO,QACPqK,gBAAiB,SAEd,OACG,yBAAKkK,MAfK,CAChBC,aAAc,GACdC,YAAa,KAcJ,4BAAQC,IAAK,SAAA9I,GAAM,OAAI,EAAKuH,UAAYvH,GAC/C+I,GAAG,eACOtW,MAAOmC,KAAK8R,MAAMjU,MAClBC,OAAQkC,KAAK8R,MAAMhU,OACnBiW,MAhBQ,CACpBK,WAAa,sBACbC,WAAa,IACPC,OAAY,oBAClBC,YAAa,QAaXC,YAAiBxU,KAAKyR,sBACtBgD,aAAiBzU,KAAKyR,wBAEvB,2BAAO5T,MAAOmC,KAAK8R,MAAMjU,OACxB,+BACA,4BACC,4BACC,4BACWkW,MAAOD,EACjB5B,KAAK,aACLwC,QAAS1U,KAAK6R,oBAHf,gBAKe7R,KAAK8R,MAAMzH,WAAa,MAAQ,OAGhD,4BACC,4BACW0J,MAAOD,EACjB5B,KAAK,kBACLwC,QAAS1U,KAAK6R,oBAEb7R,KAAK8R,MAAMvH,gBAAkB,SAAW,QAL1C,mBASD,4BACC,4BACWwJ,MAAOD,EACjB5B,KAAK,kBACLwC,QAAS1U,KAAK6R,oBAEb7R,KAAK8R,MAAMtH,gBAAkB,SAAW,QAL1C,oBASF,4BACC,4BACC,4BACWuJ,MAAOD,EACjB5B,KAAK,aACLwC,QAAS1U,KAAK6R,oBAEb7R,KAAK8R,MAAMrH,WAAa,SAAW,QALrC,qBAQD,4BACC,4BACWsJ,MAAOD,EACjB5B,KAAK,kBACLwC,QAAS1U,KAAK6R,oBAEb7R,KAAK8R,MAAMxH,gBAAkB,SAAW,OAL1C,YAQD,4BACC,4BAAQyJ,MAAOD,GAAf,iBAKF,4BACC,4BACC,4BACCC,MAAOD,EACPY,QAAS,SAAAC,IXkYV,SAAqB5P,GAE3B,IAAI,IAAIzC,EAAE,EAAGA,EAAEyC,EAAMpH,OAAQ2E,IAAI,CAChC,IAAIoD,EAAOX,EAAMzC,GACdpE,KAAKE,UAAW,IAClBsH,EAAKpB,UWvYgBsQ,CAAY,EAAKxD,MAAMrM,SAFxC,sBAOD,4BACC,4BACCgP,MAAOD,EACPY,QAAU,SAAAC,IXkYX,SAAyB5P,GAE/B,IAAI,IAAIzC,EAAE,EAAGA,EAAEyC,EAAMpH,OAAQ2E,IAAI,CAChC,IAAIoD,EAAOX,EAAMzC,GACdoD,EAAKpF,GAAK,IACZoF,EAAKpF,IAAM,GACToF,EAAKnF,GAAK,IACZmF,EAAKnF,IAAM,GACZ,IAAMsU,EAASpW,EAAe,EAAG,KAAQiH,EAAKpF,GACxCwU,EAASrW,EAAe,EAAG,KAAQiH,EAAKnF,GAC9CmF,EAAK9D,WAAYiT,EAAQC,IW5YJC,CAAgB,EAAK3D,MAAMrM,SAF3C,qBAOD,4BACC,4BACAgP,MAAOD,EACPY,QAAU,SAAAC,IXuYV,SAAyB5P,GAE/B,IAAI,IAAIzC,EAAE,EAAGA,EAAEyC,EAAMpH,OAAQ2E,IAAI,CAChC,IAAIoD,EAAOX,EAAMzC,GACXT,EAASpD,EAAe,EAAG,KAAQiH,EAAKpF,GACxCwB,EAASrD,EAAe,EAAG,KAAQiH,EAAKnF,GAC9CmF,EAAKjE,WAAYI,EAAQC,IW7YJkT,CAAgB,EAAK5D,MAAMrM,SAF3C,6B,GA5SekQ,IAAMC,WCIRC,QACW,cAA7B5M,OAAO6M,SAASC,UAEe,UAA7B9M,OAAO6M,SAASC,UAEhB9M,OAAO6M,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAAapD,SAASqD,eAAe,SD4H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.3dcb448e.chunk.js","sourcesContent":["export function countDecimals(x){\n\tif( (x%1) !== 0 )\n\t\treturn x.toString().split(\".\")[1].length || 0;\n\treturn 0;\n}\nexport function distanceBetween(x1, y1, x2, y2){\n\tconst xDiff \t= x1-x2;\n\tconst yDiff \t= y1-y2;\n\tconst distance\t= Math.sqrt(xDiff**2 + yDiff**2);\n\treturn distance;\n}\nexport function getMiddleOfCanvas(width, height){\n\t\tlet cords = {};\n\t\tcords.x = width/2;\n\t\tcords.y = height/2;\n\t\treturn cords;\n}\nexport function getRandomColor(){\n\tlet red\t\t= Math.floor(Math.random() * 3) * 127;\n\tlet green\t= Math.floor(Math.random() * 3) * 127;\n\tlet blue\t\t= Math.floor(Math.random() * 3) * 127;\n\tlet rc\t\t= \"rgb(\" + red + \", \" + green + \", \" + blue + \")\";\n\treturn rc;\n}\nexport function getRandomInt(min, max) {\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexport function getRandomFloat(min, max){\n\t//Get a random number with decimals not exceeding smallest place;\n\tconst decimals1\t= countDecimals(min);\n\tconst decimals2\t= countDecimals(max);\n\tconst retDecimals = Math.max(decimals1, decimals2);\n\tlet random\t\t\t= (Math.random() * (max - min) + min).toFixed(retDecimals);\n\trandom\t\t\t\t= parseFloat(random);\n\treturn random;\n}\nexport function isInRange(x, min, max){\n\treturn (x>=min && x<=max);\n}\nexport function isOverLapping(x1, y1, x2, y2, distance){\n\t/*\tWill use distance formula to compute;\n\t\tInput:\n\t\t\tx1: int\n\t\t\ty1: int\n\t\t\tx2: int\n\t\t\ty2: int\n\t\t\tdistance: int\n\t\tOutput:\n\t\t\tboolean\n\t*/\n\tif( (x1-x2)**2 + (y1-y2)**2 <= distance**2 )\n\t\treturn true;\n\treturn false\n}\nexport function moveSVG(svgString, x,y ){\n\t/*\tChange the svgString to be drawn based off a starting point of x,y\n\t\tReturn String\n\t*/\n\tlet commands\t\t\t= svgString.split(/([ACHLMQSTVZachlmvqstz])/);\n\tlet moddedCommands\t= [];\n\tlet i = 0;\n\twhile(i < commands.length ){\n\t\tlet command\t\t\t= commands[i];\n\t\tlet coordString\t= commands[i+1];\n\t\tif(command === \"\"){\n\t\t\ti += 1;\n\t\t\tcontinue;\n\t\t}\n\t\tif(command === 'M' || command === 'm'){\n\t\t\t//\"Move to\" commands:\n\t\t\t//\tM: Move to coordinates\n\t\t\t//\tm: Move relative to last position\n\t\t\tconst coordArr\t= coordString.split(' ');\n\t\t\tconst xPre\t\t= parseFloat(coordArr[0]);\n\t\t\tconst yPre\t\t= parseFloat(coordArr[1]);\n\t\t\tconst xNext\t\t= (xPre + x).toString();\n\t\t\tconst yNext\t\t= (yPre + y).toString();\n\t\t\tconst nextCoord\t= xNext + \" \" + yNext;\n\t\t\tmoddedCommands.push(command);\n\t\t\tif(command === 'M')\n\t\t\t\tmoddedCommands.push(nextCoord);\n\t\t\telse\n\t\t\t\tmoddedCommands.push(coordString);\n\t\t//\tconsole.log('m: ' + nextCoord);\n\t\t}\n\t\telse if(command === 'L' || command === 'l'){\n\t\t\t//L: Draw a line to x,y coords\n\t\t\t//l: Draw a line relative to last point\n\t\t\tconst coordArr\t= coordString.split(' ');\n\t\t\tconst xPre\t\t= parseFloat(coordArr[0]);\n\t\t\tconst yPre\t\t= parseFloat(coordArr[1]);\n\t\t\tconst xNext\t\t= (xPre + x).toString();\n\t\t\tconst yNext\t\t= (yPre + y).toString();\n\t\t\tconst nextCoord\t= xNext + \" \" + yNext;\n\t\t\tmoddedCommands.push(command);\n\t\t\tif(command === 'L')\n\t\t\t\tmoddedCommands.push(nextCoord);\n\t\t\telse\n\t\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\t\telse if(command === 'H' || command === 'h'){\n\t\t\t//H: Draw a horizontal line from curr point to given coords;\n\t\t\t//h: Draw a horizontal line from curr point by dx ratio;\n\t\t\tconst coordArr\t= coordString.split(' ');\n\t\t\tconst xPre\t\t= parseFloat(coordArr[0]);\n\t\t\tconst xNext\t\t= (xPre + x).toString();\n\t\t\tmoddedCommands.push(command);\n\t\t\tif(command === 'H')\n\t\t\t\tmoddedCommands.push(xNext);\n\t\t\telse\n\t\t\t\tmoddedCommands.push(xPre.toString());\n\t\t}\n\t\telse if(command === 'V' || command === 'v'){\n\t\t\t//V: Draw a vertical line from curr point to given coords;\n\t\t\t//v: Draw a vertical line from curr point by dy ratio;\n\t\t\tconst coordArr\t= coordString.split(' ');\n\t\t\tconst yPre\t\t= parseFloat(coordArr[1]);\n\t\t\tconst yNext\t\t= (yPre + y).toString();\n\t\t\tmoddedCommands.push(command);\n\t\t\tif(command === 'V')\n\t\t\t\tmoddedCommands.push(yNext);\n\t\t\telse\n\t\t\t\tmoddedCommands.push(yPre.toString());\n\t\t}\n\t\telse if(command === 'C' || command === 'c'){\n\t\t\t/*\n\t\t\tDraw a cubic Bézier curve from the current point to the end point \n\t\t\tspecified by x,y. The start control point is specified by x1,y1 \n\t\t\tand the end control point is specified by x2,y2. \n\t\t\tAny subsequent triplet(s) of coordinate pairs are interpreted as \n\t\t\tparameter(s) for implicit absolute cubic Bézier curve (C) command(s). \n\t\t\tFormulae: Po' = Pn = {x, y} ; Pcs = {x1, y1} ; Pce = {x2, y2}\n\t\t\t*/\n\t\t\tmoddedCommands.push(command);\n\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\t\telse if(command === 'S' || command === 's'){\n\t\t\t/*\n\t\t\tDraw a smooth cubit  Bézier curve from the current point to \n\t\t\tthe end point specified by x,y. \n\t\t\t*/\n\t\t\tmoddedCommands.push(command);\n\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\t\telse if(command === 'Q' || command === 'q'){\n\t\t\t/*\n\t\t\tDraw a quadratic Bézier curve from the current point \n\t\t\tto the end point specified by x,y. \n\t\t\t*/\n\t\t\tmoddedCommands.push(command);\n\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\t\telse if(command === 'T' || command === 't'){\n\t\t\t/*\n\t\t\tDraw a smooth quadratic Bézier curve from the current point to the \n\t\t\tend point specified by x,y. \n\t\t\t*/\n\t\t\tmoddedCommands.push(command);\n\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\n\n\t\telse if(command === 'A' || command === 'a'){\n\t\t\tmoddedCommands.push(command);\n\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\t\telse{\n\t\t\tmoddedCommands.push(command);\n\t\t\tmoddedCommands.push(coordString);\n\t\t}\n\t\ti += 2;\n\t}//end i-for\n\tconst ret = moddedCommands.join(' ');\n\t//console.log(ret)\n\treturn ret;\n}\nexport function writeToScreen(ctx, msg, x, y, color=\"black\", font=\"25px Arial\"){\n\tctx.beginPath();\n\tctx.font      = font;\n\tctx.fillStyle = color;\n\tctx.fillText(msg, x, y);\n\tctx.closePath();\n}\n","import { getRandomColor, getRandomFloat, getRandomInt, isOverLapping } from \"./utils.js\";\n\nexport class Ball{\n\tconstructor(properties){\n\t\tthis.type\t\t\t= 'ball';\n\t\tthis.ballID\t\t\t= properties.ballID;\n\t\tthis.color\t\t\t= properties.color;\n\t\tthis.xCord\t\t\t= properties.xCord;\n\t\tthis.yCord\t\t\t= properties.yCord;\n\t\tthis.radius\t\t\t= properties.radius;\n\t\tthis.dx \t\t\t\t= properties.dx;\n\t\tthis.dy\t\t\t\t= properties.dy;\n\t\tthis.gravity\t\t= 0.45;\n\t\tthis.friction\t\t= 0.05;\n\t\tthis.kineticLoss\t= 1/3;\n\t\tthis.kineticGain\t= 2/3;\n\t\t//Direction variables;\n\t\tthis.isGoingRight\t= true;\t//Ball starts going to the right;\n\t\tthis.isGoingDown\t= true;\t//Ball starts going down;\n\t\tthis.isGoingLeft\t= false;\n\t\tthis.isGoingUp\t\t= false;\n\t\tthis.nextX\t\t\t= this.xCord + this.dx;\n\t\tthis.nextY\t\t\t= this.yCord + this.dy;\n\t\t//Boundary variables;\n\t\tthis.canGoLeft\t\t= false;\n\t\tthis.canGoRight\t= false;\n\t\tthis.canGoDown\t\t= false;\n\t\tthis.canGoUp\t\t= false;\n\t}\n\taccelerate(dxBoost, dyBoost){\n\t\tthis.dx += dxBoost;\n\t\tthis.dy += dyBoost;\n\n\t\t//Apply buffer to stay in speed of light realm;\n\t\tif(this.dx > this.radius*2 - 0.01)\n\t\t\tthis.dx = this.radius*2 - 0.01;\n\t\tif(this.dy > this.radius*2 - 0.01)\n\t\t\tthis.dy = this.radius*2 - 0.01;\n\n\t\tif(this.dx > this.maxSpeed)\n\t\t\tthis.dx = this.maxSpeed;\n\t\tif(this.dy > this.maxSpeed)\n\t\t\tthis.dy = this.maxSpeed;\n\t\tthis.decelerate(0,0);\t//Hack to check if zero;\n\t\t//Should we be updating the next coords here?\n\t\t\t//this.setNextCoordinates();\n\t}\n\taccelerateBySize(dx=true, dy=true, ratio=50){\n\t\tconst rate = this.radius/ratio;\n\t\tif(dx && dy)\n\t\t\tthis.accelerate(rate, rate);\n\t\telse if(dx)\n\t\t\tthis.accelerate(rate, 0);\n\t\telse if(dy)\n\t\t\tthis.accelerate(0, rate);\n\t\t//Should we be updating the next coords here?\n\t\t\t//this.setNextCoordinates();\n\t}\n\tapplyGravity(){\n\t\tif(this.isGoingDown)\n\t\t\tthis.accelerate(0, this.gravity);\n\t\telse if(this.isGoingUp)\n\t\t\tthis.decelerate(0, this.gravity);\n\t\telse if (this.canGoDown)\n\t\t\tthis.accelerate(0, this.gravity);\n\t}\n\tdecelerate(dxLoss, dyLoss){\n\t\tthis.dx -= dxLoss;\n\t\tthis.dy -= dyLoss;\n\t\tif(this.dx <=0)\n\t\t\tthis.dx = 0;\n\t\tif(this.dy <=0)\n\t\t\tthis.dy = 0;\n\t\t//Should we be updating the next coords here?\n\t\t\t//this.setNextCoordinates();\n\t}//end decelerate()\n\tdestruct(){\n\t\t//Destroy Ball\n\t\tthis.radius\t= 0;\n\t}\n\tdistanceTo(x, y){\n\t\t//Try to avoid using this, as we do not want\n\t\t//to take the sqrt routinely; If comparing, look at\n\t\t// utils.js: isOverLapping() instead;\n\t\tconst xDiff \t= this.nextX - x;\n\t\tconst yDiff \t= this.nextY - y;\n\t\tconst distance\t= Math.sqrt(xDiff**2 + yDiff**2);\n\t\treturn distance;\n\t}\n\tdraw(ctx){\n\t\tctx.beginPath();\n\t\tctx.arc(\n\t\t\tthis.xCord,\n\t\t\tthis.yCord, \n\t\t\tthis.radius,\n\t\t\t2*Math.PI,\t\t//Start angle in radians\n\t\t\t0\t\t\t\t\t//End angle in radians\n\t\t);\n\t\tctx.fillStyle = this.color;\n\t\tctx.fill();\n\t\tctx.closePath();\n\t}//end draw()\n\thandleBallCollisions(allBalls){\n\t\t//Find out if NEXT coordinates overlap anything;\n\t\tfor(let i=0; i<allBalls.length; i++){\n\t\t\tif(this.ballID === allBalls[i].ballID)\n\t\t\t\tcontinue;\n\t\t\tlet otherBall\t\t\t= allBalls[i];\n\t\t\tconst minDistance\t\t= otherBall.radius + this.radius;\n\t\t\tlet willOverlap\t\t= isOverLapping(\n\t\t\t\tthis.nextX, \n\t\t\t\tthis.nextY, \n\t\t\t\totherBall.nextX, \n\t\t\t\totherBall.nextY, \n\t\t\t\tminDistance\n\t\t\t);\n\t\t\tif( !willOverlap )\n\t\t\t\tcontinue;\n\n\t\t\t//Set the directions that this ball cannot go;\n\t\t\tif(this.nextX > otherBall.nextX){\n\t\t\t\t//Current ball is right of otherball\n\t\t\t\tthis.canGoLeft = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.canGoRight = false;\n\t\t\tif(this.nextY > otherBall.yCord){\n\t\t\t\t//Current ball is below of otherball\n\t\t\t\tthis.canGoUp = false;\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.canGoDown = false;\n\n\t\t\t//Adjust the next coordinates so that they do not overlap otherBall;\n\t\t\t//We can do this by taking the ratio of dx and dy changes and \"step back\"\n\t\t\t//\tthrough time until we find a place the balls no longer overlap;\n\t\t\tlet timeRatio\t= 50;\n\t\t\tlet dyRatio\t\t= this.dy / timeRatio;\n\t\t\tlet dxRatio\t\t= this.dx / timeRatio;\n\t\t\tlet cnt\t\t\t= 0;\n\t\t\twhile(willOverlap){\n\t\t\t\tif(this.isGoingRight)\n\t\t\t\t\tthis.nextX -= dxRatio;\t//Step back left\n\t\t\t\telse if(this.isGoingLeft)\n\t\t\t\t\tthis.nextX += dxRatio;\t//Step back right\n\t\t\t\tif(this.isGoingDown)\n\t\t\t\t\tthis.nextY -= dyRatio;\t//Step back up\n\t\t\t\telse if(this.isGoingUp)\n\t\t\t\t\tthis.nextY += dyRatio;\t//Step back down\n\t\t\t\twillOverlap\t\t= isOverLapping(\n\t\t\t\t\tthis.nextX, \n\t\t\t\t\tthis.nextY, \n\t\t\t\t\totherBall.nextX, \n\t\t\t\t\totherBall.nextY, \n\t\t\t\t\tminDistance\n\t\t\t\t);\n\n\t\t\t\tcnt += 1;\n\t\t\t\tif(cnt === timeRatio){\n\t\t\t\t\t//Problem not solved;\n\t\t\t\t\t//We need to adjust the ball instead;\n\t\t\t\t\tthis.nextY = this.yCord;\n\t\t\t\t\tthis.nextX = this.xCord;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}//end while\n\n\t\t\tif(cnt === timeRatio){\n\t\t\t\t//Overlap problem not solved;\n\t\t\t\tif(this.canGoDown === false){\n\t\t\t\t\tif(this.canGoRight && this.canGoLeft)\n\t\t\t\t\t\tconsole.log('weird');\n\t\t\t\t\tif(this.canGoRight && this.dx === 0){\n\t\t\t\t\t\tthis.accelerateBySize(true, false);\n\t\t\t\t\t}\n\t\t\t\t\telse if(this.canGoLeft && this.dx === 0){\n\t\t\t\t\t\tthis.accelerateBySize(true, false);\n\t\t\t\t\t}\n\t\t\t\t\t//else, stuck\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Apply Kinetic Transfers & Friction\n\t\t\totherBall.decelerate(this.friction, this.friction);\n\t\t\tthis.decelerate(otherBall.friction, otherBall.friction);\n\t\t\t\n\t\t\tif(this.kineticLoss > 0 && this.kineticGain > 0){\n\t\t\t\totherBall.accelerate(this.dx * this.kineticLoss, 0)\n\t\t\t\totherBall.accelerate(0, this.dy * this.kineticLoss)\n\t\t\t\tthis.dy\t\t\t*= this.kineticGain;\n\t\t\t\tthis.dx\t\t\t*= this.kineticGain;\n\t\t\t}\n\t\t}//end i-for\n\t\treturn true;\n\t}//End handleBallCollision()\n\thandleClick(){\n\t\tconsole.log('accelerating ball' + this.ballID);\n\t\tthis.accelerate(5, 20);\n\t\treturn true;\n\t}\n\thandleMovement(friction){\n\t\t//Set directions for next movement based off of current collisions;\n\n\t\tif(this.dy === 0){\n\t\t\t//Ball has no more momentum;\n\t\t\tif(this.isGoingUp){\n\t\t\t\t//Ball lost momentum, but is in the air; Ball comes back down;\n\t\t\t\tthis.isGoingUp\t\t= false;\n\t\t\t\tif(this.canGoDown){\n\t\t\t\t\t//We have a small bug here where momentum is still happening;\n\t\t\t\t\tthis.isGoingDown\t= true;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.isGoingDown\t= false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this.isGoingDown){\n\t\t\t\t//Ball has no more momentum to go back up;\n\t\t\t\tthis.isGoingUp = false;\n\t\t\t\tthis.isGoingDown = false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isGoingUp\t\t= false;\n\t\t\t\tthis.isGoingDown\t= false;\n\t\t\t\tif(this.canGoDown === false){\n\t\t\t\t\t//Ball is just rolling and losing dx momentum;\n\t\t\t\t\tthis.decelerate(friction, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\t//Ball Has Momenutm;\n\t\t\tif(this.canGoDown && this.canGoUp){\n\t\t\t\t//Ball can go anywhere and should follow its natural path;\n\t\t\t\tif(this.isGoingDown){\n\t\t\t\t\tthis.isGoingUp\t\t= false;\t\n\t\t\t\t\tthis.isGoingDown\t= true;\n\t\t\t\t}\n\t\t\t\telse if(this.isGoingUp){\n\t\t\t\t\tthis.isGoingUp\t\t= true;\n\t\t\t\t\tthis.isGoingDown\t= false;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.isGoingUp\t\t= false;\n\t\t\t\t\tthis.isGoingDown\t= true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(this.canGoUp){\n\t\t\t\t//Ball has momentum and can go up;\n\t\t\t\t//Ball cannot go down;\n\t\t\t\tthis.isGoingUp = true;\n\t\t\t\tthis.isGoingDown = false;\n\t\t\t}\n\t\t\telse if(this.canGoDown){\n\t\t\t\tthis.isGoingDown\t= true;\n\t\t\t\tthis.isGoingUp\t\t= false\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isGoingDown\t= false;\n\t\t\t\tthis.isGoingUp\t\t= false;\n\t\t\t\tthis.decelerate(friction, 0);\n\t\t\t}\n\t\t}\n\t\t//END up/down movements;\n\t\tif(this.dx <=0){\n\t\t\t//If Ball has no momentum, it can go in neither direction;\n\t\t\t//But if ball is \"stuck\", we need to give it a boost;\n\t\t\tif(this.canGoDown && this.gravity > 0){\n\t\t\t\tif(this.dx === 0){\n\t\t\t\t\t//this.accelerate(this.gravity*4, 0);\n\t\t\t\t}\n\t\t\t\tif(this.canGoRight){\n\t\t\t\t\tthis.isGoingRight = true;\n\t\t\t\t\tthis.isGoingLeft\t= false;\n\t\t\t\t}\n\t\t\t\telse if(this.canGoLeft){\n\t\t\t\t\tthis.isGoingRight = false;\n\t\t\t\t\tthis.isGoingLeft\t= true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isGoingRight = false;\n\t\t\t\tthis.isGoingLeft\t= false;\n\t\t\t}\n\t\t}\n\t\telse if(!this.isGoingRight && !this.isGoingLeft){\n\t\t\t//Ball had no momentum but just received momentum;\n\t\t\tif(this.canGoRight){\n\t\t\t\tthis.isGoingRight\t= true;\n\t\t\t\tthis.isGoingLeft\t= false;\n\t\t\t}\n\t\t\telse if(this.canGoLeft){\n\t\t\t\tthis.isGoingLeft\t= true;\n\t\t\t\tthis.isGoingRight\t= false;\n\t\t\t}\n\t\t}\n\t\telse if(this.canGoRight && this.canGoLeft){\n\t\t\t//Ball has momentum and can go its natural path;\n\t\t\tif(this.isGoingRight){\n\t\t\t\tthis.isGoingRight\t= true;\n\t\t\t\tthis.isGoingLeft\t= false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isGoingLeft\t= true;\n\t\t\t\tthis.isGoingRight\t= false;\n\t\t\t}\n\t\t}\n\t\telse if(this.canGoRight){\n\t\t\t//Ball has momentum but cannot go left;\n\t\t\tthis.isGoingRight\t= true;\n\t\t\tthis.isGoingLeft\t= false;\n\t\t}\n\t\telse if(this.canGoLeft){\n\t\t\t//Ball has momentum but cannot go right;\n\t\t\tthis.isGoingLeft\t= true;\n\t\t\tthis.isGoingRight\t= false;\n\t\t}\n\t\telse{\n\t\t\tthis.isGoingRight\t= false;\n\t\t\tthis.isGoingLeft\t= false;\n\t\t}\n\n\t\tif(this.isGoingUp && this.isGoingDown)\n\t\t\tconsole.log('ERROR: BALL CANNOT GO UP AND DOWN');\n\t\tif(this.isGoingLeft && this.isGoingRight){\n\t\t\tconsole.log('ERROR: BALL CANNOT GO LEFT AND RIGHT');\n\t\t}\n\t}//End handleMovement()\n\thandleRectangleInteractions(rectangle, screenWidth, screenHeight){\n\t\t//Handle rectangle objects\n\t\tlet isOverlapping = rectangle.isOverLappingBall(this);\n\t\tif( isOverlapping === false)\n\t\t\treturn;\n\t\tthis.decelerate(rectangle.friction, rectangle.friction);\n\n\t\t//There is a collision;\n\t\t//Set the directions that this ball cannot go;\n\t\trectangle.hitCount += 1;\n\t\tif(this.nextX > rectangle.xCenter){\n\t\t\t//Current ball is right of rectangle\n\t\t\tthis.canGoLeft = false;\n\t\t}\n\t\telse\n\t\t\tthis.canGoRight = false;\n\t\tif(this.nextY > rectangle.yCenter){\n\t\t\t//Current ball is below of rectangle; \n\t\t\tthis.canGoUp = false;\n\t\t}\n\t\telse{\n\t\t\tthis.canGoDown = false;\n\t\t\tif(this.dy === 0){\n\t\t\t\t//BUG: this never seems to happen\n\t\t\t\t//console.log('cant go back up');\n\t\t\t\tthis.canGoUp = false;\n\t\t\t}\n\t\t\tthis.nextY = rectangle.yTop + this.radius;\n\t\t}\n\n\t\t//Set canGo* flags, rewind time on next* coords;\n\t\tlet timeRatio\t= 50;\n\t\tlet dyRatio\t\t= this.dy / timeRatio;\n\t\tlet dxRatio\t\t= this.dx / timeRatio;\n\t\tlet cnt\t\t\t= 0;\n\t\tlet isResolved\t= true;\n\t\twhile(isOverlapping){\n\t\t\tif(this.isGoingRight)\n\t\t\t\tthis.nextX -= dxRatio;\t//Step back left\n\t\t\telse if(this.isGoingLeft)\n\t\t\t\tthis.nextX += dxRatio;\t//Step back right\n\t\t\tif(this.isGoingDown)\n\t\t\t\tthis.nextY -= dyRatio;\t//Step back up\n\t\t\telse if(this.isGoingUp)\n\t\t\t\tthis.nextY += dyRatio;\t//Step back down\n\t\t\tisOverlapping = rectangle.isOverLappingBall(this);\n\t\t\tcnt += 1;\n\t\t\tif(cnt === timeRatio){\n\t\t\t\t//Problem not solved;\n\t\t\t\t//We need to adjust the ball instead;\n\t\t\t\tisResolved = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}//end while\n\t\tif(isResolved === false){\n\t\t\tthis.nextY = this.yCord;\n\t\t\tthis.nextX = this.xCord;\n\t\t}\n\t}//end handleRectangleInteractions()\n\thandleWallCollisions(maxWidth, maxHeight, friction){\n\t\tconst willOverlapBottom\t= this.hitBottom(maxHeight);\n\t\tconst willOverlapTop\t\t= this.hitTop(0);\n\t\tconst willOverlapRight\t= this.hitRight(maxWidth);\n\t\tconst willOverlapLeft\t= this.hitLeft(0);\n\t\tif(willOverlapTop && willOverlapBottom){\n\t\t\t//The screen is now to small for our ball;\n\t\t\t//This is now handles with  window resize;\n\t\t}\n\t\telse if(willOverlapBottom){\n\t\t\tthis.decelerate(0, friction);\n\t\t\tif(this.dy === 0){\n\t\t\t\tthis.canGoUp = false;\n\t\t\t}\n\t\t\tthis.canGoDown = false;\n\t\t\tthis.nextY = maxHeight - this.radius;\n\t\t}\n\t\telse if(willOverlapTop){\n\t\t\tthis.decelerate(0, friction);\n\t\t\tthis.canGoUp = false;\n\t\t\tthis.nextY = 0 + this.radius;\n\t\t}\n\t\telse{\n\t\t\t//No collision\n\t\t}\n\t\tif(willOverlapRight && willOverlapLeft){\n\t\t\t//The screen is now to small for our ball;\n\t\t\t//We will just keep the ball at it's current place and stop all movemnt;\n\t\t\t//TODO: Handle this with window resize;\n\t\t\tthis.nextX = this.xCord;\n\t\t\tthis.nextY = this.yCord;\n\t\t\tthis.dy = 0;\n\t\t\tthis.dx = 0;\n\t\t\tconsole.log('WARNING: SCREEN NOT FITTED;');\n\t\t}\n\t\telse if(willOverlapRight){\n\t\t\tthis.canGoRight = false;\n\t\t\tthis.nextX = maxWidth - this.radius;\n\t\t}\n\t\telse if(willOverlapLeft){\n\t\t\tthis.canGoLeft = false;\n\t\t\tthis.nextX = 0 + this.radius;\n\t\t}\n\t\telse{\n\t\t\t//No collision\n\t\t}\n\t}//End handleWallCollision\n\thandleWindowResize(maxWidth, maxHeight, otherBalls, rectangles){\n\t\tif(this.yCord + this.radius > maxHeight){\n\t\t\tthis.yCord = maxHeight - this.radius;\n\t\t\tthis.accelerate(4, 10);\n\t\t\tthis.shrink();\n\t\t}\n\t\tif(this.yCord - this.radius <= 0){\n\t\t\tthis.shrink();\n\t\t}\n\t\tif(this.xCord + this.radius > maxWidth || this.xCord - this.radius < 0){\n\t\t\tif(this.xCord + this.radius > maxWidth)\n\t\t\t\tthis.xCord = maxWidth - this.radius;\n\t\t\telse\n\t\t\t\tthis.xCord = 0 + this.radius;\n\t\t\tthis.accelerate(10, 4);\n\t\t\tthis.shrink();\n\t\t}\n\t\tfor(let i=0; i<otherBalls.length; i++){\n\t\t\tlet otherBall = otherBalls[i];\n\t\t\tif(otherBall.ballID === this.ballID)\n\t\t\t\tcontinue;\n\t\t\tconst isOverLapping\t= this.isOverLappingBall(otherBall);\n\t\t\tif(isOverLapping)\n\t\t\t\tthis.shrink();\n\t\t}//end i-for\n\t\tfor(let i=0; i<rectangles.length; i++){\n\t\t\tconst rectangle = rectangles[i];\n\t\t\tif(rectangle.isOverLappingBall(this)){\n\t\t\t\t//Need to find balls position relative to rectangle;\n\t\t\t\t//nearestX and nearestY are places on our rectangle;\n\t\t\t\tconst nearestX = Math.max(\n\t\t\t\t\trectangle.xLeft,\n\t\t\t\t\tMath.min(this.xCord, rectangle.xLeft+rectangle.width),\n\t\t\t\t);\n\t\t\t\tconst nearestY = Math.max(\n\t\t\t\t\trectangle.yTop,\n\t\t\t\t\tMath.min(this.xCord, rectangle.yTop+rectangle.height),\n\t\t\t\t);\n\t\t\t\tif(this.yCord + this.radius < nearestY){\n\t\t\t\t\t//Ball is above rectangle;\n\t\t\t\t\t//We need to adjust ball up;\n\t\t\t\t\tthis.yCord = nearestY + this.radius;\n\t\t\t\t}\n\t\t\t\telse if(this.yCord - this.radius < nearestY){\n\t\t\t\t\t//Ball is below rectangle;\n\t\t\t\t\t//We need to adjust ball down;\n\t\t\t\t\tthis.yCord = nearestY - this.radius;\n\t\t\t\t}\n\t\t\t\tif(this.xCord - this.radius > nearestX){\n\t\t\t\t\t//Ball is right of rectangle and needs to be adjusted right;\n\t\t\t\t\tthis.xCord = nearestX + this.radius;\n\t\t\t\t}\n\t\t\t\telse if(this.xCord + this.radius < nearestX){\n\t\t\t\t\t//Ball is left of rectangle and needs to be adjusted left;\n\t\t\t\t\tthis.xCord = nearestX - this.radius;\n\t\t\t\t}\n\t\t\t\tthis.accelerate(6,6);\n\t\t\t\tthis.shrink();\n\t\t\t}\n\t\t}//end i-for\n\t\t\n\t}//end handleWindowResize()\n\thitBottom(maxHeight){\n\t\tconst ballMaxBottom = this.nextY + this.radius;\n\t\tif(ballMaxBottom >= maxHeight)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\thitLeft(minWidth){\n\t\tconst ballMaxLeft = this.nextX - this.radius;\n\t\tif(ballMaxLeft <= minWidth)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\thitTop(minHeight){\n\t\tconst ballMaxTop = this.nextY - this.radius;\n\t\tif(ballMaxTop <= minHeight)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\thitRight(maxWidth){\n\t\tconst ballMaxRight = this.nextX + this.radius;\n\t\tif(ballMaxRight >= maxWidth)\n\t\t\treturn true;\n\t\treturn false;\n\t\n\t}\n\tisOverLappingBall(otherBall){\n\t\tconst doesOverLap = isOverLapping(\n\t\t\tthis.xCord, \n\t\t\tthis.yCord, \n\t\t\totherBall.nextX, \n\t\t\totherBall.nextY,\n\t\t\tthis.radius + otherBall.radius\n\t\t);\n\t\tif(doesOverLap === false)\n\t\t\treturn false;\n\t\treturn true;\n\t}//end isOverLappingBall\n\tlabel(ctx){\n\t\tif(this.radius < 30)\n\t\t\treturn;\n\t\tctx.beginPath();\n\t\tif(!this.isGoingDown && !this.isGoingUp){\n\t\t\tif(!this.isGoingRight && !this.isGoingLeft){\n\t\t\t\tctx.font      = \"12px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"Static\"+this.ballID, this.xCord - this.radius+1, this.yCord+1);\n\n\t\t\t\tctx.font      = \"10px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"dx:\" + this.dx.toFixed(2), this.xCord - this.radius+10, this.yCord+10);\n\n\t\t\t\tctx.font      = \"10px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"dy:\" + this.dy.toFixed(2), this.xCord - this.radius+10, this.yCord+20);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tctx.font      = \"12px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"Rolling\"+this.ballID, this.xCord - this.radius+1, this.yCord+1);\n\t\t\t\tif(this.isGoingRight){\n\t\t\t\t\tctx.font      = \"10px Arial\";\n\t\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\t\tctx.fillText(\"Right\", this.xCord - this.radius+10, this.yCord+10);\n\t\t\t\t}\n\t\t\t\tif(this.isGoingLeft){\n\t\t\t\t\tctx.font      = \"10px Arial\";\n\t\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\t\tctx.fillText(\"Left\", this.xCord - this.radius+10, this.yCord+10);\n\t\t\t\t}\n\t\t\t\tctx.font      = \"10px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(this.dx.toFixed(2), this.xCord - this.radius+10, this.yCord+20);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tctx.font      = \"10px Arial\";\n\t\t\tctx.fillStyle = \"white\";\n\t\t\tctx.fillText(\"Bouncing\" + this.ballID, this.xCord - this.radius+1, this.yCord+1);\n\t\t\tif(this.isGoingDown){\n\t\t\t\tctx.font      = \"8px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"Down: \" + this.dy.toFixed(1), this.xCord - this.radius+13, this.yCord+10);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tctx.font      = \"8px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"Up: \" + this.dy.toFixed(1), this.xCord - this.radius+13, this.yCord+10);\n\t\t\t}\n\t\t\tif(this.isGoingLeft){\n\t\t\t\tctx.font      = \"8px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"Left: \" + this.dx.toFixed(1), this.xCord - this.radius+13, this.yCord+22);\n\t\t\t}\n\t\t\tif(this.isGoingRight){\n\t\t\t\tctx.font      = \"8px Arial\";\n\t\t\t\tctx.fillStyle = \"white\";\n\t\t\t\tctx.fillText(\"Right: \" + this.dx.toFixed(1), this.xCord - this.radius+13, this.yCord+22);\n\t\t\t}\n\t\t}\n\t\tctx.closePath();\n\t}//end label()\n\tmove(sWidth, sHeight, wallFriction, rectangles, balls){\n\t\t//Assume we can go any direction first; Change values on `handle`*;\n\t\t//Reset canGo* properties for this iteration;\n\t\tthis.resetSurroundings();\n\t\t\n\t\t//Set coordinates for next movment;\n\t\tthis.setNextCoordinates();\n\n\t\t//See if next coordinates create any conflicts and if expected coordinates \n\t\t//\twill prevent us from going certain directions;\n\t\tfor(let i=0; i<rectangles.length; i++){\n\t\t\tthis.handleRectangleInteractions(\n\t\t\t\trectangles[i], \n\t\t\t\tsWidth, \n\t\t\t\tsHeight\n\t\t\t);\n\t\t}\n\t\tthis.handleWallCollisions(sWidth, sHeight, wallFriction);\n\t\tthis.handleBallCollisions(balls);\n\t\t//Process final available movements; Update coords appropriately; Apply Gravity;\n\t\tthis.handleMovement(wallFriction);\n\t\tthis.updateCoordinates();\n\t\tthis.applyGravity();\n\t}//end move()\n\tresetSurroundings(){\n\t\tthis.canGoUp\t\t= true;\n\t\tthis.canGoDown\t\t= true;\n\t\tthis.canGoLeft\t\t= true;\n\t\tthis.canGoRight\t= true;\n\t}\n\tsetNextCoordinates(){\n\t\t//Update balls nextX and nextY according to previous movement;\n\t\tif(this.isGoingUp)\n\t\t\tthis.nextY = this.yCord - this.dy;\n\t\telse if(this.isGoingDown)\n\t\t\tthis.nextY = this.yCord + this.dy;\n\t\tif(this.isGoingLeft)\n\t\t\tthis.nextX = this.xCord - this.dx;\n\t\telse if(this.isGoingRight)\n\t\t\tthis.nextX = this.xCord + this.dx;\n\t}//end setNextCoordinates\n\tsetRandomDirection(){\n\t\tconst modGroup = getRandomInt(0,3);\n\t\tif(modGroup === 0){\n\t\t\tthis.isGoingDown\t= true;\n\t\t\tthis.isGoingUp\t\t= false;\n\t\t\tthis.isGoingRight\t= true;\n\t\t\tthis.isGoingLeft\t= false;\n\t\t}\n\t\telse if(modGroup === 1){\n\t\t\tthis.isGoingDown\t= true;\n\t\t\tthis.isGoingUp\t\t= false;\n\t\t\tthis.isGoingRight\t= false;\n\t\t\tthis.isGoingLeft\t= true;\n\t\t}\n\t\telse if(modGroup === 2){\n\t\t\tthis.isGoingDown\t= false;\n\t\t\tthis.isGoingUp\t\t= true;\n\t\t\tthis.isGoingRight\t= false;\n\t\t\tthis.isGoingLeft\t= true;\n\t\t}\n\n\t\telse if(modGroup === 3){\n\t\t\tthis.isGoingDown\t= false;\n\t\t\tthis.isGoingUp\t\t= true;\n\t\t\tthis.isGoingRight\t= true;\n\t\t\tthis.isGoingLeft\t= false;\n\t\t}\n\t}//end setNewBallDirection()\n\n\tshrink(){\n\t\t//Destroy Ball\n\t\tthis.radius\t*= 0.9;\n\t\tthis.setNextCoordinates();\n\t}\n\tupdateCoordinates(){\n\t\tthis.xCord = this.nextX;\n\t\tthis.yCord = this.nextY;\n\t}\n}//End Ball Class\n\nexport function shrinkBalls(balls){\n\t//Each ball has a 50% chance of getting radius reduced;\n\tfor(let i=0; i<balls.length; i++){\n\t\tlet ball = balls[i];\n\t\tif(Math.random() >=0.5)\n\t\t\tball.shrink();\n\t}//end i-for\n}//end shrinkBalls\nexport function accelerateBalls(balls){\n\t//Accelerate each and every ball by a random percent;\n\tfor(let i=0; i<balls.length; i++){\n\t\tlet ball = balls[i];\n\t\tif(ball.dx < 1)\n\t\t\tball.dx += 3;\n\t\tif(ball.dy < 1)\n\t\t\tball.dy += 3;\n\t\tconst dxGain = getRandomFloat(0, 0.99) * ball.dx;\n\t\tconst dyGain = getRandomFloat(0, 0.99) * ball.dy;\n\t\tball.accelerate( dxGain, dyGain );\n\t}//end i-for\n}//end accelerateBalls\nexport function decelerateBalls(balls){\n\t//Decelerate each and every ball by a random percent;\n\tfor(let i=0; i<balls.length; i++){\n\t\tlet ball = balls[i];\n\t\tconst dxLoss = getRandomFloat(0, 0.99) * ball.dx;\n\t\tconst dyLoss = getRandomFloat(0, 0.99) * ball.dy;\n\t\tball.decelerate( dxLoss, dyLoss );\n\t}//end i-for\n}//end decelerateBalls\nexport function isLegalBall(ball, sWidth, sHeight, otherBalls, rectangles){\n\t/*Ball is legal if it: \n\t\t1. is in bounds\n\t\t2. is not overlapping the rectangle\n\t\t3. ball is not overallping any otherBall in this.balls;\n\t*/\n\tif(ball.xCord - ball.radius < 0)\n\t\treturn false;\n\tif(ball.xCord + ball.radius > sWidth)\n\t\treturn false;\n\tif(ball.yCord - ball.radius < 0)\n\t\treturn false;\n\tif(ball.yCord + ball.radius > sHeight)\n\t\treturn false;\n\tfor(let i=0; i<rectangles.length; i++){\n\t\tconst rectangle = rectangles[i];\n\t\tconst rectangleBallConflict = rectangle.isOverLappingBall(ball);\n\t\tif(rectangleBallConflict)\n\t\t\treturn false;\n\t}//end i-for\n\tfor(let i=0; i<otherBalls.length; i++){\n\t\tconst otherBall\t\t= otherBalls[i];\n\t\tconst isOverLapping\t= ball.isOverLappingBall(otherBall);\n\t\tif(isOverLapping)\n\t\t\treturn false;\n\t}//end i-for\n\treturn true;\n}//end isLegalBall()\n\nexport function makeRandomBall(sWidth, sHeight, ballID, minRadius=3, maxRadius=30, maxSpeed=null){\n\t/*\tReturn false if random ball fails;\n\t\tElse return random ball;\n\t\tInput:\n\t\t\tscreen width,\n\t\t\tscreen height,\n\t\t\tballID\n\t\t\tmininum radius possible,\n\t\t\tmaximum radius possible,\n\t\t\tmaxSpeed possible -- no more than 2 times given radius;\n\t\tOutput:\n\t\t\tBall object;\n\t\t@ ./src/Balls.js\n\t*/\n\tlet randomRadius\t= getRandomInt(minRadius, maxRadius);\n\trandomRadius += getRandomInt(1,99) * 0.01;\n\tconst randomX\t= getRandomInt(randomRadius, sWidth - randomRadius);\n\tconst randomY\t= getRandomInt(randomRadius, sHeight - randomRadius);\n\tlet randomDX\t= getRandomFloat(0, 0.151);\t//Slow start\n\tlet randomDY\t= getRandomFloat(0, 0.151);\t//Slow start\n\tif(maxSpeed !== null){\n\t\tif(randomDX > maxSpeed)\n\t\t\trandomDX = maxSpeed;\n\t\tif(randomDY > maxSpeed)\n\t\t\trandomDY = maxSpeed;\n\t}\n\tconst newBall\t= new Ball({\n\t\tballID:\tballID,\n\t\tcolor:\tgetRandomColor(),\n\t\txCord:\trandomX,\n\t\tyCord:\trandomY,\n\t\tradius:\trandomRadius,\n\t\tdx: \t\trandomDX,\n\t\tdy:\t\trandomDY,\n\t});\n\tif(maxSpeed !== null){\n\t\tif(maxSpeed < randomRadius)\n\t\t\tnewBall.maxSpeed = maxSpeed;\n\t\telse\n\t\t\tnewBall.maxSpeed = Math.ceil(randomRadius);\t//set max speed to a legal int of radius;\n\t}\n\telse\n\t\tnewBall.maxSpeed = randomRadius;\n\treturn newBall;\n}//end makeRandomBall\n","import {isOverLapping} from \"./utils.js\";\n\nexport class Rectangle{\n\t'use strict';\n\tconstructor(properties){\n\t\tthis.type\t\t\t\t= 'rectangle';\n\t\tthis.rectID\t\t\t\t= properties.rectID;\n\t\tthis.color\t\t\t\t= properties.color;\n\t\tthis.width\t\t\t\t= properties.width;\n\t\tthis.height\t\t\t\t= properties.height;\n\t\tthis.xLeft\t\t\t\t= properties.xLeft;\n\t\tthis.yTop\t\t\t\t= properties.yTop;\n\t\tthis.xRight\t\t\t\t= this.xLeft + this.width;\n\t\tthis.yBottom\t\t\t= this.yTop + this.height;\n\t\tthis.xCenter\t\t\t= Math.abs(this.xRight\t- this.width/2);\n\t\tthis.yCenter\t\t\t= Math.abs(this.yBottom - this.height/2);\n\t\tthis.nextX\t\t\t\t= this.xLeft;\n\t\tthis.nextY\t\t\t\t= this.yTop;\n\t\tthis.gravity\t\t\t= 0;\n\t\tthis.friction\t\t\t= 0.05;\n\t\tthis.isLabeled\t\t\t= false;\n\t\tthis.isDraggable\t\t= false;\n\t\tthis.isDestructible\t= true;\n\t\tthis.hitCount\t\t\t= 0;\n\t}\n\tcontains(x, y){\n\t\tif (this.xLeft <= x && x <= this.xLeft + this.width){\n\t\t\tif(this.yTop <= y && y <= this.yTop + this.height)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\tdraw(ctx){\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\tthis.xLeft,\n\t\t\tthis.yTop, \n\t\t\tthis.width,\n\t\t\tthis.height, \n\t\t);\n\t\tctx.fillStyle = this.color;\n\t\tctx.fill();\n\t\tctx.closePath();\n\t}//end draw()\n\thandleMove(sWidth, sHeight, entities=[]){\n\t\t//Handle rectangle movement:\n\t\tif(this.isDraggable === false)\n\t\t\treturn false;\n\t\tthis.handleWallInteractions(sWidth, sHeight);\n\t\tthis.handleEntityInteractions(sWidth, sHeight, entities);\n\t\tthis.updateCoordinates();\n\t\treturn true;\n\t}//end handleMove\n\thandleBallInteractions(sWidth, sHeight, ball){\n\t\t/*\tFind out what way rectangle is moving;\n\t\t\tIf we encounter a ball, move that ball IFF that ball can move in the other direction;\n\t\t*/\n\t\tif(this.isOverLappingBall(ball) === false){\n\t\t\treturn true;\n\t\t}\n\t\t//Move rectangle away from ball until no overlap continue;\n\t\tconst timeRatio\t= 50;\n\t\tconst dx\t\t\t\t= Math.abs(this.xLeft - this.nextX);\n\t\tconst dy\t\t\t\t= Math.abs(this.yTop - this.nextY);\n\t\tconst dxRatio\t\t= dx/timeRatio;\n\t\tconst dyRatio \t\t= dy/timeRatio;\n\t\tlet timeCnt\t\t\t= 0;\n\t\twhile(this.isOverLappingBall(ball)){\n\t\t\tif(this.isGoingRight)\n\t\t\t\tthis.nextX -= dxRatio;\t//Move back left\n\t\t\telse if(this.isGoingLeft)\n\t\t\t\tthis.nextX += dxRatio;\t//Move back right\n\t\t\tif(this.isGoingUp)\n\t\t\t\tthis.nextY += dyRatio;\t//Move back down;\n\t\t\telse if(this.isGoingDown)\n\t\t\t\tthis.nextY -= dyRatio;\t//Move back up;\n\t\t\ttimeCnt += 1;\n\t\t\tif(timeCnt === timeRatio){\n\t\t\t\tthis.nextX = this.xLeft;\n\t\t\t\tthis.nextY = this.yTop;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(this.isOverLappingBall(ball)){\n\t\t\t//Ball and rectangle are super stuck for whatever reason;\n\t\t\t//Manually try to move rectangle out of the way;\n\t\t\tconsole.log('ERROR: Rectangle.handleBallInteractions: Super stuck;');\n\t\t\tif(this.isGoingRight && ball.nextX < this.xCenter){\n\t\t\t\t//Rectangle is moving right and ball is stuck left of rectangle;\n\t\t\t\tthis.nextX += ball.radius;\n\t\t\t}\n\t\t\telse if(this.isGoingRight && ball.nextX > this.xCenter){\n\t\t\t\t//Rectangle is moving right and ball is right of rectangle;\n\t\t\t\t//Since this is overlapping, move the rectangle back left to avoid overlap;\n\t\t\t\tthis.nextX -= ball.radius;\n\t\t\t}\n\t\t\tif(this.isGoingLeft && ball.nextX > this.xCenter){\n\t\t\t\tthis.nextX -= ball.radius;\n\t\t\t}\n\t\t\telse if(this.isGoingLeft && ball.nextX < this.xCenter){\n\t\t\t\t//Moving left and ball is left; Since overlap, move back right;\n\t\t\t\tthis.nextX += ball.radius;\n\t\t\t}\n\n\t\t\tif(this.isGoingDown && ball.nextY > this.yCenter){\n\t\t\t\t//Move rectangle back up;\n\t\t\t\tthis.nextY -= ball.radius\n\t\t\t}\n\t\t\telse if(this.isGoingDown && ball.nextY < this.yCenter){\n\t\t\t\t//Rectangle is going down and ball is above above rectangle;\n\t\t\t\t//Move rectangle down;\n\t\t\t\tthis.nextY += ball.radius\n\t\t\t}\n\t\t\tif(this.isGoingUp && ball.nextY > this.yCenter){\n\t\t\t\t//Rectangle is going up and ball is below rectangle;\n\t\t\t\t//Move rectangle up;\n\t\t\t\tthis.nextY -= ball.radius\n\t\t\t}\n\t\t\telse if(this.isGoingup && ball.nextY < this.yCenter){\n\t\t\t\t//Move rectangle down;\n\t\t\t\tthis.nextY += ball.radius;\n\t\t\t}\n\n\t\t}\n\n\t\t//Process directions and speeds\n\t\tif(this.isGoingRight && ball.nextX > this.xCenter){\n\t\t\t//Rectangle is going right and ball is in path;\n\t\t\tthis.isGoingRight = false;\n\t\t}\n\t\tif(this.isGoingLeft && ball.nextX < this.xCenter){\n\t\t\tthis.isGoingLeft\t= false;\n\t\t}\n\t\tif(this.isGoingDown && ball.nextY > this.yCenter){\n\t\t\tthis.isGoingDown = false;\n\t\t}\n\t\tif(this.isGoingUp && ball.nextY < this.yCenter){\n\t\t\tthis.isGoingUp = false;\n\t\t}\n\t\t\n\n\t}\n\thandleEntityInteractions(sWidth, sHeight, entities=[]){\n\t\tfor( let i=0; i<entities.length; i++){\n\t\t\tconst entity\t= entities[i];\n\t\t\tif(entity.type === 'rectangle')\n\t\t\t\tthis.handleRectangleInteractions(sWidth, sHeight, entity);\n\t\t\telse if(entity.type === 'ball')\n\t\t\t\tthis.handleBallInteractions(sWidth, sHeight, entity);\n\t\t\telse{\n\t\t\t\t//type not found\n\t\t\t}\n\t\t}//end i-for\n\t}\n\thandleRectangleInteractions(sWidth, sHeight, entity){\n\t\t//Encountered other rectangle; Can we move that rectangle, too?\n\t}\n\thandleWallInteractions(sWidth, sHeight){\n\t\t//Find out what item is out of bounds and fix accordingly;\n\t\tif(this.nextX < 0)\n\t\t\tthis.nextX = 0;\n\t\tif(this.nextX + this.width > sWidth)\n\t\t\tthis.nextX = sWidth - this.width;\n\t\tif(this.nextY < 0)\n\t\t\tthis.nextY = 0;\n\t\tif(this.nextY + this.height > sHeight)\n\t\t\tthis.nextY = sHeight - this.height;\n\t\treturn true;\n\t}//end handleWallInteractions()\n\tisDestructing(){\n\t\tif(this.isDestructible === false)\n\t\t\treturn false;\n\t\tif(this.hitCount > 0)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\tisOverLappingBall(ball){\n\t\t/* Is rectangle intersecting/overlapping ball;\n\t\t\tInput:\n\t\t\t\tBall() object\n\t\t\tOutput:\n\t\t\t\tBoolean\n\t\t*/\n\t\tconst ballDistanceX\t= Math.abs(ball.nextX - this.xCenter);\n\t\tconst ballDistanceY\t= Math.abs(ball.nextY - this.yCenter);\n\t\tconst sideDistance\t= this.width/2 + ball.radius;\n\t\tconst vertDistance\t= this.height/2 + ball.radius;\n\t\tif( ballDistanceX > sideDistance )\n\t\t\treturn false;\n\t\tif( ballDistanceY > vertDistance )\n\t\t\treturn false;\n\t\tif( ballDistanceX <= (this.width/2) )\n\t\t\treturn true;\n\t\tif( ballDistanceY <= (this.height/2) )\n\t\t\treturn true;\n\n\t\t//Corners\n\t\tconst areCornersTouching = isOverLapping(\n\t\t\tballDistanceX,\n\t\t\tballDistanceY,\n\t\t\tthis.width/2,\n\t\t\tthis.height/2,\n\t\t\tball.radius\n\t\t);\n\t\tif(areCornersTouching)\n\t\t\treturn true;\n\t\treturn false;\n\t}//end isOverLappingBall()\n\tisInBounds(width, height){\n\t\t//Determine if rectangle fits the screen width and screen height;\n\t\tif(this.xLeft < 0)\n\t\t\treturn false;\n\t\tif(this.xRight > width)\n\t\t\treturn false;\n\t\tif(this.yTop < 0)\n\t\t\treturn false;\n\t\tif(this.yBottom > height)\n\t\t\treturn false;\n\t\treturn true;\n\t}//end isInBounds();\n\tisLegalMovement(nextX, nextY, entities){\n\t\t/*\tGo over entities and see if this next movement is going to cause\n\t\t\ta conflict with the existing rectangle;\n\n\t\t\tTODO: accelerating the ball here is not intuitive;\n\t\t*/\n\t\tthis.nextX = nextX;\n\t\tthis.nextY = nextY;\n\t\tconst dx\t\t\t= Math.abs(this.xLeft - nextX);\n\t\tconst dy\t\t\t= Math.abs(this.yTop - nextY);\n\t\tconst dxBoost\t= dx/100;\n\t\tconst dyBoost\t= dy/100;\n\t\tfor( let i=0; i<entities.length; i++){\n\t\t\tconst entity = entities[i];\n\t\t\tif(entity.type === 'ball'){\n\t\t\t\tif( this.willOverLapBall(entity) ){\n\t\t\t\t\tconsole.log('illegal movement: reseting coordinates back;');\n\t\t\t\t\t//Accelerate ball;\n\t\t\t\t\tentity.accelerate(dxBoost, dyBoost);\n\t\t\t\t\tthis.nextX = this.xLeft;\n\t\t\t\t\tthis.nextY = this.yYop;\n\t\t\t\t\tthis.resetMovement();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}//end ball check\n\t\t}//end i-for\n\t\treturn true;\n\t}\n\tprocessDrag(clientX, clientY, entities){\n\t\tconst xMid\t\t\t= this.xCenter;\n\t\tconst yMid\t\t\t= this.yCenter;\n\t\tlet nextX \t\t\t= this.xLeft;\n\t\tlet nextY \t\t\t= this.yTop;\n\t\tthis.resetMovement();\n\n\t\tif(clientX < xMid){\n\t\t\t//Move left\n\t\t\tnextX = clientX - (this.width/2);\n\t\t\tthis.isGoingLeft = true;\n\t\t}\n\t\telse if(clientX > xMid){\n\t\t\t//Move right\n\t\t\tnextX = clientX - (this.width/2);\n\t\t\tthis.isGoingRight = true;\n\t\t}\n\t\telse{\n\t\t\t//Same position\n\t\t}\n\t\tif(clientY < yMid){\n\t\t\t//Move Up\n\t\t\tnextY = clientY - (this.height/2);\n\t\t\tthis.isGoingUp = true;\n\t\t}\n\t\telse if(clientY > yMid){\n\t\t\t//Move Down\n\t\t\tnextY = clientY - (this.height/2);\n\t\t\tthis.isGoingDown = true;\n\t\t}\n\t\telse{\n\t\t\t//Same position\n\t\t}\n\n\t\tconst isLegalDrag = this.isLegalMovement(nextX, nextY, entities);\n\t\tif(isLegalDrag === false){\n\t\t\tthis.nextX = this.xLeft;\n\t\t\tthis.nextY = this.yTop;\n\t\t\tthis.resetMovement();\n\t\t\treturn false;\n\t\t}\n\t\telse{\n\t\t\tthis.nextX = nextX;\n\t\t\tthis.nextY = nextY;\n\t\t\treturn true;\n\t\t}\n\t}//end processDrag()\n\tprocessMovement(){\n\t\t\n\t}\n\tresetMovement(){\n\t\tthis.isGoingLeft\t= false;\n\t\tthis.isGoingRight\t= false;\n\t\tthis.isGoingUp\t\t= false;\n\t\tthis.isGoingDown\t= false;\n\t}\n\tupdateCoordinates(){\n\t\tthis.xLeft\t\t= this.nextX;\n\t\tthis.yTop\t\t= this.nextY;\n\t\tthis.xRight\t\t= this.xLeft + this.width;\n\t\tthis.yBottom\t= this.yTop + this.height;\n\t\tthis.xCenter\t= Math.abs(this.xRight\t- this.width/2);\n\t\tthis.yCenter\t= Math.abs(this.yBottom - this.height/2);\n\t\tthis.nextX\t\t= this.xLeft;\n\t\tthis.nextY\t\t= this.yTop;\n\t}//end updateCoordinates()\n\twillOverLapBall(ball){\n\t\t//Do some coordinate trickery to see if updated results will \n\t\t//\tcause a conflict as if it did happen;\n\t\tconst currX\t= this.xLeft;\n\t\tconst currY = this.yTop;\n\t\tconst nextX = this.nextX;\n\t\tconst nextY = this.nextY;\n\t\tthis.updateCoordinates();\n\t\tconst ret = this.isOverLappingBall(ball);\n\t\tthis.nextX = currX;\n\t\tthis.nextY = currY;\n\t\tthis.updateCoordinates();\n\t\tthis.nextX = nextX;\n\t\tthis.nextY = nextY;\n\t\treturn ret;\n\t}\n}//End Rectangle Class\n","import { Ball } from \"./Ball.js\";\nimport { getRandomColor, getRandomFloat, getRandomInt } from \"./utils.js\";\n\nexport class ClickableBall extends Ball{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.href\t= props.href;\n\t\tthis.faUnicode = props.faUnicode;\n\t}//end constructor()\n\thandleClick(){\n\t\t/*WARNING: ReWrite of ./Balls.js and handleClick\n\t\t\tOpen current balls link in new tab, and TRY TO \n\t\t\tkeep focus on the current window (not always a guarantee);\n\t\t\tSee: pop-under\n\t\t\tInput:\n\t\t\t\tNone\n\t\t\tOutput:\n\t\t\t\tBoolean if success;\n\t\t*/\n\t\tconst tab = window.open(this.href, '_blank');\n\t\ttab.blur();\n\t\twindow.focus();\n\t\treturn true;\n\t}\n\n\tlabel(ctx){\n\t\t/*\tWARNING: Rewrite of Balls.js method;\n\t\t*/\n\t\tconst fontSize = this.radius - 5;\n\t\tconst x\t\t\t= this.xCord - (this.radius/3);\n\t\tconst y\t\t\t= this.yCord + (this.radius/3);\t//Somehow this work very well;\n\t\tif(fontSize <0)\n\t\t\treturn false;\n\t\tctx.beginPath();\n\n\t\t//WARNING: Just pulling in css via ./public/index.html css link\n\t\t//TODO: Fix this up and import just the icons we neeed;\n\t\tctx.font\t\t\t= '400 '+fontSize+'px \"Font Awesome 5 Brands\"';\n\t\tctx.fillStyle\t= \"white\";\n\t\tctx.fillText(this.faUnicode, x, y);\t//Coords are left and down;\n\n\t\tctx.closePath();\n\t\treturn true;\n\t}//end label()\n}\nexport function makeRandomClickableBall(\n\tsWidth, \n\tsHeight, \n\tballID, \n\tminRadius=3, \n\tmaxRadius=30, \n\tfaUnicode,\n\thref, \n\tmaxSpeed=null\n){\n\t/*\tReturn false if random ball fails;\n\t\tElse return random ball;\n\t\tInput:\n\t\t\tscreen width,\n\t\t\tscreen height,\n\t\t\tballID\n\t\t\tmininum radius possible,\n\t\t\tmaximum radius possible,\n\t\t\tmaxSpeed possible -- no more than 2 times given radius;\n\t\tOutput:\n\t\t\tBall object;\n\t\t@ ./src/Balls.js\n\t*/\n\tlet randomRadius\t= getRandomInt(minRadius, maxRadius);\n\trandomRadius += getRandomInt(1,99) * 0.01;\n\tconst randomX\t= getRandomInt(randomRadius, sWidth - randomRadius);\n\tconst randomY\t= getRandomInt(randomRadius, sHeight - randomRadius);\n\tlet randomDX\t= getRandomFloat(0, 0.151);\t//Slow start\n\tlet randomDY\t= getRandomFloat(0, 0.151);\t//Slow start\n\tif(maxSpeed !== null){\n\t\tif(randomDX > maxSpeed)\n\t\t\trandomDX = maxSpeed;\n\t\tif(randomDY > maxSpeed)\n\t\t\trandomDY = maxSpeed;\n\t}\n\tconst newBall\t= new ClickableBall({\n\t\tballID:\tballID,\n\t\tcolor:\tgetRandomColor(),\n\t\txCord:\trandomX,\n\t\tyCord:\trandomY,\n\t\tradius:\trandomRadius,\n\t\tdx: \t\trandomDX,\n\t\tdy:\t\trandomDY,\n\t});\n\tif(maxSpeed !== null){\n\t\tif(maxSpeed < randomRadius)\n\t\t\tnewBall.maxSpeed = maxSpeed;\n\t\telse\n\t\t\tnewBall.maxSpeed = Math.ceil(randomRadius);\t//set max speed to a legal int of radius;\n\t}\n\telse\n\t\tnewBall.maxSpeed = randomRadius;\n\tnewBall.href\t\t= href;\n\tnewBall.faUnicode = faUnicode;\n\treturn newBall;\n}//end makeRandomClickableBall\n","import { writeToScreen } from \"./utils.js\";\n\nexport class HUD{\n\tconstructor( props={} ){\n\t\tthis.x\t\t\t\t\t= null;\n\t\tthis.y\t\t\t\t\t= null;\n\t\tthis.w\t\t\t\t\t= null;\n\t\tthis.ballMsg\t\t\t= null;\n\t\tthis.brickMsg\t\t\t= null;\n\t\tthis.bottom\t\t\t\t= null;\n\t\tthis.h\t\t\t\t\t= 13;\n\t\tthis.ballTemplate\t\t= \"BALLS: \";\n\t\tthis.brickTemplate\t= \"BRICKS: \";\n\t\tthis.background\t\t= \"grey\";\n\t\tthis.fontColor\t\t\t= \"orange\";\n\t\tthis.font\t\t\t\t= \"13px Arial\";\n\t}//end constructor\n\tupdateDisplay(sWidth, ballCount, brickCount, score){\n\t\tthis.ballMsg\t\t= this.ballTemplate + ballCount;\n\t\tthis.brickMsg\t\t= this.brickTemplate + brickCount;\n\t\tlet lDiff\t\t\t= null;\n\t\tconst maxLength\t= Math.max(\n\t\t\tthis.ballMsg.length,\n\t\t\tthis.brickMsg.length\n\t\t);\n\t\tif(this.ballMsg.length < maxLength){\n\t\t\tlDiff\t\t\t\t= maxLength - this.ballMsg.length;\n\t\t\tthis.ballMsg\t= this.ballTemplate;\n\t\t\tfor (let i=0; i<lDiff; i++){\n\t\t\t\tthis.ballMsg += \" \";\n\t\t\t}\n\t\t\tthis.ballMsg += ballCount;\n\t\t}\n\t\tif(this.brickMsg.length < maxLength){\n\t\t\tlDiff\t\t\t\t= maxLength - this.brickMsg.length;\n\t\t\tthis.brickMsg\t= this.brickTemplate;\n\t\t\tfor (let i=0; i<lDiff; i++){\n\t\t\t\tthis.brickMsg += \" \";\n\t\t\t}\n\t\t\tthis.brickMsg += brickCount;\n\t\t}\n\t\tthis.w = 10 * (maxLength - 1);\n\t\tthis.x = sWidth - this.w + 16;\n\t\tthis.y = 15;\n\t\tthis.bottom = this.y*2 + 4;\n\t\tthis.score = score;\n\t}//end updateDisplay();\n\tlabelBallCnt(ctx){\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\tthis.x,\n\t\t\t0,\n\t\t\tthis.w,\n\t\t\tthis.y,\n\t\t);\n\t\tctx.fillStyle = this.background;\n\t\tctx.fill();\n\t\tctx.closePath();\n\t\twriteToScreen(ctx, this.ballMsg, this.x, this.y, this.fontColor, this.font);\n\t}\n\tlabelBrickCnt(ctx){\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.w,\n\t\t\tthis.y + 4\n\t\t);\n\t\tctx.fillStyle = this.background;\n\t\tctx.fill();\n\t\tctx.closePath();\n\t\twriteToScreen(ctx, this.brickMsg, this.x, this.bottom-4, this.fontColor, this.font);\n\t}\n\tlabelScore(ctx){\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\t0,\n\t\t\t0,\n\t\t\tthis.w,\n\t\t\tthis.bottom\n\t\t);\n\t\tctx.fillStyle = this.background;\n\t\tctx.fill();\n\t\tctx.closePath();\n\t\twriteToScreen(ctx, \"SCORE:\", 2, this.y, this.fontColor, this.font);\n\t\twriteToScreen(ctx, this.score+\"\", 2, this.bottom-4, this.fontColor, this.font);\n\t}\n}//end HUD class\n","import { isLegalBall, makeRandomBall } from \"./Ball.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { initClickables } from \"./initClickables.js\";\nimport { getMiddleOfCanvas, getRandomColor, isOverLapping, writeToScreen} from \"./utils.js\";\nimport { HUD } from \"./HUD.js\";\n\nexport class World{\n\tconstructor( props={} ){\n\t\t// Defaults\n\t\tthis.backgroundColor\t\t= props.backgroundColor\t|| \"black\";\n\t\tthis.wallFriction\t\t\t= props.wallFriction\t\t|| 0.075;\n\t\tthis.rectangleWidth\t\t= props.rectangleWidth\t|| 160;\n\t\tthis.rectangleHeight\t\t= props.rectangleHeight\t|| 30;\n\t\tthis.minRadius\t\t\t\t= props.minRadius\t\t\t|| 1;\n\t\tthis.maxRadius\t\t\t\t= props.maxRadius\t\t\t|| 3.00;\n\t\tthis.maxSpeed\t\t\t\t= props.maxSpeed\t\t\t|| 5;\n\t\tthis.ballFriction\t\t\t= props.ballFriction\t\t|| 0.05;\n\t\tthis.gravity\t\t\t\t= props.gravity\t\t\t|| 0.45;\n\t\tthis.kineticLoss\t\t\t= props.kineticLoss\t\t|| 0.15;\n\t\tthis.kineticKeep\t\t\t= props.kineticKeep\t\t|| 0.85;\n\t\tthis.initBallCnt\t\t\t= props.initBallCnt\t\t|| 0;\n\t\tthis.width\t\t\t\t\t= props.width\t\t\t\t|| 0;\n\t\tthis.height\t\t\t\t\t= props.height\t\t\t\t|| 0;\n\t\tthis.reservedKeys\t\t\t= [37, 38, 39, 40];\n\t\tthis.ballCnt\t\t\t\t= 0;\n\t\tthis.hasGravity\t\t\t= false;\n\t\tthis.isLeavingTrails\t\t= false;\n\t\tthis.hasWallFriction\t\t= false;\n\t\tthis.hasBallFriction\t\t= false;\n\t\tthis.hasInertia\t\t\t= false;\n\t\tthis.didInit\t\t\t\t= false;\n\t\tthis.isGameGoing\t\t\t= false;\n\t\tthis.hasBrandBalls\t\t= props.hasBrandBalls\t|| false;\n\t\tthis.hasMovableRect\t\t= props.hasMovableRect\t|| false;\n\t\tthis.balls\t\t\t\t\t= props.balls\t\t\t\t|| [];\n\t\tthis.score\t\t\t\t\t= props.score\t\t\t\t|| 0;\n\t\tthis.HUD\t\t\t\t\t\t= new HUD();\n\t\tthis.rectangles\t\t\t= [];\n\t\tthis.clickTimer\t\t\t= null;\t//Set only during a click; Reset to null after;\n\t}\n\tdidClickBall(xCanvasPos, yCanvasPos){\n\t\t/*\tGo through balls and see if clicked position is in ball or not;\n\t\t\tInpus:\n\t\t\t\tx click position relative to canvase\n\t\t\t\ty click position relative to canvase\n\t\t\tOutput:\n\t\t\t\tIf true, clicked ball;\n\t\t\t\tElse, NULL\n\t\t\t@ utils.js\n\t\t*/\n\t\tfor(let i=0; i<this.balls.length; i++){\n\t\t\tconst ball\t\t\t= this.balls[i];\n\t\t\tconst isClicked\t= isOverLapping(\n\t\t\t\txCanvasPos, \n\t\t\t\tyCanvasPos, \n\t\t\t\tball.xCord, \n\t\t\t\tball.yCord, \n\t\t\t\tball.radius\n\t\t\t);\n\t\t\tif(isClicked)\n\t\t\t\treturn ball;\n\t\t}//end i-for\n\t\treturn null;\n\t}//end didClickBall()\n\tdrawBackground(ctx){\n\t\tif(this.width === 0)\n\t\t\treturn false;\n\t\tctx.beginPath();\n\t\tctx.fillStyle = this.backgroundColor;\n\t\tctx.fillRect(0, 0, this.width, this.height);\n\t\tctx.closePath();\n\t\treturn true;\n\t}//end drawBackground();\n\tdrawBalls(ctx){\n\t\tfor(let i=0; i<this.balls.length; i++){\n\t\t\tconst ball = this.balls[i];\n\t\t\tball.draw(ctx);\n\t\t\tif(ball.href !== \"\"){\n\t\t\t\tball.label(ctx);\n\t\t\t}\n\t\t\telse\n\t\t\t\tball.label(ctx);\n\t\t}//end i-for\n\t}//end drawBalls()\n\tdrawRectangle(ctx){\n\t\tfor( let i=0; i<this.rectangles.length; i++){\n\t\t\tlet rectangle = this.rectangles[i];\n\t\t\trectangle.draw(ctx);\n\t\t\tif(rectangle.isLabeled === true){\n\t\t\t\t//TODO: Config optiosn for below;\n\t\t\t\twriteToScreen(\n\t\t\t\t\tctx, \n\t\t\t\t\t\"RECTANGLE\", \n\t\t\t\t\trectangle.xCenter -80, \n\t\t\t\t\trectangle.yCenter + 7, \n\t\t\t\t\tgetRandomColor()\n\t\t\t\t);\n\t\t\t}\n\t\t}//end i-for\n\t}//end drawRectangle()\n\thandleCanvasClick(canvas){\n\t\tconst rect\t\t\t= canvas.getBoundingClientRect();\n\t\tconst xCanvasPos\t= this.xClick - rect.left;\t\t//X cord of user click\n\t\tconst yCanvasPos\t= this.yClick - rect.top;\t\t//Y cord of user click\n\t\tconst clickedBall = this.didClickBall(xCanvasPos, yCanvasPos);\n\t\tif(clickedBall !== null){\n\t\t\treturn clickedBall.handleClick();;\n\t\t}\n\t\t//No ball was clicked; Is user trying to make a new ball?\n\t\tlet newBall = makeRandomBall(\n\t\t\tthis.width, \n\t\t\tthis.height, \n\t\t\tthis.balls.length, \n\t\t\t20,\t//this.minRadius, \n\t\t\t20,\t//this.maxRadius, \n\t\t\tthis.maxSpeed\n\t\t);\n\t\tnewBall.xCord = xCanvasPos;\n\t\tnewBall.yCord = yCanvasPos;\n\t\tnewBall.nextX = xCanvasPos;\n\t\tnewBall.nextY = yCanvasPos;\n\t\tlet isLegal\t= isLegalBall(\n\t\t\tnewBall,\n\t\t\tthis.width,\n\t\t\tthis.height,\n\t\t\tthis.balls,\n\t\t\tthis.rectangles\n\t\t);\n\t\tif(isLegal === false)\n\t\t\treturn false;\n\t\tnewBall.setRandomDirection();\n\t\tnewBall.accelerate(10,10);\n\t\tconsole.log('making new ball' + newBall.ballID);\n\t\tthis.balls.push(newBall);\n\t\tthis.ballCnt += 1;\n\t\treturn 0;\n\t}//end handleCanvasClick\n\thandleCanvasMouseUp(event, canvas){\n\t\t/* If elapsed time is less than half a second, user just clicked;\n\t\t\tElse, user is long pressing and moving the rectangle;\n\t\t*/\n\t\tconst endTime\t\t\t\t\t= new Date();\t//End time of screen click;\n\t\tconst elapsedTime\t\t\t\t= endTime - this.clickTimer; //In Milliseconds;\n\t\tconst acceptableClickTime\t= 250;\n\t\tthis.clickTimer\t\t\t\t= null;\n\t\tif(elapsedTime < acceptableClickTime){\n\t\t\t//User just clicked screen\n\t\t\tthis.xClick\t= event.clientX;\n\t\t\tthis.yClick\t= event.clientY;\n\t\t\tconst eMsg\t= this.handleCanvasClick(canvas);\n\t\t\t//return this.ballCnt;\n\t\t\treturn eMsg;\n\t\t}\n\t\telse{\n\t\t\tconsole.log(\"DRAGGING FINSIHED\");\n\t\t\treturn -1;\n\t\t}\n\t}//end handleCanvasMouseUp()\n\thandleCanvasMouseDown(event){\n\t\t/* Determine if click is long press or just a click;\n\t\t\tWill call functions on mouseup and mousemove;\n\t\t*/\n\t\tthis.clickTimer\t= new Date(); //Start timer\n\t\tif(event.changedTouches && event.changedTouches.length){\n\t\t\t//Touch event: Mobile + touch screen laptops;\n\t\t\tthis.xClick\t= Math.round(event.changedTouches[0].clientX);\n\t\t\tthis.yClick\t= Math.round(event.changedTouches[0].clientY);\n\t\t}\n\t\telse if(event){\n\t\t\tthis.xClick\t= event.clientX;\n\t\t\tthis.yClick\t= event.clientY;\n\t\t}\n\t\telse\n\t\t\tconsole.log('input not understood');\n\t\treturn true;\n\t}//end handleCanvasMouseDown()\n\thandleCanvasMouseMove(event, canvas){\n\t\t//TODO: Get movement of mouse and move rectangle accordingly;\n      const ctx\t= canvas.getContext('2d');\n\t\tif( this.hasMovableRect === false )\n\t\t\treturn true;\n\t\tif(this.rectangles.length === 0){\n\t\t\tconsole.log(\"WARNING 22: Rectangle not initialized yet;\");\n\t\t\treturn false;\n\t\t}\n\t\tif(event.changedTouches && event.changedTouches.length){\n\t\t\t//event.preventDefault();\n\t\t\tthis.xClick\t= Math.round(event.changedTouches[0].clientX);\n\t\t\tthis.yClick\t= Math.round(event.changedTouches[0].clientY);\n\t\t}\n\t\telse{\n\t\t\tthis.xClick\t= event.clientX;\n\t\t\tthis.yClick\t= event.clientY;\n\t\t}\n\t\tconst isLegalDrag = this.handleRectangleDrag(canvas);\n\t\tif(isLegalDrag)\n\t\t\tthis.updateRectangles(ctx);\n\t\treturn true;\n\t}//end handleCanvasMouseMove()\n\n\thandleKeydown(keyCode, ctx){\n\t\tif( this.hasMovableRect === false)\n\t\t\treturn true;\n\t\tif(!this.reservedKeys.includes(keyCode)){\n\t\t\tconsole.log('could not find keycode `'+keyCode+'`');\n\t\t\treturn false;\n\t\t}\n\t\t//TODO: Move below to a move rectangle function of sorts;\n\t\tfor( let i=0; i<this.rectangles.length; i++){\n\t\t\tlet rectangle\t= this.rectangles[i];\n\t\t\tlet speed\t\t= 15;\n\t\t\tlet nextX \t\t= rectangle.xLeft;\n\t\t\tlet nextY \t\t= rectangle.yTop;\n\t\t\tif(rectangle.isDraggable === false)\n\t\t\t\tcontinue;\n\t\t\trectangle.resetMovement();\n\t\t\t//Figure out speed\n\t\t\tif(this.isHeldDown){\n\t\t\t\tconst currTime\t\t\t= new Date();\n\t\t\t\tconst elapsedTime\t\t= currTime - this.timePressed;\n\t\t\t\tspeed += elapsedTime/20;\n\t\t\t\tif(speed > rectangle.width)\n\t\t\t\t\tspeed = rectangle.width/2 - 0.01; //Buffer\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isHeldDown\t= true;\n\t\t\t\tthis.timePressed\t= new Date();\n\t\t\t}\n\t\t\tif(keyCode === 37){\n\t\t\t\tnextX -= speed;\n\t\t\t\trectangle.isGoingLeft = true;\n\t\t\t}\n\t\t\tif(keyCode === 38){\n\t\t\t\tnextY -= speed;\n\t\t\t\trectangle.isGoingUp = true;\n\t\t\t}\n\t\t\tif(keyCode === 39){\n\t\t\t\tnextX += speed;\n\t\t\t\trectangle.isGoingRight = true;\n\t\t\t}\n\t\t\tif(keyCode === 40){\n\t\t\t\tnextY += speed;\n\t\t\t\trectangle.isGoingDown = true;\n\t\t\t}\n\n\t\t\tconst isMovable = rectangle.isLegalMovement(\n\t\t\t\tnextX,\n\t\t\t\tnextY,\n\t\t\t\tthis.balls\n\t\t\t);\n\t\t\tif(isMovable === false){\n\t\t\t\trectangle.nextX = rectangle.xLeft;\n\t\t\t\trectangle.nextY = rectangle.yTop;\n\t\t\t\trectangle.resetMovement();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\trectangle.nextX = nextX;\n\t\t\t\trectangle.nextY = nextY;\n\t\t\t\trectangle.handleMove(\n\t\t\t\t\tthis.width, \n\t\t\t\t\tthis.height,\n\t\t\t\t\tthis.balls\n\t\t\t\t);\n      \t\tthis.updateRectangles(ctx);\n\t\t\t}\n\t\t}\n\t}//end handleKeydown()\n\thandleKeyup(){\n\t\tthis.isHeldDown\t= false;\n\t\tthis.timePressed\t= null;\n\t\tconsole.log('key up');\n\t}//end handleKeyup()\n\thandleMount(ctx){\n\t\tif( this.hasMovableRect === true ){\n\t\t\tthis.initRectangles();\t\t\t\t//TODO: Move to initRectangles()\n\t\t\tthis.rectangleTimerID   = setInterval(\n\t\t\t\t()=>this.updateRectangles(ctx),\n\t\t\t\t25\n\t\t\t);\n\t\t}\n\t\tthis.ballTimerID   = setInterval(\n\t\t\t()=>this.updateBalls(ctx),\n\t\t\t25\n\t\t);\n\t}//end handleMount()\n\thandleUnmount(){\n\t   clearInterval(this.rectangleTimerID);\n      clearInterval(this.ballTimerID);\n\t}\n\thandleRectangleDrag(canvas){\n\t\tconst rect\t\t\t= canvas.getBoundingClientRect();\n\t\tconst clientX\t\t= this.xClick - rect.left;\n\t\tconst clientY\t\t= this.yClick - rect.top;\n\t\tfor( let i=0; i<this.rectangles.length; i++){\n\t\t\tlet rectangle\t\t= this.rectangles[i];\n\t\t\tif(rectangle.isDraggable === false)\n\t\t\t\tcontinue;\n\t\t\tconst isDragging\t= rectangle.processDrag(clientX, clientY, this.balls);\n\t\t\tif(!isDragging)\n\t\t\t\tcontinue;\t\n\t\t\trectangle.handleMove(\n\t\t\t\tthis.width, \n\t\t\t\tthis.height,\n\t\t\t\tthis.balls\n\t\t\t);\n\t\t}//end i-for\n\t\treturn true;\n\t}//end handleRectangleDrag();\n\thandleScreenResize(width, height, ctx){\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tconst drewBG = this.drawBackground(ctx);\t\t\t//Update/draw Background\n\t\tif(drewBG === false)\n\t\t\tconsole.log('big error');\n\t\tif(this.rectangles.length && this.hasMovableRect === true){\n\t\t\t//Following hack to see if current coordinates are \n\t\t\t//\tcolliding with wall or not;\n\t\t\tfor( let i=0; i<this.rectangles.length; i++){\n\t\t\t\tlet rectangle\t\t= this.rectangles[i];\n\t\t\t\trectangle.handleMove(\n\t\t\t\t\tthis.width, \n\t\t\t\t\tthis.height,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t}\n      \tthis.updateRectangles(ctx);\t\t//Update/draw Rectangle\n\t\t}\n\t\tif(this.balls){\n\t\t\tfor(let i=0; i<this.balls.length; i++){\n\t\t\t\tthis.balls[i].handleWindowResize(\n\t\t\t\t\tthis.width, \n\t\t\t\t\tthis.height, \n\t\t\t\t\tthis.balls,\n\t\t\t\t\tthis.rectangles,\n\t\t\t\t);\n\t\t\t}//end i-for\n\t\t\tthis.updateBalls(ctx);\t\t\t//Update/draw Balls;\n\t\t}\n      return true;\n\t}//end handleScreenResize()\n\tinitBalls(){\n\t\tif(this.hasBrandBalls === true){\n\t\t\tconst brandBalls = initClickables( \n\t\t\t\tthis.width, \n\t\t\t\tthis.height, \n\t\t\t\t30, \n\t\t\t\t30, \n\t\t\t\tthis.maxSpeed,\n\t\t\t\tthis.rectangles,\n\t\t\t);\n\t\t\tfor(let i=0; i<brandBalls.length; i++){\n\t\t\t\tthis.balls.push(brandBalls[i]);\n\t\t\t\tthis.ballCnt += 1;\n\t\t\t}//end i-for\n\t\t}\n\t\tfor(let i=this.ballCnt; i< this.initBallCnt; i++){\n\t\t\tlet cnt\t\t= 0;\n\t\t\tlet isLegal = false;\n\t\t\tlet newBall\t= null;\n\t\t\twhile(isLegal === false){\n\t\t\t\tnewBall = makeRandomBall(\n\t\t\t\t\tthis.width, \n\t\t\t\t\tthis.height,\n\t\t\t\t\tthis.balls.length, \n\t\t\t\t\tthis.minRadius, \n\t\t\t\t\tthis.maxRadius, \n\t\t\t\t\tthis.maxSpeed\n\t\t\t\t);\n\t\t\t\tisLegal = isLegalBall(\n\t\t\t\t\tnewBall,\n\t\t\t\t\tthis.width,\n\t\t\t\t\tthis.height,\n\t\t\t\t\tthis.balls,\n\t\t\t\t\tthis.rectangles\n\t\t\t\t);\n\t\t\t\tif(cnt === 500){\n\t\t\t\t\tconsole.log('FAILED MAKING A WORKABLE BALL');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcnt += 1;\n\t\t\t}//end while\n\t\t\tif(newBall && cnt !== 500){\n\t\t\t\tnewBall.setRandomDirection();\n\t\t\t\tthis.balls.push(newBall);\n\t\t\t\tthis.ballCnt += 1;\n\t\t\t}\n\t\t}//end i-for\n\t\treturn true;\n\t}//end initBalls()\n\tinitRectangles(){\n\t\t//Initialize a middle rectangle;\n\t\t//Rectangle is going to have draggable properties;\n\t\tconst middleCords\t= getMiddleOfCanvas(this.width, this.height);\n\t\tconst width\t\t\t= this.rectangleWidth;\n\t\tconst height\t\t= this.rectangleHeight;\n\t\tconst xLeft\t\t\t= middleCords.x - width/2;\n\t\tconst yTop\t\t\t= middleCords.y - height/2;\n\t\tconst rectangle\t= new Rectangle({\n\t\t\trectID:\t0,\n\t\t\tcolor:\t'white',\n\t\t\txLeft:\txLeft,\n\t\t\tyTop:\t\tyTop,\n\t\t\twidth:\twidth,\n\t\t\theight:\theight,\n\t\t});\n\t\trectangle.isDestructible\t= false;\n\t\trectangle.isLabeled\t\t\t= true;\n\t\trectangle.isDraggable\t\t= true;\n\t\tthis.rectangles.push(rectangle);\n\t}//end initRectangles()\n/*\nTODO: Fill this out later...\n\tresetBalls(event){\n\t\tthis.balls\t\t= [];\n\t\tthis.setState({ballCnt: 0});\n\t\t//Even though we reset the balls, we are always going to force\n\t\t//logos and hrefs on the user;\n\t\tconst brandBalls = initClickables( \n\t\t\tthis.width, \n\t\t\tthis.height, \n\t\t\t30, \n\t\t\t30, \n\t\t\tMAX_SPEED,\n\t\t\t[this.movableRectangle],\n\t\t);\n\t\tfor(let i=0; i<brandBalls.length; i++){\n\t\t\tthis.balls.push(brandBalls[i]);\n\t\t}//end i-for\n\t\tthis.setState({ballCnt: this.balls.length});\n\t\treturn true;\n\t}//end resetBalls()\n*/\n\tupdateBalls(ctx){\n\t\tif(this.width === 0)\n\t\t\treturn false;\n\t\tif(this.rectangles.length === 0 && this.hasMovableRect === true)\n\t\t\treturn false;\n\t\tif(this.balls.length === 0 && this.initBallCnt !== 0){\n\t\t\tthis.initBalls();\n\t\t}\n\t\tfor(let i=0; i<this.balls.length; i++){\n\t\t\tlet ball = this.balls[i];\n\t\t\tif(this.hasGravity === false)\n\t\t\t\tball.gravity = 0;\n\t\t\telse\n\t\t\t\tball.gravity = this.gravity;\n\t\t\tif(this.hasInertia === false){\n\t\t\t\tball.kineticLoss = 0;\n\t\t\t\tball.kineticGain = 1\n\t\t\t}\n\t\t\telse{\n\t\t\t\tball.kineticLoss = this.kineticLoss;\n\t\t\t\tball.kineticGain = this.kineticKeep;\n\t\t\t}\n\t\t\tif(this.hasBallFriction === false)\n\t\t\t\tball.friction = 0;\n\t\t\telse\n\t\t\t\tball.friction = this.ballFriction;\n\t\t\tif(this.hasWallFriction === false)\n\t\t\t\tthis.friction = 0;\n\t\t\telse\n\t\t\t\tthis.friction = this.wallFriction;\n\n\t\t\tball.move(\n\t\t\t\tthis.width,\n\t\t\t\tthis.height,\n\t\t\t\tthis.friction,\n\t\t\t\tthis.rectangles,\n\t\t\t\tthis.balls\n\t\t\t);\n\t\t}//end i-for\n\n\t\t//Update other objects \n\t\tif(this.isLeavingTrails === false)\n\t\t\tthis.drawBackground(ctx);\t//Redraw Background\n\t\tthis.drawBalls(ctx);\n\t\tif(this.rectangles.length > 0){\n\t\t\tthis.drawRectangle(ctx);\t//Update rectangle;\n\t\t}\n\t\tthis.HUD.updateDisplay(\n\t\t\tthis.width, \n\t\t\tthis.ballCnt, \n\t\t\tthis.rectangles.length-1,\n\t\t\tthis.score,\n\t\t);\n\t\tif( this.isDisplayingHud === true ){\n\t\t\tthis.HUD.labelBallCnt(ctx);\n\t\t\tthis.HUD.labelBrickCnt(ctx);\n\t\t\tthis.HUD.labelScore(ctx);\n\t\t}\n\t\treturn true;\n\t}//end updateBalls()\n\tupdateRectangles(ctx){\n\t\tif(this.width === 0)\n\t\t\treturn false;\n\t\tif(this.rectangles.length === 0 && this.hasMovableRect === true)\n\t\t\tthis.initRectangles();\n\t\tfor( let i=0; i<this.rectangles.length; i++){\n\t\t\tlet rectangle = this.rectangles[i];\n\t\t\tif(this.hasWallFriction)\n\t\t\t\trectangle.friction = this.wallFriction;\n\t\t\telse\n\t\t\t\trectangle.friction = 0;\n\t\t}//end i-for\n\t\tthis.drawRectangle(ctx);\n\t}//End updateRectangles()\n}\n","import { isLegalBall } from \"./Ball.js\";\nimport { makeRandomClickableBall } from \"./ClickableBall.js\";\n\nexport function initClickables( \n\tsWidth,\n\tsHeight, \n\tminRadius=3, \n\tmaxRadius=30, \n\tmaxSpeed=null, \n\trectangles\n){\n\tconst clickables = [\n\t\t{\n\t\t\t__name:\t\t'gmail',\n\t\t\tfaUnicode: '\\uf1a0',\n\t\t\thref:\t\t\t'mailto:Tanner.L.Woody@gmail.com',\n\t\t\tcolor:\t\t'#dd4b39',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'android',\n\t\t\tfaUnicode: '\\uF17B',\n\t\t\thref:\t\t\t'https://play.google.com/store/apps/details?id=com.beWoody.tanner.KISS_List',\n\t\t\tcolor:\t\t'#a4c639',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'strava',\n\t\t\tfaUnicode: '\\uf428',\n\t\t\thref:\t\t\t'https://www.strava.com/athletes/9502204',\n\t\t\tcolor:\t\t'#fc4c02',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'instagram',\n\t\t\tfaUnicode:\t'\\uf16d',\n\t\t\thref:\t\t\t'https://www.instagram.com/thatguywoody/',\n\t\t\tcolor:\t\t'#125688',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'facebook',\n\t\t\tfaUnicode:\t'\\uf09a',\n\t\t\thref:\t\t\t'https://www.facebook.com/tanner.woody.9',\n\t\t\tcolor:\t\t'#3B5998',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'linkedIn',\n\t\t\tfaUnicode:\t'\\uf08c',\n\t\t\thref:\t\t\t'https://www.linkedin.com/in/tanner-woody-113208b7/',\n\t\t\tcolor:\t\t'#007bb5',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'twitter',\n\t\t\tfaUnicode:\t'\\uf099',\n\t\t\thref:\t\t\t'https://twitter.com/woody_tanner',\n\t\t\tcolor:\t\t'#55ACEE',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'stackoverflow',\n\t\t\tfaUnicode:\t'\\uf16c',\n\t\t\thref:\t\t\t'https://stackoverflow.com/users/2957890/t-woody',\n\t\t\tcolor:\t\t'#FF9900',\n\t\t},\n\t\t{\n\t\t\t__name:\t\t'github',\n\t\t\tfaUnicode:\t'\\uf09b',\n\t\t\thref:\t\t\t'https://github.com/TWoody',\n\t\t\tcolor:\t\t'#f40083',\n\t\t},\n\t];\n\tlet retBalls = [];\n\tfor (let i=0; i<clickables.length; i++){\n\t\tlet clickable\t= clickables[i];\n\t\tlet isLegal\t\t=  false;\n\t\tlet cnt\t\t\t= 0;\n\t\tlet newBall\t\t= null;\n\t\twhile(isLegal === false){\n\t\t\tnewBall = makeRandomClickableBall(\n\t\t\t\tsWidth, \n\t\t\t\tsHeight,\n\t\t\t\tclickable.__name, //ballID\n\t\t\t\tminRadius, \n\t\t\t\tmaxRadius,\n\t\t\t\tclickable.faUnicode, \n\t\t\t\tclickable.href,\n\t\t\t\tmaxSpeed\n\t\t\t);\n\t\t\tisLegal = isLegalBall(newBall, sWidth, sHeight, retBalls, rectangles);\n\t\t\t//console.log('clickable attemp: ' + cnt);\n\t\t\tcnt += 1;\n\t\t\tif(cnt === 50){\n\t\t\t\tconsole.log('UNABLE TO MAKE BALL ' + clickable.__name);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}//end while\n\t\tif(newBall && cnt !== 50){\n\t\t\tnewBall.color = clickable.color;\n\t\t\tretBalls.push(newBall);\n\t\t}\n\t}//end i-for\n\treturn retBalls;\n}\n","import { World } from \"./World.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { getMiddleOfCanvas, writeToScreen } from \"./utils.js\";\n\nexport class Welcome extends World{\n\t/*\n\t\tBe the begining screen of the game;\n\t\tAdd the other levels to a clickable interface for\n\t\tour game to choose from;\n\t*/\n\tconstructor(props={}){\n\t\tprops.hasBrandBalls\t= false;\n\t\tprops.hasMovableRect\t= false;\n\t\tprops.initBallCnt\t\t= 85;\n\t\tsuper(props);\n\t\tthis.isDisplayingHud\t= false;\n\t\tthis.choiceRects\t\t= [];\n\t\tthis.choices\t\t\t= 3;\n\t\tthis.hBuffer\t\t\t= 15;\n\t\tthis.vBuffer\t\t\t= 15;\n\t\tthis.rHeight\t\t\t= 40;\n\t\tthis.fWidth\t\t\t\t= 200;\n\t\tthis.fHeight\t\t\t= this.vBuffer * (this.choices+1) + this.rHeight*this.choices;\n\t\tthis.fColor\t\t\t\t= \"white\";\n\t\tthis.buttonColor\t\t= \"grey\";\n\t\tthis.gitHref\t\t\t= \"https://github.com/Twoody/portals/tree/features/react/tests/game-1\";\n\t}\n\tupdateBalls(ctx){\n\t\tsuper.updateBalls(ctx);\n\t\tthis.choiceRects = [];\n\t\tthis.initChoiceRects();\n\t\tthis.drawWelcomeScreen(ctx);\n\t}\n\t\n\tdrawWelcomeScreen(ctx){\n\t\t//Make a welcome screen ontop of balls background;\n\t\tconst middleCords\t= getMiddleOfCanvas(this.width, this.height);\n\t\tconst xLeft\t\t\t= middleCords.x - this.fWidth/2;\n\t\tconst yTop\t\t\t= middleCords.y - this.fHeight/2;\n\t\tthis.drawFrame(ctx, xLeft, yTop);\n\t\tfor (let i=0; i<this.choiceRects.length; i++){\n\t\t\tconst cRect = this.choiceRects[i];\n\t\t\tcRect.draw(ctx);\n\t\t}\n\t\tthis.drawLabels(ctx, middleCords);\n\t}//end drawToScreen()\n\n\tdrawFrame(ctx, xLeft, yTop){\n\t\t//Frame in regards to picture frame; Not FPS;\n\t\tctx.beginPath();\t\t\t\t\t\t\t\t\t\t//Start framing\n\t\tctx.rect(\n\t\t\txLeft,\n\t\t\tyTop,\n\t\t\tthis.fWidth,\n\t\t\tthis.fHeight\n\t\t);\n\t\tctx.fillStyle = this.fColor;\n\t\tctx.fill();\n\t\tctx.closePath();\t\t\t\t\t\t\t\t\t\t//End framing\n\t}//end drawFrame()\n\tdrawLabels(ctx, middleCords){\n\t\t//All buffers relative to font and NOT dynamic;\n\t\tfor (let i=0; i<this.choiceRects.length; i++){\n\t\t\tconst rect\t\t= this.choiceRects[i];\n\t\t\tconst hBuffer\t= 5;\n\t\t\tconst vBuffer\t= 7;\n\t\t\twriteToScreen(\n\t\t\t\tctx, \n\t\t\t\trect.msg,\n\t\t\t\trect.xLeft + hBuffer, \n\t\t\t\trect.yCenter + vBuffer, \n\t\t\t\t\"orange\", \n\t\t\t\t\"15px Arial\"\n\t\t\t);\n\t\t}//end i-for\n\t}//end drawLabels()\n\tinitChoiceRects(){\n\t\tconst middleCords\t= getMiddleOfCanvas(this.width, this.height);\n\t\tconst xLeft\t\t\t= middleCords.x - this.fWidth/2;\n\t\tconst yTop\t\t\t= middleCords.y - this.fHeight/2;\n\t\tconst r1\t= new Rectangle({\n\t\t\trectID:\t0,\n\t\t\tcolor:\tthis.buttonColor,\n\t\t\txLeft:\txLeft + this.hBuffer,\n\t\t\tyTop:\t\tyTop + this.vBuffer,\n\t\t\twidth:\tthis.fWidth - this.hBuffer*2,\n\t\t\theight:\tthis.rHeight,\n\t\t});\n\t\tconst r2\t= new Rectangle({\n\t\t\trectID:\t1,\n\t\t\tcolor:\tthis.buttonColor,\n\t\t\txLeft:\txLeft + this.hBuffer,\n\t\t\tyTop:\t\tyTop + this.vBuffer*2 + this.rHeight,\n\t\t\twidth:\tthis.fWidth - this.hBuffer*2,\n\t\t\theight:\tthis.rHeight,\n\t\t});\n\t\tconst r3\t= new Rectangle({\n\t\t\trectID:\t2,\n\t\t\tcolor:\tthis.buttonColor,\n\t\t\txLeft:\txLeft + this.hBuffer,\n\t\t\tyTop:\t\tyTop + this.vBuffer*3 + this.rHeight*2,\n\t\t\twidth:\tthis.fWidth - this.hBuffer*2,\n\t\t\theight:\tthis.rHeight,\n\t\t});\n\t\tr1.msg = \"New Game\";\n\t\tr2.msg = \"Continue\";\n\t\tr3.msg = \"Source Code\";\n\t\tthis.choiceRects.push(r1);\n\t\tthis.choiceRects.push(r2);\n\t\tthis.choiceRects.push(r3);\n\t}//end initChoiceRects()\n\thandleCanvasClick(canvas){\n\t\tconst rect\t\t= canvas.getBoundingClientRect();\n\t\tconst xClick\t= this.xClick - rect.left;\t\t//X cord of user click\n\t\tconst yClick\t= this.yClick - rect.top;\t\t//Y cord of user click\n\t\tconst clickedButton = this.didClickRectangle(xClick, yClick, this.choiceRects);\n\t\tif(clickedButton === null){\n\t\t\tthis.isDisplayingHud = true;\n\t\t\tsuper.handleCanvasClick(canvas);\n\t\t}\n\t\telse{\n\t\t\tif (clickedButton.rectID === 0){\n\t\t\t\tconsole.log('init new game');\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (clickedButton.rectID === 1){\n\t\t\t\t//TODO\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if (clickedButton.rectID === 2){\n\t\t\t\t//Open up a tab to github\n\t\t\t\tconst tab = window.open(this.gitHref, '_blank');\n\t\t\t\ttab.blur();\n\t\t\t\twindow.focus();\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log('ERROR 2223: rectid not found');\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}//end handleCanvasClick();\n\tdidClickRectangle(xClick, yClick, rects=this.rectangles){\n\t\tfor( let i=0; i<rects.length; i++){\n\t\t\tconst rect = rects[i];\n\t\t\tif( rect.contains(xClick, yClick) )\n\t\t\t\treturn rect;\n\t\t}//end i-for\n\t\treturn null;\n\t}\n}//end Welcome Class\n","import { World } from \"./World.js\";\nimport { Ball } from \"./Ball.js\";\n\n\nexport class Level extends World{\n\tconstructor(props={}){\n\t\tprops.hasBrandBalls\t= false;\n\t\tprops.hasMovableRect\t= true;\n\t\tprops.initBallCnt\t\t= 1;\n\t\tsuper(props);\n\t\tthis.isGameGoing\t\t= true;\n\t\tthis.hasGravity\t\t= false;\n\t\tthis.hasWallFriction = true;\n\t\tthis.hasIneritia\t\t= true;\n\t\tthis.hasBallFriction\t= true;\n\t\tthis.brickWidth\t\t= 40;\n\t\tthis.brickHeight\t\t= 10;\n\t\tthis.didInit\t\t\t= false;\t//Init is when we hit spacebar\n\t\tthis.reservedKeys.push(32); \t//Adding spacebar eventcode;\n\t\t\t\t\t\t\t\t\t \t\t\t//\tWill remove with didInit;\n\t\tthis.isDisplayingHud\t= true;\n\t}\n\tinitBalls(){\n\t\t//WWARNING: Rewriting World.initBalls()\n\t\t//This init should only have one ball:\n\t\t//\tBall should be centered around our movableRect, which is\n\t\t//\tdefaulted as always being made first and at rectangles[0]\n\t\tif(!this.width || this.width === 0)\n\t\t\treturn false;\n\t\tconst rect\t\t= this.rectangles[0];\n\t\tconst radius\t= 20;\n\t\tconst newBall\t= new Ball({\n\t\t\tballID:\t0,\n\t\t\tcolor:\t\"yellow\",\n\t\t\txCord:\trect.xCenter,\n\t\t\tyCord:\trect.yTop - radius-0.001, //Buffer\n\t\t\tradius:\tradius,\n\t\t\tdx: \t\t0,\n\t\t\tdy:\t\t0,\n\t\t});\n\t\tnewBall.maxSpeed = radius * 0.66;\n\t\tthis.balls.push(newBall);\n\t\tthis.initBallCnt = 1;\n\t\tthis.ballCnt = 1;\n\t\treturn true;\n\t}\n\tinitRectangles(ctx){\n\t\tsuper.initRectangles(ctx);\n\t\tthis.makeDestructibleRects();\n\t}\n\tupdateBalls(ctx){\n\t\tfor (let i=0; i<this.balls.length; i++){\n\t\t\tlet ball = this.balls[i];\n\t\t\tif(ball.hitBottom(this.height)){\n\t\t\t\tthis.balls.splice(i, 1);\n\t\t\t\tthis.ballCnt -= 1;\n\t\t\t}\n\t\t}\n\t\tif(this.balls.length === 0)\n\t\t\tthis.didInit = false;\n\t\tsuper.updateBalls(ctx);\n\t//\tthis.labelBallCnt(ctx);\n\t}\n\tupdateRectangles(ctx){\n\t\t//Update the ball with the rectangle while we did not init;\n\t\tsuper.updateRectangles(ctx);\n\t\tif(this.didInit === false || this.isGameGoing === false){\n\t\t\tthis.balls = [];\n\t\t\tthis.initBalls();\n\t\t\treturn true;\n\t\t}\n\t\tlet rLen\t= this.rectangles.length;\n\t\tlet cnt\t= 0;\n\t\twhile(cnt < rLen){\n\t\t\tlet rectangle = this.rectangles[cnt]\n\t\t\tif(rectangle.isDestructing()){\n\t\t\t\t//Update Score\n\t\t\t\tthis.rectangles.splice(cnt, 1);\n\t\t\t\trLen -= 1;\n\t\t\t\tthis.score += 100;\n\t\t\t}\n\t\t\telse\n\t\t\t\tcnt += 1;\n\t\t}//end while\n\t\tif(this.rectangles.length === 1){\n\t\t\tthis.isGameGoing\t= false;\n\t\t\tthis.didInit\t\t= false;\n\t\t\tconsole.log('game over');\n\t\t\t//this.makeDestructibleRects();\n\t\t}\n\t}//end updateRectangles()\n\thandleKeydown(keycode, ctx){\n\t\tsuper.handleKeydown(keycode, ctx);\n\t\tif( this.didInit === false && keycode === 32){\n\t\t\tthis.didInit\t\t= true;\n\t\t\tthis.isGameGoing\t= true;\n\t\t\tfor( let i=0; i< this.balls.length; i++){\n\t\t\t\tlet ball = this.balls[i];\n\t\t\t\tball.accelerate(10,10);\n\t\t\t}\n\t\t}\n\t}\n\tmakeDestructibleRects(){\n\t\t//Should be over written by child classes;\n\t}\n}//End class\n","import { Level } from \"./Level.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { getMiddleOfCanvas } from \"./utils.js\";\n\nexport class Level1 extends Level{\n\t/*\n\t\tTry to build a world with a single ball;\n\t\tBuild the world with on movable rectangle;\n\t\tBuild the world with one destructable rectangle;\n\t\tAdd keycode `space` to accelerate the ball from\n\t\t\tour movable rectangle;\n\t\tIFF ball hits bottom and no more balls, reset game;\n\t*/\n\tconstructor(props={}){\n\t\tsuper(props);\n\t}\n\tmakeDestructibleRects(){\n\t\tconst middleCords\t= getMiddleOfCanvas(this.width, this.height);\n\t\tconst width\t\t\t= this.brickWidth;\n\t\tconst height\t\t= this.brickHeight;\n\t\tconst xLeft\t\t\t= middleCords.x - width/2;\n\t\tconst yTop\t\t\t= middleCords.y - height/2 - 100;\n\t\tconst rectangle\t= new Rectangle({\n\t\t\trectID:\tthis.rectangles.length,\n\t\t\tcolor:\t'white',\n\t\t\txLeft:\txLeft,\n\t\t\tyTop:\t\tyTop,\n\t\t\twidth:\twidth,\n\t\t\theight:\theight,\n\t\t});\n\t\trectangle.isDestructible\t= true;\n\t\trectangle.isDraggable\t\t= false;\n\t\tthis.rectangles.push(rectangle);\n\t}\n}//end Level1 Class\n\n","import { Level } from \"./Level.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { getMiddleOfCanvas } from \"./utils.js\";\n\nexport class Level2 extends Level{\n\t/*\n\t\tTry to build a world with a single ball;\n\t\tBuild the world with on movable rectangle;\n\t\tBuild the world with one destructable rectangle;\n\t\tAdd keycode `space` to accelerate the ball from\n\t\t\tour movable rectangle;\n\t\tIFF ball hits bottom and no more balls, reset game;\n\t*/\n\tconstructor(props={}){\n\t\tsuper(props);\n\t}\n\tmakeDestructibleRects(){\n\t\tconst middleCords\t\t= getMiddleOfCanvas(this.width, this.height);\n\t\tconst yTop\t\t\t\t= middleCords.y - Math.floor(this.height/4);\n\t\tconst padding\t\t\t= 5;\n\t\tconst possibleRects\t= Math.floor(this.width / (this.brickWidth + padding*2));\n\t\tfor (let i=0; i< possibleRects; i++){\n\t\t\tconst bx = (this.brickWidth * i) + (padding * i+1)\n\t\t\tconst rectangle\t= new Rectangle({\n\t\t\t\trectID:\tthis.rectangles.length,\n\t\t\t\tcolor:\t'white',\n\t\t\t\txLeft:\tbx,\n\t\t\t\tyTop:\t\tyTop,\n\t\t\t\twidth:\tthis.brickWidth,\n\t\t\t\theight:\tthis.brickHeight,\n\t\t\t});\n\t\t\trectangle.isDestructible\t= true;\n\t\t\trectangle.isDraggable\t\t= false;\n\t\t\tthis.rectangles.push(rectangle);\n\t\t}//end i-for\n\t\treturn this.rectangles.length-1;\n\t}\n}//end Level2 Class\n","import { Level } from \"./Level.js\";\nimport { Rectangle } from \"./Rectangle.js\";\nimport { getMiddleOfCanvas } from \"./utils.js\";\n\nexport class Level3 extends Level{\n\t/*\n\t\tTry to build a world with a single ball;\n\t\tBuild the world with on movable rectangle;\n\t\tBuild the world with one destructable rectangle;\n\t\tAdd keycode `space` to accelerate the ball from\n\t\t\tour movable rectangle;\n\t\tIFF ball hits bottom and no more balls, reset game;\n\t*/\n\tconstructor(props={}){\n\t\tsuper(props);\n\t}\n\tmakeDestructibleRects(){\n\t\tconst middleCords\t\t= getMiddleOfCanvas(this.width, this.height);\n\t\tconst yTop\t\t\t\t= middleCords.y - Math.floor(this.height/4);\n\t\tconst hPadding\t\t\t= 50;\n\t\tconst vPadding\t\t\t= 2;\n\t\tconst hPossibleRects\t= Math.floor(this.width / (this.brickWidth + hPadding));\n\t\tconst vPossibleRects\t= Math.floor(this.height / (this.brickHeight + vPadding + 20))\n\t\tfor (let i=0; i< hPossibleRects; i++){\n\t\t\tconst bx = (this.brickWidth * i) + (hPadding * (i+1))\n\t\t\tfor (let j=0; j<vPossibleRects; j++){\n\t\t\t\tconst by = yTop + (this.brickHeight * j) + (vPadding * j+1)\n\t\t\t\tconst rectangle\t= new Rectangle({\n\t\t\t\t\trectID:\tthis.rectangles.length,\n\t\t\t\t\tcolor:\t'white',\n\t\t\t\t\txLeft:\tbx,\n\t\t\t\t\tyTop:\t\tby,\n\t\t\t\t\twidth:\tthis.brickWidth,\n\t\t\t\t\theight:\tthis.brickHeight,\n\t\t\t\t});\n\t\t\t\trectangle.isDestructible\t= true;\n\t\t\t\trectangle.isDraggable\t\t= false;\n\t\t\t\tthis.rectangles.push(rectangle);\n\t\t\t}//end j-for\n\t\t}//end i-for\n\t\tconst paddleBottomY = this.height + this.rectangles[0].height - 0.01;\n\t\tthis.rectangles[0].processDrag(\n\t\t\tthis.rectangles[0].xLeft, \n\t\t\tpaddleBottomY, \n\t\t\t[]\n\t\t);\n\t\tthis.rectangles[0].handleMove(\n\t\t\tthis.width, \n\t\t\tthis.height,\n\t\t\t[]\n\t\t);\n\n\t\treturn this.rectangles.length-1;\n\t}\n}//end Level3 Class\n","import React from \"react\";\nimport { accelerateBalls, decelerateBalls, shrinkBalls } from \"./Ball.js\";\nimport { Background } from \"./Background.js\"\nimport { Welcome } from \"./Welcome.js\"\nimport { Level1 } from \"./Level1.js\"\nimport { Level2 } from \"./Level2.js\"\nimport { Level3 } from \"./Level3.js\"\n\nclass BallPen extends React.Component{\n   constructor(props){\n      super(props);\n\t\tthis.score\t\t\t\t\t\t\t= 0;\n\t\tthis.currentLevel\t\t\t\t\t= 0;\n\t\tthis.world\t\t\t\t\t\t\t= new Welcome();\n\t\tthis.balls\t\t\t\t\t\t\t= [];\n      this.updateWindowDimensions\t= this.updateWindowDimensions.bind(this);\n\t\tthis.handleKeydown\t\t\t\t= this.handleKeydown.bind(this);\n\t\tthis.handleKeyup\t\t\t\t\t= this.handleKeyup.bind(this);\n\t\tthis.handleCanvasMouseDown\t\t= this.handleCanvasMouseDown.bind(this);\n\t\tthis.handleCanvasMouseMove\t\t= this.handleCanvasMouseMove.bind(this);\n\t\tthis.handleCanvasMouseUp\t\t= this.handleCanvasMouseUp.bind(this);\n\t\tthis.handleInputChange\t\t\t= this.handleInputChange.bind(this);\n\t\tthis.handleToggleButton\t\t\t= this.handleToggleButton.bind(this);\n      this.state      = {\n         height:\t\t0,\n         width:\t\t0,\n\t\t\tclickTimer:\t0,\n\t\t\txClick:\t\t0,\n\t\t\tyClick:\t\t0,\n\t\t\thasGravity:\t\t\tthis.world.hasGravity\t\t,\n\t\t\tisLeavingTrails:\tthis.world.isLeavingTrails\t,\n\t\t\thasWallFriction:\tthis.world.hasWallFriction\t,\n\t\t\thasBallFriction:\tthis.world.hasBallFriction\t,\n\t\t\thasInertia:\t\t\tthis.world.hasInertia\t\t,\n\t\t\t//isGameGoing:\t\tthis.world.isGameGoing,\n\t\t\tisGameGoing:\t\tfalse,\n      };\n\n   }//end constructor()\n\thandleInputChange(event) {\n\t\tconst target\t= event.target;\n\t\tconst value\t\t= target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst name\t\t= target.name;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t\treturn true;\n\t}//end handleInputChange()\n\thandleToggleButton(event){\n\t\tconst target\t= event.target;\n\t\tconst name\t\t= target.name;\n\t\tthis.world[name] = !this.world[name];\n\t\tthis.setState( state => ({\n\t\t\t[name] : this.world[name]\n\t\t}));\n\t\treturn true;\n\t}\n\thandleCanvasMouseDown(event){\n\t\tif(event.changedTouches && event.changedTouches.length){\n\t\t\t//Touch event: Mobile + touch screen laptops;\n\t\t\tdocument.addEventListener('touchmove', \n\t\t\t\tev =>{\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t\tev.stopImmediatePropagation();\n\t\t\t\t},\n\t\t\t\t{passive:false}\n\t\t\t);\n\t\t\tdocument.addEventListener('touchmove',\tthis.handleCanvasMouseMove);\n\t\t\tdocument.addEventListener('touchend',\tthis.handleCanvasMouseUp);\n\n\t\t}//End if-touchscreen\n\t\telse if(event){\n\t\t\tdocument.addEventListener('mousemove', this.handleCanvasMouseMove);\n\t\t\tdocument.addEventListener('mouseup', this.handleCanvasMouseUp);\n\t\t}\n\t\tthis.world.handleCanvasMouseDown(event);\n\t}//end handleCanvasMouseDown\n\thandleCanvasMouseUp(event){\n\t\tdocument.removeEventListener('mousedown',\tthis.handleCanvasMouseDown);\n\t\tdocument.removeEventListener('mouseup',\tthis.handleCanvasMouseUp);\n\t\tdocument.removeEventListener('mousemove',\tthis.handleCanvasMouseMove);\n\t\tconst canvas\t\t= this.canvasRef;\n\t\tconst eMsg\t\t\t= parseInt(this.world.handleCanvasMouseUp(event, canvas));\n\t\tif (this.state.isGameGoing === false && eMsg > 0){\n\t\t\tthis.currentLevel += 1;\n\t\t\tthis.updateWorld( eMsg );\n\t\t}\n\t\treturn true;\n\t}//end handleCanvasMouseUp()\n\thandleCanvasMouseMove(event){\n\t\tconst canvas\t= this.canvasRef;\n\t\treturn this.world.handleCanvasMouseMove(event, canvas);\n\t}//end handleCanvasMouseMove()\n\thandleKeydown(event){\n\t\tif(!event || !event.key){\n\t\t\tconsole.log(\"WARNING 33: KEYBOARD INPUT NOT UNDERSTOOD\");\n\t\t\treturn false;\n\t\t}\n\t\tif(this.world.rectangles.length === 0){\n\t\t\tconsole.log(\"WARNING 33: Rectangle not initialized yet;\");\n\t\t\treturn false;\n\t\t}\n\t\tconst canvas\t\t= this.canvasRef;\n      const ctx\t\t\t= canvas.getContext('2d');\n\t\tconst isReserved\t= this.isKeyRegistered(event.keyCode);\n\t\tif( isReserved === false ){\n\t\t\t//console.log('keyboard input `' + event.keyCode + '` not registered');\n\t\t\treturn false;\n\t\t}\n\t\tevent.preventDefault();\n\t\tthis.world.handleKeydown(event.keyCode, ctx);\n\t\treturn true;\n\t}//end handleKeydown()\n\thandleKeymove(){\n\t\treturn this.world.handleKeymove();\n\t}//end handleKeymove()\n\thandleKeyup(event){\n\t\tconst isReserved\t= this.isKeyRegistered(event.keyCode);\n\t\tif( isReserved === false)\n\t\t\treturn false;\n\t\treturn this.world.handleKeyup();\n\t}//end handleKeyup()\n\tisKeyRegistered(keycode){\n\t\tlet isReserved = false;\n\t\tfor(let i=0; i<this.world.reservedKeys.length; i++){\n\t\t\tif (this.world.reservedKeys[i] === keycode){\n\t\t\t\tisReserved = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}//end i-for\n\t\treturn isReserved;\n\t}//end isKeyRegistered()\n\tcomponentDidMount(){\n      window.addEventListener('resize', this.updateWindowDimensions);\n      document.body.addEventListener('keydown',\tthis.handleKeydown);\n      document.body.addEventListener('keyup',\tthis.handleKeyup);\n\t\tconst canvas\t= this.canvasRef;\n      const ctx\t\t= canvas.getContext('2d');\n \t   this.updateWindowDimensions();\n\t\tthis.world.handleMount(ctx);\n\t\tthis.statusID\t= setInterval(\n\t\t\t()=>this.updateGameStatus(),\n\t\t\t25\n\t\t);\n   }\n   componentWillUnmount(){\n      window.removeEventListener('resize', this.updateWindowDimensions);\n      document.body.removeEventListener('keydown',\t\tthis.handleKeydown);\n      document.body.removeEventListener('keyup',\t\tthis.handleKeyup);\n\t\tdocument.removeEventListener('mousemove',\tthis.handleCanvasMouseMove);\n\t\tdocument.removeEventListener('mouseup',\t\tthis.handleCanvasMouseUp);\n\t\tdocument.removeEventListener('touchstart',\tthis.handleCanvasMouseDown);\n\t\tdocument.removeEventListener('touchmove',\tthis.handleCanvasMouseMove);\n\t\tdocument.removeEventListener('touchend',\t\tthis.handleCanvasMouseUp);\n\t\tthis.world.handleUnmount();\n\t}\n   componentDidUpdate() {\n\t\t//Going to handle updates as we go to enhance efficiency;\n   }\n\tupdateGameStatus(){\n\t\t//For a linear game\n\t\tthis.score = this.world.score;\n\t\tif(this.world.isGameGoing !== null\n\t\t\t&& this.world.isGameGoing !== this.state.isGameGoing\n\t\t){\n      \tthis.setState({\n         \tisGameGoing: this.world.isGameGoing, \n      \t});\n\t\t\tif( this.world.isGameGoing === false ){\n\t\t\t\tthis.currentLevel += 1;\n\t\t\t\tthis.updateWorld( this.currentLevel );\n\t\t\t}\n\t\t}\n\t}//end updateGameStatus\n\tupdateWorld( nextWorld ){\n\t\tthis.componentWillUnmount();\n\t\tif(nextWorld === 1)\n\t\t\tthis.world = new Level1({score:this.score});\n\t\telse if(nextWorld === 2)\n\t\t\tthis.world = new Level2({score:this.score});\n\t\telse if(nextWorld === 3){\n\t\t\tthis.world = new Level3({score:this.score})\n\t\t}\n\t\t//else if(nextWorld === 4)\n\t\t//\tthis.world = new Background({score:this.score})\n\t\telse{\n\t\t\tthis.world\t\t\t= new Welcome();\n\t\t\tthis.currentLevel\t= 0;\n\t\t}\n\t\tthis.componentDidMount();\n\t}\n   updateWindowDimensions(){\n      let width\t\t= window.innerWidth;\t//Matching with bootstrap hack\n      let height\t\t= window.innerHeight;\n\t\tconst canvas\t= this.canvasRef;\n      const ctx\t\t= canvas.getContext('2d');\n\t\twidth -= 50;\n      height   -= 180;   //Buffer...\n      if (height < 0)\n         height = 0;\n\t\tif(width < 0)\n\t\t\twidth = 0;\n      this.setState({\n         width: width, \n         height: height,\n      });\n\t\tthis.world.handleScreenResize(width, height, ctx);\n\t}//end updateWindowDimenstions()\n   render(){\n\t\tconst\tdivStyle = {\n\t\t\tpaddingRight:\t35,\n\t\t\tpaddingLeft:\t35,\n\t\t};\n      const penStyle\t= {\n\t\t\tfontFamily:\t\t\"Font Awesome 5 Free\",\n\t\t\tfontWeight:\t\t400,\n         border:   \t\t\"1px solid #000000\",\n\t\t\ttouchAction:\t\"none\",\n      };\n\t\tconst buttonStyle = {\n\t\t\tcolor: \"white\",\n\t\t\tbackgroundColor: \"black\",\n\t\t}\n      return (\n         <div style={divStyle}>\n            <canvas ref={canvas => this.canvasRef = canvas}\n\t\t\t\t\tid=\"hireMeCanvas\"\n               width={this.state.width}\n               height={this.state.height}\n               style={penStyle}\n\t\t\t\t\tonMouseDown\t\t= { this.handleCanvasMouseDown }\n\t\t\t\t\tonTouchStart\t= { this.handleCanvasMouseDown }\n            />\n\t\t\t\t<table width={this.state.width}>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button\n               \t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\tname=\"hasGravity\"\n\t\t\t\t\t\t\t\tonClick={this.handleToggleButton}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\tTurn Gravity {this.state.hasGravity ? \"Off\" : \"On\"}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button\n               \t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\tname=\"hasWallFriction\"\n\t\t\t\t\t\t\t\tonClick={this.handleToggleButton}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\t{this.state.hasWallFriction ? \"Remove\" : \"Apply\"} Wall Friction\n\t\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button\n               \t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\tname=\"hasBallFriction\"\n\t\t\t\t\t\t\t\tonClick={this.handleToggleButton}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\t{this.state.hasBallFriction ? \"Remove\" : \"Apply\"} Ball Friction\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button\n               \t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\tname=\"hasInertia\"\n\t\t\t\t\t\t\t\tonClick={this.handleToggleButton}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\t{this.state.hasInertia ? \"Remove\" : \"Apply\"} Energy Transfer\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button\n               \t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\tname=\"isLeavingTrails\"\n\t\t\t\t\t\t\t\tonClick={this.handleToggleButton}\n\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\t{this.state.isLeavingTrails ? \"Remove\" : \"Keep\"} Trails\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button style={buttonStyle}>\n\t\t\t\t\t\t\t\tReset Balls\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tstyle={buttonStyle} \n\t\t\t\t\t\t\t\tonClick={e => { shrinkBalls(this.world.balls); } }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tShrink Some Balls\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tstyle={buttonStyle} \n\t\t\t\t\t\t\t\tonClick={ e=> {accelerateBalls(this.world.balls); } }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tAccelerate Balls\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tstyle={buttonStyle} \n\t\t\t\t\t\t\tonClick={ e=> { decelerateBalls(this.world.balls); } }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tDecelerate Balls\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n         </div>\n      );\n   }\n}\nexport default BallPen;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BallPen from \"./BallPen\";\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<BallPen />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}